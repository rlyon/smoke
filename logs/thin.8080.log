>> Writing PID to tmp/pids/thin.8080.pid
>> Thin web server (v1.3.1 codename Triple Espresso)
>> Debugging ON
>> Tracing ON
>> Maximum connections set to 1024
>> Listening on 127.0.0.1:8080, CTRL+C to stop
>> Exiting!
>> Writing PID to tmp/pids/thin.8080.pid
>> Thin web server (v1.3.1 codename Triple Espresso)
>> Debugging ON
>> Tracing ON
>> Maximum connections set to 1024
>> Listening on 127.0.0.1:8080, CTRL+C to stop
GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

!! Unexpected error while processing request: undefined method `split' for nil:NilClass
undefined method `split' for nil:NilClass
	/Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/server/auth.rb:148:in `credentials'
	/Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/server/auth.rb:152:in `access_id'
	/Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/server/auth.rb:112:in `find_user'
	/Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/server/auth.rb:79:in `initialize'
	/Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/server/auth.rb:11:in `new'
	/Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/server/auth.rb:11:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/lint.rb:48:in `_call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/lint.rb:36:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:80:in `block in pre_process'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:78:in `catch'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:78:in `pre_process'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:53:in `process'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:38:in `receive_data'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/eventmachine-0.12.10/lib/eventmachine.rb:256:in `run_machine'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/eventmachine-0.12.10/lib/eventmachine.rb:256:in `run'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/backends/base.rb:61:in `start'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/server.rb:159:in `start'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/controllers/controller.rb:86:in `start'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:185:in `run_command'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:151:in `run!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/bin/thin:6:in `<top (required)>'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `load'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `<main>'>> Exiting!
>> Writing PID to tmp/pids/thin.8080.pid
>> Exiting!
/Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require': no such file to load -- ./lib/sinatra/session (LoadError)
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from web.ru:1:in `block in <main>'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/builder.rb:51:in `instance_eval'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/builder.rb:51:in `initialize'
	from web.ru:1:in `new'
	from web.ru:1:in `<main>'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/rack/adapter/loader.rb:36:in `eval'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/rack/adapter/loader.rb:36:in `load'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/controllers/controller.rb:181:in `load_rackup_config'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/controllers/controller.rb:71:in `start'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:185:in `run_command'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:151:in `run!'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/bin/thin:6:in `<top (required)>'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `load'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `<main>'
>> Writing PID to tmp/pids/thin.8080.pid
>> Exiting!
/Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/dependency.rb:247:in `to_specs': Could not find mime-types (>= 0) amongst [activemodel-3.1.3, activerecord-3.1.3, activesupport-3.1.3, arel-2.2.1, bson-1.4.0, builder-3.0.0, bundler-1.0.21, daemons-1.1.4, eventmachine-0.12.10, i18n-0.6.0, mongo-1.4.0, multi_json-1.0.3, nokogiri-1.5.0, rack-1.3.5, rack-protection-1.1.4, rake-0.8.7, sinatra-1.3.1, sqlite3-1.3.4, thin-1.3.1, tilt-1.3.3, tzinfo-0.3.31, yard-0.7.3] (Gem::LoadError)
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/dependency.rb:256:in `to_spec'
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems.rb:1195:in `gem'
	from /Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/marcel-aws/s3/extensions.rb:151:in `require_library_or_gem'
	from /Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/marcel-aws/s3.rb:13:in `<top (required)>'
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from /Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/web.rb:12:in `<top (required)>'
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from /Users/rlyon/src/ruby/sinatra/smoke_server/config/environment/web.rb:1:in `<top (required)>'
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from web.ru:2:in `block in <main>'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/builder.rb:51:in `instance_eval'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/builder.rb:51:in `initialize'
	from web.ru:1:in `new'
	from web.ru:1:in `<main>'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/rack/adapter/loader.rb:36:in `eval'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/rack/adapter/loader.rb:36:in `load'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/controllers/controller.rb:181:in `load_rackup_config'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/controllers/controller.rb:71:in `start'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:185:in `run_command'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:151:in `run!'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/bin/thin:6:in `<top (required)>'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `load'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `<main>'
>> Writing PID to tmp/pids/thin.8080.pid
>> Exiting!
/Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/dependency.rb:247:in `to_specs': Could not find xml-simple (>= 0) amongst [activemodel-3.1.3, activerecord-3.1.3, activesupport-3.1.3, arel-2.2.1, bson-1.4.0, builder-3.0.0, bundler-1.0.21, daemons-1.1.4, eventmachine-0.12.10, i18n-0.6.0, mime-types-1.17.2, mongo-1.4.0, multi_json-1.0.3, nokogiri-1.5.0, rack-1.3.5, rack-protection-1.1.4, rake-0.8.7, sinatra-1.3.1, sqlite3-1.3.4, thin-1.3.1, tilt-1.3.3, tzinfo-0.3.31, yard-0.7.3] (Gem::LoadError)
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/dependency.rb:256:in `to_spec'
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems.rb:1195:in `gem'
	from /Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/marcel-aws/s3/extensions.rb:151:in `require_library_or_gem'
	from /Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/marcel-aws/s3.rb:45:in `<top (required)>'
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from /Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/web.rb:12:in `<top (required)>'
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from /Users/rlyon/src/ruby/sinatra/smoke_server/config/environment/web.rb:1:in `<top (required)>'
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from /Users/rlyon/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require'
	from web.ru:2:in `block in <main>'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/builder.rb:51:in `instance_eval'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/builder.rb:51:in `initialize'
	from web.ru:1:in `new'
	from web.ru:1:in `<main>'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/rack/adapter/loader.rb:36:in `eval'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/rack/adapter/loader.rb:36:in `load'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/controllers/controller.rb:181:in `load_rackup_config'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/controllers/controller.rb:71:in `start'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:185:in `run_command'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:151:in `run!'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/bin/thin:6:in `<top (required)>'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `load'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `<main>'
>> Writing PID to tmp/pids/thin.8080.pid
>> Exiting!
web.ru:6:in `block in <main>': uninitialized constant Smoke::Server (NameError)
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/builder.rb:51:in `instance_eval'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/builder.rb:51:in `initialize'
	from web.ru:1:in `new'
	from web.ru:1:in `<main>'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/rack/adapter/loader.rb:36:in `eval'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/rack/adapter/loader.rb:36:in `load'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/controllers/controller.rb:181:in `load_rackup_config'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/controllers/controller.rb:71:in `start'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:185:in `run_command'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:151:in `run!'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/bin/thin:6:in `<top (required)>'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `load'
	from /Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `<main>'
>> Writing PID to tmp/pids/thin.8080.pid
>> Thin web server (v1.3.1 codename Triple Espresso)
>> Debugging ON
>> Tracing ON
>> Maximum connections set to 1024
>> Listening on 127.0.0.1:8080, CTRL+C to stop
GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Cache-Control: max-age=0
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

Errno::ENOENT - No such file or directory - /Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/web/../../../views/index.erb:
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt/template.rb:67:in `binread'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt/template.rb:67:in `block in initialize'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt/template.rb:68:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt/template.rb:68:in `initialize'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:661:in `new'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:661:in `block in compile_template'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt.rb:127:in `fetch'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:640:in `compile_template'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:624:in `render'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:512:in `erb'
	/Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/web/app.rb:20:in `block in <class:App>'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1212:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1212:in `block in compile!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:772:in `[]'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:772:in `block (3 levels) in route!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:788:in `route_eval'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:772:in `block (2 levels) in route!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:821:in `block in process_route'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:819:in `catch'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:819:in `process_route'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:771:in `block in route!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:770:in `each'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:770:in `route!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:886:in `dispatch!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:706:in `block in call!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:871:in `block in invoke'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:871:in `catch'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:871:in `invoke'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:706:in `call!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:692:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/session/abstract/id.rb:195:in `context'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/session/abstract/id.rb:190:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/xss_header.rb:22:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/path_traversal.rb:16:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/json_csrf.rb:17:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/base.rb:47:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/xss_header.rb:22:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/nulllogger.rb:9:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/head.rb:9:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/showexceptions.rb:21:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1334:in `block in call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1403:in `synchronize'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1334:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/lint.rb:48:in `_call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/lint.rb:36:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:80:in `block in pre_process'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:78:in `catch'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:78:in `pre_process'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:53:in `process'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:38:in `receive_data'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/eventmachine-0.12.10/lib/eventmachine.rb:256:in `run_machine'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/eventmachine-0.12.10/lib/eventmachine.rb:256:in `run'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/backends/base.rb:61:in `start'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/server.rb:159:in `start'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/controllers/controller.rb:86:in `start'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:185:in `run_command'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:151:in `run!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/bin/thin:6:in `<top (required)>'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `load'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `<main>'
HTTP/1.1 500 Internal Server Error
Content-Type: text/html
Content-Length: 168697
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Errno::ENOENT at &#x2F;</title>

  <script type="text/javascript">
  //<!--
  function toggle(id) {
    var pre  = document.getElementById("pre-" + id);
    var post = document.getElementById("post-" + id);
    var context = document.getElementById("context-" + id);

    if (pre.style.display == 'block') {
      pre.style.display = 'none';
      post.style.display = 'none';
      context.style.background = "none";
    } else {
      pre.style.display = 'block';
      post.style.display = 'block';
      context.style.background = "#fffed9";
    }
  }

  function toggleBacktrace(){
    var bt = document.getElementById("backtrace");
    var toggler = document.getElementById("expando");

    if (bt.className == 'condensed') {
      bt.className = 'expanded';
      toggler.innerHTML = "(condense)";
    } else {
      bt.className = 'condensed';
      toggler.innerHTML = "(expand)";
    }
  }
  //-->
  </script>

<style type="text/css" media="screen">
  *                   {margin: 0; padding: 0; border: 0; outline: 0;}
  div.clear           {clear: both;}
  body                {background: #EEEEEE; margin: 0; padding: 0;
                       font-family: 'Lucida Grande', 'Lucida Sans Unicode',
                       'Garuda';}
  code                {font-family: 'Lucida Console', monospace;
                       font-size: 12px;}
  li                  {height: 18px;}
  ul                  {list-style: none; margin: 0; padding: 0;}
  ol:hover            {cursor: pointer;}
  ol li               {white-space: pre;}
  #explanation        {font-size: 12px; color: #666666;
                       margin: 20px 0 0 100px;}
/* WRAP */
  #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;
                       padding: 30px 50px 20px 50px;
                       border-left: 1px solid #DDDDDD;
                       border-right: 1px solid #DDDDDD;}
/* HEADER */
  #header             {margin: 0 auto 25px auto;}
  #header img         {float: left;}
  #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;
                       font-family: 'Lucida Grande', 'Lucida Sans Unicode';}
  h1                  {margin: 0; font-size: 36px; color: #981919;}
  h2                  {margin: 0; font-size: 22px; color: #333333;}
  #header ul          {margin: 0; font-size: 12px; color: #666666;}
  #header ul li strong{color: #444444;}
  #header ul li       {display: inline; padding: 0 10px;}
  #header ul li.first {padding-left: 0;}
  #header ul li.last  {border: 0; padding-right: 0;}
/* BODY */
  #backtrace,
  #get,
  #post,
  #cookies,
  #rack               {width: 980px; margin: 0 auto 10px auto;}
  p#nav               {float: right; font-size: 14px;}
/* BACKTRACE */
  a#expando           {float: left; padding-left: 5px; color: #666666;
                      font-size: 14px; text-decoration: none; cursor: pointer;}
  a#expando:hover     {text-decoration: underline;}
  h3                  {float: left; width: 100px; margin-bottom: 10px;
                       color: #981919; font-size: 14px; font-weight: bold;}
  #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}
  #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;
                           font-size: 12px; color: #333333;}
  #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;
                       border-bottom: 0;}
  #backtrace ol       {width: 920px; margin-left: 50px;
                       font: 10px 'Lucida Console', monospace; color: #666666;}
  #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;
                       padding: 2px 0;}
  #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}
  #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;
                       padding: 3px 0;}
  #backtrace-ul .code {padding: 6px 0 4px 0;}
  #backtrace.condensed .system,
  #backtrace.condensed .framework {display:none;}
/* REQUEST DATA */
  p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}
  table.req           {width: 980px; text-align: left; font-size: 12px;
                       color: #666666; padding: 0; border-spacing: 0;
                       border: 1px solid #EEEEEE; border-bottom: 0;
                       border-left: 0;
                       clear:both}
  table.req tr th     {padding: 2px 10px; font-weight: bold;
                       background: #F7F7F7; border-bottom: 1px solid #EEEEEE;
                       border-left: 1px solid #EEEEEE;}
  table.req tr td     {padding: 2px 20px 2px 10px;
                       border-bottom: 1px solid #EEEEEE;
                       border-left: 1px solid #EEEEEE;}
/* HIDE PRE/POST CODE AT START */
  .pre-context,
  .post-context       {display: none;}

  table td.code       {width:750px}
  table td.code div   {width:750px;overflow:hidden}
</style>
</head>
<body>
  <div id="wrap">
    <div id="header">
      <img src="/__sinatra__/500.png" alt="application error" height="161" width="313" />
      <div id="summary">
        <h1><strong>Errno::ENOENT</strong> at <strong>&#x2F;
          </strong></h1>
        <h2>No such file or directory - &#x2F;Users&#x2F;rlyon&#x2F;src&#x2F;ruby&#x2F;sinatra&#x2F;smoke_server&#x2F;lib&#x2F;smoke&#x2F;web&#x2F;..&#x2F;..&#x2F;..&#x2F;views&#x2F;index.erb</h2>
        <ul>
          <li class="first"><strong>file:</strong> <code>
            template.rb</code></li>
          <li><strong>location:</strong> <code>binread
            </code></li>
          <li class="last"><strong>line:
            </strong> 67</li>
        </ul>
      </div>
      <div class="clear"></div>
    </div>

    <div id="backtrace" class='condensed'>
      <h3>BACKTRACE</h3>
      <p><a href="#" id="expando"
            onclick="toggleBacktrace(); return false">(expand)</a></p>
      <p id="nav"><strong>JUMP TO:</strong>
         <a href="#get-info">GET</a>
         <a href="#post-info">POST</a>
         <a href="#cookie-info">COOKIES</a>
         <a href="#env-info">ENV</a>
      </p>
      <div class="clear"></div>

      <ul id="backtrace-ul">

      
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>binread</strong></code>
            </li>

            <li class="code system">
              
              <ol start="60"
                  class="pre-context" id="pre-1"
                  onclick="toggle(1);">
                
                <li class="pre-context-line"><code>      @compiled_method = {}
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # used on 1.9 to set the encoding if it is not set elsewhere (like a magic comment)
</code></li>
                
                <li class="pre-context-line"><code>      # currently only used if template compiles to ruby
</code></li>
                
                <li class="pre-context-line"><code>      @default_encoding = @options.delete :default_encoding
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # load template data and prepare (uses binread to avoid encoding issues)
</code></li>
                
              </ol>
              

              <ol start="67" class="context" id="1"
                  onclick="toggle(1);">
                <li class="context-line" id="context-1"><code>      @reader = block || lambda { |t| File.respond_to?(:binread) ? File.binread(@file) : File.read(@file) }</code></li>
              </ol>

              
              <ol start="68" class="post-context"
                  id="post-1" onclick="toggle(1);">
                
                <li class="post-context-line"><code>      @data = @reader.call(self)
</code></li>
                
                <li class="post-context-line"><code>      prepare
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Render the template in the given scope with the locals specified. If a
</code></li>
                
                <li class="post-context-line"><code>    # block is given, it is typically available within the template via
</code></li>
                
                <li class="post-context-line"><code>    # +yield+.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>block in initialize</strong></code>
            </li>

            <li class="code system">
              
              <ol start="60"
                  class="pre-context" id="pre-2"
                  onclick="toggle(2);">
                
                <li class="pre-context-line"><code>      @compiled_method = {}
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # used on 1.9 to set the encoding if it is not set elsewhere (like a magic comment)
</code></li>
                
                <li class="pre-context-line"><code>      # currently only used if template compiles to ruby
</code></li>
                
                <li class="pre-context-line"><code>      @default_encoding = @options.delete :default_encoding
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # load template data and prepare (uses binread to avoid encoding issues)
</code></li>
                
              </ol>
              

              <ol start="67" class="context" id="2"
                  onclick="toggle(2);">
                <li class="context-line" id="context-2"><code>      @reader = block || lambda { |t| File.respond_to?(:binread) ? File.binread(@file) : File.read(@file) }</code></li>
              </ol>

              
              <ol start="68" class="post-context"
                  id="post-2" onclick="toggle(2);">
                
                <li class="post-context-line"><code>      @data = @reader.call(self)
</code></li>
                
                <li class="post-context-line"><code>      prepare
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Render the template in the given scope with the locals specified. If a
</code></li>
                
                <li class="post-context-line"><code>    # block is given, it is typically available within the template via
</code></li>
                
                <li class="post-context-line"><code>    # +yield+.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="61"
                  class="pre-context" id="pre-3"
                  onclick="toggle(3);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # used on 1.9 to set the encoding if it is not set elsewhere (like a magic comment)
</code></li>
                
                <li class="pre-context-line"><code>      # currently only used if template compiles to ruby
</code></li>
                
                <li class="pre-context-line"><code>      @default_encoding = @options.delete :default_encoding
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # load template data and prepare (uses binread to avoid encoding issues)
</code></li>
                
                <li class="pre-context-line"><code>      @reader = block || lambda { |t| File.respond_to?(:binread) ? File.binread(@file) : File.read(@file) }
</code></li>
                
              </ol>
              

              <ol start="68" class="context" id="3"
                  onclick="toggle(3);">
                <li class="context-line" id="context-3"><code>      @data = @reader.call(self)</code></li>
              </ol>

              
              <ol start="69" class="post-context"
                  id="post-3" onclick="toggle(3);">
                
                <li class="post-context-line"><code>      prepare
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Render the template in the given scope with the locals specified. If a
</code></li>
                
                <li class="post-context-line"><code>    # block is given, it is typically available within the template via
</code></li>
                
                <li class="post-context-line"><code>    # +yield+.
</code></li>
                
                <li class="post-context-line"><code>    def render(scope=Object.new, locals={}, &amp;block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>initialize</strong></code>
            </li>

            <li class="code system">
              
              <ol start="61"
                  class="pre-context" id="pre-4"
                  onclick="toggle(4);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # used on 1.9 to set the encoding if it is not set elsewhere (like a magic comment)
</code></li>
                
                <li class="pre-context-line"><code>      # currently only used if template compiles to ruby
</code></li>
                
                <li class="pre-context-line"><code>      @default_encoding = @options.delete :default_encoding
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # load template data and prepare (uses binread to avoid encoding issues)
</code></li>
                
                <li class="pre-context-line"><code>      @reader = block || lambda { |t| File.respond_to?(:binread) ? File.binread(@file) : File.read(@file) }
</code></li>
                
              </ol>
              

              <ol start="68" class="context" id="4"
                  onclick="toggle(4);">
                <li class="context-line" id="context-4"><code>      @data = @reader.call(self)</code></li>
              </ol>

              
              <ol start="69" class="post-context"
                  id="post-4" onclick="toggle(4);">
                
                <li class="post-context-line"><code>      prepare
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Render the template in the given scope with the locals specified. If a
</code></li>
                
                <li class="post-context-line"><code>    # block is given, it is typically available within the template via
</code></li>
                
                <li class="post-context-line"><code>    # +yield+.
</code></li>
                
                <li class="post-context-line"><code>    def render(scope=Object.new, locals={}, &amp;block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>new</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="654"
                  class="pre-context" id="pre-5"
                  onclick="toggle(5);">
                
                <li class="pre-context-line"><code>              path ||= file # keep the initial path rather than the last one
</code></li>
                
                <li class="pre-context-line"><code>              if found = File.exists?(file)
</code></li>
                
                <li class="pre-context-line"><code>                path = file
</code></li>
                
                <li class="pre-context-line"><code>                break
</code></li>
                
                <li class="pre-context-line"><code>              end
</code></li>
                
                <li class="pre-context-line"><code>            end
</code></li>
                
                <li class="pre-context-line"><code>            throw :layout_missing if eat_errors and not found
</code></li>
                
              </ol>
              

              <ol start="661" class="context" id="5"
                  onclick="toggle(5);">
                <li class="context-line" id="context-5"><code>            template.new(path, 1, options)</code></li>
              </ol>

              
              <ol start="662" class="post-context"
                  id="post-5" onclick="toggle(5);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        when Proc, String
</code></li>
                
                <li class="post-context-line"><code>          body = data.is_a?(String) ? Proc.new { data } : data
</code></li>
                
                <li class="post-context-line"><code>          path, line = settings.caller_locations.first
</code></li>
                
                <li class="post-context-line"><code>          template.new(path, line.to_i, options, &amp;body)
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          raise ArgumentError, &quot;Sorry, don&#x27;t know how to render #{data.inspect}.&quot;
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in compile_template</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="654"
                  class="pre-context" id="pre-6"
                  onclick="toggle(6);">
                
                <li class="pre-context-line"><code>              path ||= file # keep the initial path rather than the last one
</code></li>
                
                <li class="pre-context-line"><code>              if found = File.exists?(file)
</code></li>
                
                <li class="pre-context-line"><code>                path = file
</code></li>
                
                <li class="pre-context-line"><code>                break
</code></li>
                
                <li class="pre-context-line"><code>              end
</code></li>
                
                <li class="pre-context-line"><code>            end
</code></li>
                
                <li class="pre-context-line"><code>            throw :layout_missing if eat_errors and not found
</code></li>
                
              </ol>
              

              <ol start="661" class="context" id="6"
                  onclick="toggle(6);">
                <li class="context-line" id="context-6"><code>            template.new(path, 1, options)</code></li>
              </ol>

              
              <ol start="662" class="post-context"
                  id="post-6" onclick="toggle(6);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        when Proc, String
</code></li>
                
                <li class="post-context-line"><code>          body = data.is_a?(String) ? Proc.new { data } : data
</code></li>
                
                <li class="post-context-line"><code>          path, line = settings.caller_locations.first
</code></li>
                
                <li class="post-context-line"><code>          template.new(path, line.to_i, options, &amp;body)
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          raise ArgumentError, &quot;Sorry, don&#x27;t know how to render #{data.inspect}.&quot;
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt.rb</code> in
                <code><strong>fetch</strong></code>
            </li>

            <li class="code system">
              
              <ol start="120"
                  class="pre-context" id="pre-7"
                  onclick="toggle(7);">
                
                <li class="pre-context-line"><code>  # Subsequent invocations return the already loaded template object.
</code></li>
                
                <li class="pre-context-line"><code>  class Cache
</code></li>
                
                <li class="pre-context-line"><code>    def initialize
</code></li>
                
                <li class="pre-context-line"><code>      @cache = {}
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def fetch(*key)
</code></li>
                
              </ol>
              

              <ol start="127" class="context" id="7"
                  onclick="toggle(7);">
                <li class="context-line" id="context-7"><code>      @cache[key] ||= yield</code></li>
              </ol>

              
              <ol start="128" class="post-context"
                  id="post-7" onclick="toggle(7);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def clear
</code></li>
                
                <li class="post-context-line"><code>      @cache = {}
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>compile_template</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="633"
                  class="pre-context" id="pre-8"
                  onclick="toggle(8);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      output.extend(ContentTyped).content_type = content_type if content_type
</code></li>
                
                <li class="pre-context-line"><code>      output
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def compile_template(engine, data, options, views)
</code></li>
                
                <li class="pre-context-line"><code>      eat_errors = options.delete :eat_errors
</code></li>
                
              </ol>
              

              <ol start="640" class="context" id="8"
                  onclick="toggle(8);">
                <li class="context-line" id="context-8"><code>      template_cache.fetch engine, data, options do</code></li>
              </ol>

              
              <ol start="641" class="post-context"
                  id="post-8" onclick="toggle(8);">
                
                <li class="post-context-line"><code>        template = Tilt[engine]
</code></li>
                
                <li class="post-context-line"><code>        raise &quot;Template engine not found: #{engine}&quot; if template.nil?
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        case data
</code></li>
                
                <li class="post-context-line"><code>        when Symbol
</code></li>
                
                <li class="post-context-line"><code>          body, path, line = settings.templates[data]
</code></li>
                
                <li class="post-context-line"><code>          if body
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>render</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="617"
                  class="pre-context" id="pre-9"
                  onclick="toggle(9);">
                
                <li class="pre-context-line"><code>      content_type    = options.delete(:content_type)  || options.delete(:default_content_type)
</code></li>
                
                <li class="pre-context-line"><code>      layout_engine   = options.delete(:layout_engine) || engine
</code></li>
                
                <li class="pre-context-line"><code>      scope           = options.delete(:scope)         || self
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # compile and render template
</code></li>
                
                <li class="pre-context-line"><code>      layout_was      = @default_layout
</code></li>
                
                <li class="pre-context-line"><code>      @default_layout = false
</code></li>
                
              </ol>
              

              <ol start="624" class="context" id="9"
                  onclick="toggle(9);">
                <li class="context-line" id="context-9"><code>      template        = compile_template(engine, data, options, views)</code></li>
              </ol>

              
              <ol start="625" class="post-context"
                  id="post-9" onclick="toggle(9);">
                
                <li class="post-context-line"><code>      output          = template.render(scope, locals, &amp;block)
</code></li>
                
                <li class="post-context-line"><code>      @default_layout = layout_was
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # render layout
</code></li>
                
                <li class="post-context-line"><code>      if layout
</code></li>
                
                <li class="post-context-line"><code>        options = options.merge(:views =&gt; views, :layout =&gt; false, :eat_errors =&gt; eat_errors, :scope =&gt; scope)
</code></li>
                
                <li class="post-context-line"><code>        catch(:layout_missing) { return render(layout_engine, layout, options, locals) { output } }
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>erb</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="505"
                  class="pre-context" id="pre-10"
                  onclick="toggle(10);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def initialize
</code></li>
                
                <li class="pre-context-line"><code>      super
</code></li>
                
                <li class="pre-context-line"><code>      @default_layout = :layout
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def erb(template, options={}, locals={})
</code></li>
                
              </ol>
              

              <ol start="512" class="context" id="10"
                  onclick="toggle(10);">
                <li class="context-line" id="context-10"><code>      render :erb, template, options, locals</code></li>
              </ol>

              
              <ol start="513" class="post-context"
                  id="post-10" onclick="toggle(10);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def erubis(template, options={}, locals={})
</code></li>
                
                <li class="post-context-line"><code>      warn &quot;Sinatra::Templates#erubis is deprecated and will be removed, use #erb instead.\n&quot; \
</code></li>
                
                <li class="post-context-line"><code>        &quot;If you have Erubis installed, it will be used automatically.&quot;
</code></li>
                
                <li class="post-context-line"><code>      render :erubis, template, options, locals
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;src&#x2F;ruby&#x2F;sinatra&#x2F;smoke_server&#x2F;lib&#x2F;smoke&#x2F;web&#x2F;app.rb</code> in
                <code><strong>block in &lt;class:App&gt;</strong></code>
            </li>

            <li class="code app">
              
              <ol start="13"
                  class="pre-context" id="pre-11"
                  onclick="toggle(11);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>      
</code></li>
                
                <li class="pre-context-line"><code>      get &#x27;&#x2F;&#x27; do
</code></li>
                
                <li class="pre-context-line"><code>        if session?
</code></li>
                
                <li class="pre-context-line"><code>          @username = session[:username]
</code></li>
                
                <li class="pre-context-line"><code>          erb :dashboard
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="20" class="context" id="11"
                  onclick="toggle(11);">
                <li class="context-line" id="context-11"><code>      	  erb :index</code></li>
              </ol>

              
              <ol start="21" class="post-context"
                  id="post-11" onclick="toggle(11);">
                
                <li class="post-context-line"><code>    	  end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      
</code></li>
                
                <li class="post-context-line"><code>      # Login to the account
</code></li>
                
                <li class="post-context-line"><code>      get &#x27;&#x2F;login&#x27; do
</code></li>
                
                <li class="post-context-line"><code>        if session?
</code></li>
                
                <li class="post-context-line"><code>          redirect &#x27;&#x2F;&#x27;
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1205"
                  class="pre-context" id="pre-12"
                  onclick="toggle(12);">
                
                <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        pattern, keys           = compile path
</code></li>
                
                <li class="pre-context-line"><code>        conditions, @conditions = @conditions, []
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        [ pattern, keys, conditions, block.arity != 0 ?
</code></li>
                
                <li class="pre-context-line"><code>            proc { |a,p| unbound_method.bind(a).call(*p) } :
</code></li>
                
              </ol>
              

              <ol start="1212" class="context" id="12"
                  onclick="toggle(12);">
                <li class="context-line" id="context-12"><code>            proc { |a,p| unbound_method.bind(a).call } ]</code></li>
              </ol>

              
              <ol start="1213" class="post-context"
                  id="post-12" onclick="toggle(12);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def compile(path)
</code></li>
                
                <li class="post-context-line"><code>        keys = []
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to? :to_str
</code></li>
                
                <li class="post-context-line"><code>          pattern = path.to_str.gsub(&#x2F;[^\?\%\\\&#x2F;\:\*\w]&#x2F;) { |c| encoded(c) }
</code></li>
                
                <li class="post-context-line"><code>          pattern.gsub!(&#x2F;((:\w+)|\*)&#x2F;) do |match|
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in compile!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1205"
                  class="pre-context" id="pre-13"
                  onclick="toggle(13);">
                
                <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        pattern, keys           = compile path
</code></li>
                
                <li class="pre-context-line"><code>        conditions, @conditions = @conditions, []
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        [ pattern, keys, conditions, block.arity != 0 ?
</code></li>
                
                <li class="pre-context-line"><code>            proc { |a,p| unbound_method.bind(a).call(*p) } :
</code></li>
                
              </ol>
              

              <ol start="1212" class="context" id="13"
                  onclick="toggle(13);">
                <li class="context-line" id="context-13"><code>            proc { |a,p| unbound_method.bind(a).call } ]</code></li>
              </ol>

              
              <ol start="1213" class="post-context"
                  id="post-13" onclick="toggle(13);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def compile(path)
</code></li>
                
                <li class="post-context-line"><code>        keys = []
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to? :to_str
</code></li>
                
                <li class="post-context-line"><code>          pattern = path.to_str.gsub(&#x2F;[^\?\%\\\&#x2F;\:\*\w]&#x2F;) { |c| encoded(c) }
</code></li>
                
                <li class="post-context-line"><code>          pattern.gsub!(&#x2F;((:\w+)|\*)&#x2F;) do |match|
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>[]</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="765"
                  class="pre-context" id="pre-14"
                  onclick="toggle(14);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
              </ol>
              

              <ol start="772" class="context" id="14"
                  onclick="toggle(14);">
                <li class="context-line" id="context-14"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="773" class="post-context"
                  id="post-14" onclick="toggle(14);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block (3 levels) in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="765"
                  class="pre-context" id="pre-15"
                  onclick="toggle(15);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
              </ol>
              

              <ol start="772" class="context" id="15"
                  onclick="toggle(15);">
                <li class="context-line" id="context-15"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="773" class="post-context"
                  id="post-15" onclick="toggle(15);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>route_eval</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="781"
                  class="pre-context" id="pre-16"
                  onclick="toggle(16);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      route_eval(&amp;pass_block) if pass_block
</code></li>
                
                <li class="pre-context-line"><code>      route_missing
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run a route block and throw :halt with the result.
</code></li>
                
                <li class="pre-context-line"><code>    def route_eval
</code></li>
                
              </ol>
              

              <ol start="788" class="context" id="16"
                  onclick="toggle(16);">
                <li class="context-line" id="context-16"><code>      throw :halt, yield</code></li>
              </ol>

              
              <ol start="789" class="post-context"
                  id="post-16" onclick="toggle(16);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # If the current request matches pattern and conditions, fill params
</code></li>
                
                <li class="post-context-line"><code>    # with keys and call the given block.
</code></li>
                
                <li class="post-context-line"><code>    # Revert params afterwards.
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
                <li class="post-context-line"><code>    # Returns pass block.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block (2 levels) in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="765"
                  class="pre-context" id="pre-17"
                  onclick="toggle(17);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
              </ol>
              

              <ol start="772" class="context" id="17"
                  onclick="toggle(17);">
                <li class="context-line" id="context-17"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="773" class="post-context"
                  id="post-17" onclick="toggle(17);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in process_route</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="814"
                  class="pre-context" id="pre-18"
                  onclick="toggle(18);">
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            {}
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        @params = @original_params.merge(params)
</code></li>
                
                <li class="pre-context-line"><code>        @block_params = values
</code></li>
                
                <li class="pre-context-line"><code>        catch(:pass) do
</code></li>
                
                <li class="pre-context-line"><code>          conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
              </ol>
              

              <ol start="821" class="context" id="18"
                  onclick="toggle(18);">
                <li class="context-line" id="context-18"><code>          block ? block[self, @block_params] : yield(self, @block_params)</code></li>
              </ol>

              
              <ol start="822" class="post-context"
                  id="post-18" onclick="toggle(18);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = @original_params
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # No matching route was found or all routes passed. The default
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="812"
                  class="pre-context" id="pre-19"
                  onclick="toggle(19);">
                
                <li class="pre-context-line"><code>          elsif values.any?
</code></li>
                
                <li class="pre-context-line"><code>            {&#x27;captures&#x27; =&gt; values}
</code></li>
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            {}
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        @params = @original_params.merge(params)
</code></li>
                
                <li class="pre-context-line"><code>        @block_params = values
</code></li>
                
              </ol>
              

              <ol start="819" class="context" id="19"
                  onclick="toggle(19);">
                <li class="context-line" id="context-19"><code>        catch(:pass) do</code></li>
              </ol>

              
              <ol start="820" class="post-context"
                  id="post-19" onclick="toggle(19);">
                
                <li class="post-context-line"><code>          conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
                <li class="post-context-line"><code>          block ? block[self, @block_params] : yield(self, @block_params)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = @original_params
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>process_route</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="812"
                  class="pre-context" id="pre-20"
                  onclick="toggle(20);">
                
                <li class="pre-context-line"><code>          elsif values.any?
</code></li>
                
                <li class="pre-context-line"><code>            {&#x27;captures&#x27; =&gt; values}
</code></li>
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            {}
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        @params = @original_params.merge(params)
</code></li>
                
                <li class="pre-context-line"><code>        @block_params = values
</code></li>
                
              </ol>
              

              <ol start="819" class="context" id="20"
                  onclick="toggle(20);">
                <li class="context-line" id="context-20"><code>        catch(:pass) do</code></li>
              </ol>

              
              <ol start="820" class="post-context"
                  id="post-20" onclick="toggle(20);">
                
                <li class="post-context-line"><code>          conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
                <li class="post-context-line"><code>          block ? block[self, @block_params] : yield(self, @block_params)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = @original_params
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="764"
                  class="pre-context" id="pre-21"
                  onclick="toggle(21);">
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
              </ol>
              

              <ol start="771" class="context" id="21"
                  onclick="toggle(21);">
                <li class="context-line" id="context-21"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|</code></li>
              </ol>

              
              <ol start="772" class="post-context"
                  id="post-21" onclick="toggle(21);">
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>each</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="763"
                  class="pre-context" id="pre-22"
                  onclick="toggle(22);">
                
                <li class="pre-context-line"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)
</code></li>
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
              </ol>
              

              <ol start="770" class="context" id="22"
                  onclick="toggle(22);">
                <li class="context-line" id="context-22"><code>        routes.each do |pattern, keys, conditions, block|</code></li>
              </ol>

              
              <ol start="771" class="post-context"
                  id="post-22" onclick="toggle(22);">
                
                <li class="post-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="763"
                  class="pre-context" id="pre-23"
                  onclick="toggle(23);">
                
                <li class="pre-context-line"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)
</code></li>
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
              </ol>
              

              <ol start="770" class="context" id="23"
                  onclick="toggle(23);">
                <li class="context-line" id="context-23"><code>        routes.each do |pattern, keys, conditions, block|</code></li>
              </ol>

              
              <ol start="771" class="post-context"
                  id="post-23" onclick="toggle(23);">
                
                <li class="post-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>dispatch!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="879"
                  class="pre-context" id="pre-24"
                  onclick="toggle(24);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Dispatch a request with error handling.
</code></li>
                
                <li class="pre-context-line"><code>    def dispatch!
</code></li>
                
                <li class="pre-context-line"><code>      static! if settings.static? &amp;&amp; (request.get? || request.head?)
</code></li>
                
                <li class="pre-context-line"><code>      filter! :before
</code></li>
                
              </ol>
              

              <ol start="886" class="context" id="24"
                  onclick="toggle(24);">
                <li class="context-line" id="context-24"><code>      route!</code></li>
              </ol>

              
              <ol start="887" class="post-context"
                  id="post-24" onclick="toggle(24);">
                
                <li class="post-context-line"><code>    rescue ::Exception =&gt; boom
</code></li>
                
                <li class="post-context-line"><code>      handle_exception!(boom)
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      filter! :after unless env[&#x27;sinatra.static_file&#x27;]
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Error handling during requests.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in call!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="699"
                  class="pre-context" id="pre-25"
                  onclick="toggle(25);">
                
                <li class="pre-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
                <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
</code></li>
                
                <li class="pre-context-line"><code>      force_encoding(@params)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @response[&#x27;Content-Type&#x27;] = nil
</code></li>
                
              </ol>
              

              <ol start="706" class="context" id="25"
                  onclick="toggle(25);">
                <li class="context-line" id="context-25"><code>      invoke { dispatch! }</code></li>
              </ol>

              
              <ol start="707" class="post-context"
                  id="post-25" onclick="toggle(25);">
                
                <li class="post-context-line"><code>      invoke { error_block!(response.status) }
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        if Array === body and body[0].respond_to? :content_type
</code></li>
                
                <li class="post-context-line"><code>          content_type body[0].content_type
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          content_type :html
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="864"
                  class="pre-context" id="pre-26"
                  onclick="toggle(26);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="871" class="context" id="26"
                  onclick="toggle(26);">
                <li class="context-line" id="context-26"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="872" class="post-context"
                  id="post-26" onclick="toggle(26);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
                <li class="post-context-line"><code>        body res
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="864"
                  class="pre-context" id="pre-27"
                  onclick="toggle(27);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="871" class="context" id="27"
                  onclick="toggle(27);">
                <li class="context-line" id="context-27"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="872" class="post-context"
                  id="post-27" onclick="toggle(27);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
                <li class="post-context-line"><code>        body res
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="864"
                  class="pre-context" id="pre-28"
                  onclick="toggle(28);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="871" class="context" id="28"
                  onclick="toggle(28);">
                <li class="context-line" id="context-28"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="872" class="post-context"
                  id="post-28" onclick="toggle(28);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
                <li class="post-context-line"><code>        body res
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="699"
                  class="pre-context" id="pre-29"
                  onclick="toggle(29);">
                
                <li class="pre-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
                <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
</code></li>
                
                <li class="pre-context-line"><code>      force_encoding(@params)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @response[&#x27;Content-Type&#x27;] = nil
</code></li>
                
              </ol>
              

              <ol start="706" class="context" id="29"
                  onclick="toggle(29);">
                <li class="context-line" id="context-29"><code>      invoke { dispatch! }</code></li>
              </ol>

              
              <ol start="707" class="post-context"
                  id="post-29" onclick="toggle(29);">
                
                <li class="post-context-line"><code>      invoke { error_block!(response.status) }
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        if Array === body and body[0].respond_to? :content_type
</code></li>
                
                <li class="post-context-line"><code>          content_type body[0].content_type
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          content_type :html
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="685"
                  class="pre-context" id="pre-30"
                  onclick="toggle(30);">
                
                <li class="pre-context-line"><code>      @app = app
</code></li>
                
                <li class="pre-context-line"><code>      @template_cache = Tilt::Cache.new
</code></li>
                
                <li class="pre-context-line"><code>      yield self if block_given?
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Rack call interface.
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="692" class="context" id="30"
                  onclick="toggle(30);">
                <li class="context-line" id="context-30"><code>      dup.call!(env)</code></li>
              </ol>

              
              <ol start="693" class="post-context"
                  id="post-30" onclick="toggle(30);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    attr_accessor :env, :request, :response, :params
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def call!(env) # :nodoc:
</code></li>
                
                <li class="post-context-line"><code>      @env      = env
</code></li>
                
                <li class="post-context-line"><code>      @request  = Request.new(env)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;session&#x2F;abstract&#x2F;id.rb</code> in
                <code><strong>context</strong></code>
            </li>

            <li class="code system">
              
              <ol start="188"
                  class="pre-context" id="pre-31"
                  onclick="toggle(31);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def call(env)
</code></li>
                
                <li class="pre-context-line"><code>          context(env)
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def context(env, app=@app)
</code></li>
                
                <li class="pre-context-line"><code>          prepare_session(env)
</code></li>
                
              </ol>
              

              <ol start="195" class="context" id="31"
                  onclick="toggle(31);">
                <li class="context-line" id="context-31"><code>          status, headers, body = app.call(env)</code></li>
              </ol>

              
              <ol start="196" class="post-context"
                  id="post-31" onclick="toggle(31);">
                
                <li class="post-context-line"><code>          commit_session(env, status, headers, body)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        def initialize_sid
</code></li>
                
                <li class="post-context-line"><code>          @sidbits = @default_options[:sidbits]
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;session&#x2F;abstract&#x2F;id.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="183"
                  class="pre-context" id="pre-32"
                  onclick="toggle(32);">
                
                <li class="pre-context-line"><code>          @default_options = self.class::DEFAULT_OPTIONS.merge(options)
</code></li>
                
                <li class="pre-context-line"><code>          @key = options[:key] || &quot;rack.session&quot;
</code></li>
                
                <li class="pre-context-line"><code>          @cookie_only = @default_options.delete(:cookie_only)
</code></li>
                
                <li class="pre-context-line"><code>          initialize_sid
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def call(env)
</code></li>
                
              </ol>
              

              <ol start="190" class="context" id="32"
                  onclick="toggle(32);">
                <li class="context-line" id="context-32"><code>          context(env)</code></li>
              </ol>

              
              <ol start="191" class="post-context"
                  id="post-32" onclick="toggle(32);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        def context(env, app=@app)
</code></li>
                
                <li class="post-context-line"><code>          prepare_session(env)
</code></li>
                
                <li class="post-context-line"><code>          status, headers, body = app.call(env)
</code></li>
                
                <li class="post-context-line"><code>          commit_session(env, status, headers, body)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="15"
                  class="pre-context" id="pre-33"
                  onclick="toggle(33);">
                
                <li class="pre-context-line"><code>      default_options :xss_mode =&gt; :block
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def header
</code></li>
                
                <li class="pre-context-line"><code>        { &#x27;X-XSS-Protection&#x27; =&gt; &quot;1; mode=#{options[:xss_mode]}&quot; }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="22" class="context" id="33"
                  onclick="toggle(33);">
                <li class="context-line" id="context-33"><code>        status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="23" class="post-context"
                  id="post-33" onclick="toggle(33);">
                
                <li class="post-context-line"><code>        [status, header.merge(headers), body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="9"
                  class="pre-context" id="pre-34"
                  onclick="toggle(34);">
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.
</code></li>
                
                <li class="pre-context-line"><code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.
</code></li>
                
                <li class="pre-context-line"><code>    class PathTraversal &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        path_was         = env[&quot;PATH_INFO&quot;]
</code></li>
                
                <li class="pre-context-line"><code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was
</code></li>
                
              </ol>
              

              <ol start="16" class="context" id="34"
                  onclick="toggle(34);">
                <li class="context-line" id="context-34"><code>        app.call env</code></li>
              </ol>

              
              <ol start="17" class="post-context"
                  id="post-34" onclick="toggle(34);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        env[&quot;PATH_INFO&quot;] = path_was
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def cleanup(path)
</code></li>
                
                <li class="post-context-line"><code>        parts     = []
</code></li>
                
                <li class="post-context-line"><code>        unescaped = path.gsub(&#x27;%2e&#x27;, &#x27;.&#x27;).gsub(&#x27;%2f&#x27;, &#x27;&#x2F;&#x27;)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="10"
                  class="pre-context" id="pre-35"
                  onclick="toggle(35);">
                
                <li class="pre-context-line"><code>    # JSON GET APIs are vulnerable to being embedded as JavaScript while the
</code></li>
                
                <li class="pre-context-line"><code>    # Array prototype has been patched to track data. Checks the referrer
</code></li>
                
                <li class="pre-context-line"><code>    # even on GET requests if the content type is JSON.
</code></li>
                
                <li class="pre-context-line"><code>    class JsonCsrf &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      default_reaction :deny
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="17" class="context" id="35"
                  onclick="toggle(35);">
                <li class="context-line" id="context-35"><code>        status, headers, body = app.call(env)</code></li>
              </ol>

              
              <ol start="18" class="post-context"
                  id="post-35" onclick="toggle(35);">
                
                <li class="post-context-line"><code>        if headers[&#x27;Content-Type&#x27;].to_s.split(&#x27;;&#x27;, 2).first =~ &#x2F;^\s*application\&#x2F;json\s*$&#x2F;
</code></li>
                
                <li class="post-context-line"><code>          result = react(env) if referrer(env) != Request.new(env).host
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>        result or [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="40"
                  class="pre-context" id="pre-36"
                  onclick="toggle(36);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        unless accepts? env
</code></li>
                
                <li class="pre-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
</code></li>
                
                <li class="pre-context-line"><code>          result = react env
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
              </ol>
              

              <ol start="47" class="context" id="36"
                  onclick="toggle(36);">
                <li class="context-line" id="context-36"><code>        result or app.call(env)</code></li>
              </ol>

              
              <ol start="48" class="post-context"
                  id="post-36" onclick="toggle(36);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def react(env)
</code></li>
                
                <li class="post-context-line"><code>        result = send(options[:reaction], env)
</code></li>
                
                <li class="post-context-line"><code>        result if Array === result and result.size == 3
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="15"
                  class="pre-context" id="pre-37"
                  onclick="toggle(37);">
                
                <li class="pre-context-line"><code>      default_options :xss_mode =&gt; :block
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def header
</code></li>
                
                <li class="pre-context-line"><code>        { &#x27;X-XSS-Protection&#x27; =&gt; &quot;1; mode=#{options[:xss_mode]}&quot; }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="22" class="context" id="37"
                  onclick="toggle(37);">
                <li class="context-line" id="context-37"><code>        status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="23" class="post-context"
                  id="post-37" onclick="toggle(37);">
                
                <li class="post-context-line"><code>        [status, header.merge(headers), body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;nulllogger.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="2"
                  class="pre-context" id="pre-38"
                  onclick="toggle(38);">
                
                <li class="pre-context-line"><code>  class NullLogger
</code></li>
                
                <li class="pre-context-line"><code>    def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>      @app = app
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
                <li class="pre-context-line"><code>      env[&#x27;rack.logger&#x27;] = self
</code></li>
                
              </ol>
              

              <ol start="9" class="context" id="38"
                  onclick="toggle(38);">
                <li class="context-line" id="context-38"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="10" class="post-context"
                  id="post-38" onclick="toggle(38);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def info(progname = nil, &amp;block);  end
</code></li>
                
                <li class="post-context-line"><code>    def debug(progname = nil, &amp;block); end
</code></li>
                
                <li class="post-context-line"><code>    def warn(progname = nil, &amp;block);  end
</code></li>
                
                <li class="post-context-line"><code>    def error(progname = nil, &amp;block); end
</code></li>
                
                <li class="post-context-line"><code>    def fatal(progname = nil, &amp;block); end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="2"
                  class="pre-context" id="pre-39"
                  onclick="toggle(39);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>class Head
</code></li>
                
                <li class="pre-context-line"><code>  def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>    @app = app
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  def call(env)
</code></li>
                
              </ol>
              

              <ol start="9" class="context" id="39"
                  onclick="toggle(39);">
                <li class="context-line" id="context-39"><code>    status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="10" class="post-context"
                  id="post-39" onclick="toggle(39);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    if env[&quot;REQUEST_METHOD&quot;] == &quot;HEAD&quot;
</code></li>
                
                <li class="post-context-line"><code>      [status, headers, []]
</code></li>
                
                <li class="post-context-line"><code>    else
</code></li>
                
                <li class="post-context-line"><code>      [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;showexceptions.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="14"
                  class="pre-context" id="pre-40"
                  onclick="toggle(40);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>      @app      = app
</code></li>
                
                <li class="pre-context-line"><code>      @template = ERB.new(TEMPLATE)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="21" class="context" id="40"
                  onclick="toggle(40);">
                <li class="context-line" id="context-40"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="22" class="post-context"
                  id="post-40" onclick="toggle(40);">
                
                <li class="post-context-line"><code>    rescue Exception =&gt; e
</code></li>
                
                <li class="post-context-line"><code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      if respond_to?(:prefers_plain_text?) and prefers_plain_text?(env)
</code></li>
                
                <li class="post-context-line"><code>        content_type = &quot;text&#x2F;plain&quot;
</code></li>
                
                <li class="post-context-line"><code>        body = [dump_exception(e)]
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1327"
                  class="pre-context" id="pre-41"
                  onclick="toggle(41);">
                
                <li class="pre-context-line"><code>        setup_default_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        setup_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        builder.run new!(*args, &amp;bk)
</code></li>
                
                <li class="pre-context-line"><code>        builder
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="1334" class="context" id="41"
                  onclick="toggle(41);">
                <li class="context-line" id="context-41"><code>        synchronize { prototype.call(env) }</code></li>
              </ol>

              
              <ol start="1335" class="post-context"
                  id="post-41" onclick="toggle(41);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>      def setup_default_middleware(builder)
</code></li>
                
                <li class="post-context-line"><code>        builder.use ShowExceptions       if show_exceptions?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::MethodOverride if method_override?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::Head
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>synchronize</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1396"
                  class="pre-context" id="pre-42"
                  onclick="toggle(42);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @@mutex = Mutex.new
</code></li>
                
                <li class="pre-context-line"><code>      def synchronize(&amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        if lock?
</code></li>
                
                <li class="pre-context-line"><code>          @@mutex.synchronize(&amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="1403" class="context" id="42"
                  onclick="toggle(42);">
                <li class="context-line" id="context-42"><code>          yield</code></li>
              </ol>

              
              <ol start="1404" class="post-context"
                  id="post-42" onclick="toggle(42);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    public
</code></li>
                
                <li class="post-context-line"><code>      CALLERS_TO_IGNORE = [ # :nodoc:
</code></li>
                
                <li class="post-context-line"><code>        &#x2F;\&#x2F;sinatra(\&#x2F;(base|main|showexceptions))?\.rb$&#x2F;, # all sinatra code
</code></li>
                
                <li class="post-context-line"><code>        &#x2F;lib\&#x2F;tilt.*\.rb$&#x2F;,                              # all tilt code
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1327"
                  class="pre-context" id="pre-43"
                  onclick="toggle(43);">
                
                <li class="pre-context-line"><code>        setup_default_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        setup_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        builder.run new!(*args, &amp;bk)
</code></li>
                
                <li class="pre-context-line"><code>        builder
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="1334" class="context" id="43"
                  onclick="toggle(43);">
                <li class="context-line" id="context-43"><code>        synchronize { prototype.call(env) }</code></li>
              </ol>

              
              <ol start="1335" class="post-context"
                  id="post-43" onclick="toggle(43);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>      def setup_default_middleware(builder)
</code></li>
                
                <li class="post-context-line"><code>        builder.use ShowExceptions       if show_exceptions?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::MethodOverride if method_override?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::Head
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;lint.rb</code> in
                <code><strong>_call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="41"
                  class="pre-context" id="pre-44"
                  onclick="toggle(44);">
                
                <li class="pre-context-line"><code>      assert(&quot;No env given&quot;) { env }
</code></li>
                
                <li class="pre-context-line"><code>      check_env env
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      env[&#x27;rack.input&#x27;] = InputWrapper.new(env[&#x27;rack.input&#x27;])
</code></li>
                
                <li class="pre-context-line"><code>      env[&#x27;rack.errors&#x27;] = ErrorWrapper.new(env[&#x27;rack.errors&#x27;])
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      ## and returns an Array of exactly three values:
</code></li>
                
              </ol>
              

              <ol start="48" class="context" id="44"
                  onclick="toggle(44);">
                <li class="context-line" id="context-44"><code>      status, headers, @body = @app.call(env)</code></li>
              </ol>

              
              <ol start="49" class="post-context"
                  id="post-44" onclick="toggle(44);">
                
                <li class="post-context-line"><code>      ## The *status*,
</code></li>
                
                <li class="post-context-line"><code>      check_status status
</code></li>
                
                <li class="post-context-line"><code>      ## the *headers*,
</code></li>
                
                <li class="post-context-line"><code>      check_headers headers
</code></li>
                
                <li class="post-context-line"><code>      ## and the *body*.
</code></li>
                
                <li class="post-context-line"><code>      check_content_type status, headers
</code></li>
                
                <li class="post-context-line"><code>      check_content_length status, headers
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;lint.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="29"
                  class="pre-context" id="pre-45"
                  onclick="toggle(45);">
                
                <li class="pre-context-line"><code>    ## after to catch all mistakes.
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    ## = Rack applications
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    ## A Rack application is a Ruby object (not a class) that
</code></li>
                
                <li class="pre-context-line"><code>    ## responds to +call+.
</code></li>
                
                <li class="pre-context-line"><code>    def call(env=nil)
</code></li>
                
              </ol>
              

              <ol start="36" class="context" id="45"
                  onclick="toggle(45);">
                <li class="context-line" id="context-45"><code>      dup._call(env)</code></li>
              </ol>

              
              <ol start="37" class="post-context"
                  id="post-45" onclick="toggle(45);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def _call(env)
</code></li>
                
                <li class="post-context-line"><code>      ## It takes exactly one argument, the *environment*
</code></li>
                
                <li class="post-context-line"><code>      assert(&quot;No env given&quot;) { env }
</code></li>
                
                <li class="post-context-line"><code>      check_env env
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>block in pre_process</strong></code>
            </li>

            <li class="code system">
              
              <ol start="73"
                  class="pre-context" id="pre-46"
                  onclick="toggle(46);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # When we&#x27;re under a non-async framework like rails, we can still spawn
</code></li>
                
                <li class="pre-context-line"><code>      # off async responses using the callback info, so there&#x27;s little point
</code></li>
                
                <li class="pre-context-line"><code>      # in removing this.
</code></li>
                
                <li class="pre-context-line"><code>      response = AsyncResponse
</code></li>
                
                <li class="pre-context-line"><code>      catch(:async) do
</code></li>
                
                <li class="pre-context-line"><code>        # Process the request calling the Rack adapter
</code></li>
                
              </ol>
              

              <ol start="80" class="context" id="46"
                  onclick="toggle(46);">
                <li class="context-line" id="context-46"><code>        response = @app.call(@request.env)</code></li>
              </ol>

              
              <ol start="81" class="post-context"
                  id="post-46" onclick="toggle(46);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      response
</code></li>
                
                <li class="post-context-line"><code>    rescue Exception
</code></li>
                
                <li class="post-context-line"><code>      handle_error
</code></li>
                
                <li class="post-context-line"><code>      terminate_request
</code></li>
                
                <li class="post-context-line"><code>      nil # Signal to post_process that the request could not be processed
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code system">
              
              <ol start="71"
                  class="pre-context" id="pre-47"
                  onclick="toggle(47);">
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # When we&#x27;re under a non-async framework like rails, we can still spawn
</code></li>
                
                <li class="pre-context-line"><code>      # off async responses using the callback info, so there&#x27;s little point
</code></li>
                
                <li class="pre-context-line"><code>      # in removing this.
</code></li>
                
                <li class="pre-context-line"><code>      response = AsyncResponse
</code></li>
                
              </ol>
              

              <ol start="78" class="context" id="47"
                  onclick="toggle(47);">
                <li class="context-line" id="context-47"><code>      catch(:async) do</code></li>
              </ol>

              
              <ol start="79" class="post-context"
                  id="post-47" onclick="toggle(47);">
                
                <li class="post-context-line"><code>        # Process the request calling the Rack adapter
</code></li>
                
                <li class="post-context-line"><code>        response = @app.call(@request.env)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      response
</code></li>
                
                <li class="post-context-line"><code>    rescue Exception
</code></li>
                
                <li class="post-context-line"><code>      handle_error
</code></li>
                
                <li class="post-context-line"><code>      terminate_request
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>pre_process</strong></code>
            </li>

            <li class="code system">
              
              <ol start="71"
                  class="pre-context" id="pre-48"
                  onclick="toggle(48);">
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # When we&#x27;re under a non-async framework like rails, we can still spawn
</code></li>
                
                <li class="pre-context-line"><code>      # off async responses using the callback info, so there&#x27;s little point
</code></li>
                
                <li class="pre-context-line"><code>      # in removing this.
</code></li>
                
                <li class="pre-context-line"><code>      response = AsyncResponse
</code></li>
                
              </ol>
              

              <ol start="78" class="context" id="48"
                  onclick="toggle(48);">
                <li class="context-line" id="context-48"><code>      catch(:async) do</code></li>
              </ol>

              
              <ol start="79" class="post-context"
                  id="post-48" onclick="toggle(48);">
                
                <li class="post-context-line"><code>        # Process the request calling the Rack adapter
</code></li>
                
                <li class="post-context-line"><code>        response = @app.call(@request.env)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      response
</code></li>
                
                <li class="post-context-line"><code>    rescue Exception
</code></li>
                
                <li class="post-context-line"><code>      handle_error
</code></li>
                
                <li class="post-context-line"><code>      terminate_request
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>process</strong></code>
            </li>

            <li class="code system">
              
              <ol start="46"
                  class="pre-context" id="pre-49"
                  onclick="toggle(49);">
                
                <li class="pre-context-line"><code>    # is ready to be processed.
</code></li>
                
                <li class="pre-context-line"><code>    def process
</code></li>
                
                <li class="pre-context-line"><code>      if threaded?
</code></li>
                
                <li class="pre-context-line"><code>        @request.threaded = true
</code></li>
                
                <li class="pre-context-line"><code>        EventMachine.defer(method(:pre_process), method(:post_process))
</code></li>
                
                <li class="pre-context-line"><code>      else
</code></li>
                
                <li class="pre-context-line"><code>        @request.threaded = false
</code></li>
                
              </ol>
              

              <ol start="53" class="context" id="49"
                  onclick="toggle(49);">
                <li class="context-line" id="context-49"><code>        post_process(pre_process)</code></li>
              </ol>

              
              <ol start="54" class="post-context"
                  id="post-49" onclick="toggle(49);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def pre_process
</code></li>
                
                <li class="post-context-line"><code>      # Add client info to the request env
</code></li>
                
                <li class="post-context-line"><code>      @request.remote_address = remote_address
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>receive_data</strong></code>
            </li>

            <li class="code system">
              
              <ol start="31"
                  class="pre-context" id="pre-50"
                  onclick="toggle(50);">
                
                <li class="pre-context-line"><code>      @request  = Request.new
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Called when data is received from the client.
</code></li>
                
                <li class="pre-context-line"><code>    def receive_data(data)
</code></li>
                
                <li class="pre-context-line"><code>      trace { data }
</code></li>
                
              </ol>
              

              <ol start="38" class="context" id="50"
                  onclick="toggle(50);">
                <li class="context-line" id="context-50"><code>      process if @request.parse(data)</code></li>
              </ol>

              
              <ol start="39" class="post-context"
                  id="post-50" onclick="toggle(50);">
                
                <li class="post-context-line"><code>    rescue InvalidRequest =&gt; e
</code></li>
                
                <li class="post-context-line"><code>      log &quot;!! Invalid request&quot;
</code></li>
                
                <li class="post-context-line"><code>      log_error e
</code></li>
                
                <li class="post-context-line"><code>      close_connection
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Called when all data was received and the request
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;eventmachine-0.12.10&#x2F;lib&#x2F;eventmachine.rb</code> in
                <code><strong>run_machine</strong></code>
            </li>

            <li class="code system">
              
              <ol start="249"
                  class="pre-context" id="pre-51"
                  onclick="toggle(51);">
                
                <li class="pre-context-line"><code>        @reactor_running = true
</code></li>
                
                <li class="pre-context-line"><code>        initialize_event_machine
</code></li>
                
                <li class="pre-context-line"><code>        (b = blk || block) and add_timer(0, b)
</code></li>
                
                <li class="pre-context-line"><code>        if @next_tick_queue &amp;&amp; !@next_tick_queue.empty?
</code></li>
                
                <li class="pre-context-line"><code>          add_timer(0) { signal_loopbreak }
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>        @reactor_thread = Thread.current
</code></li>
                
              </ol>
              

              <ol start="256" class="context" id="51"
                  onclick="toggle(51);">
                <li class="context-line" id="context-51"><code>        run_machine</code></li>
              </ol>

              
              <ol start="257" class="post-context"
                  id="post-51" onclick="toggle(51);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        until @tails.empty?
</code></li>
                
                <li class="post-context-line"><code>          @tails.pop.call
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        begin
</code></li>
                
                <li class="post-context-line"><code>          release_machine
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;eventmachine-0.12.10&#x2F;lib&#x2F;eventmachine.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="249"
                  class="pre-context" id="pre-52"
                  onclick="toggle(52);">
                
                <li class="pre-context-line"><code>        @reactor_running = true
</code></li>
                
                <li class="pre-context-line"><code>        initialize_event_machine
</code></li>
                
                <li class="pre-context-line"><code>        (b = blk || block) and add_timer(0, b)
</code></li>
                
                <li class="pre-context-line"><code>        if @next_tick_queue &amp;&amp; !@next_tick_queue.empty?
</code></li>
                
                <li class="pre-context-line"><code>          add_timer(0) { signal_loopbreak }
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>        @reactor_thread = Thread.current
</code></li>
                
              </ol>
              

              <ol start="256" class="context" id="52"
                  onclick="toggle(52);">
                <li class="context-line" id="context-52"><code>        run_machine</code></li>
              </ol>

              
              <ol start="257" class="post-context"
                  id="post-52" onclick="toggle(52);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        until @tails.empty?
</code></li>
                
                <li class="post-context-line"><code>          @tails.pop.call
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        begin
</code></li>
                
                <li class="post-context-line"><code>          release_machine
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;backends&#x2F;base.rb</code> in
                <code><strong>start</strong></code>
            </li>

            <li class="code system">
              
              <ol start="54"
                  class="pre-context" id="pre-53"
                  onclick="toggle(53);">
                
                <li class="pre-context-line"><code>          @running = true
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>        
</code></li>
                
                <li class="pre-context-line"><code>        # Allow for early run up of eventmachine.
</code></li>
                
                <li class="pre-context-line"><code>        if EventMachine.reactor_running?
</code></li>
                
                <li class="pre-context-line"><code>          starter.call
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="61" class="context" id="53"
                  onclick="toggle(53);">
                <li class="context-line" id="context-53"><code>          EventMachine.run(&amp;starter)</code></li>
              </ol>

              
              <ol start="62" class="post-context"
                  id="post-53" onclick="toggle(53);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      
</code></li>
                
                <li class="post-context-line"><code>      # Stop of the backend from accepting new connections.
</code></li>
                
                <li class="post-context-line"><code>      def stop
</code></li>
                
                <li class="post-context-line"><code>        @running  = false
</code></li>
                
                <li class="post-context-line"><code>        @stopping = true
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;server.rb</code> in
                <code><strong>start</strong></code>
            </li>

            <li class="code system">
              
              <ol start="152"
                  class="pre-context" id="pre-54"
                  onclick="toggle(54);">
                
                <li class="pre-context-line"><code>      log   &quot;&gt;&gt; Thin web server (v#{VERSION::STRING} codename #{VERSION::CODENAME})&quot;
</code></li>
                
                <li class="pre-context-line"><code>      debug &quot;&gt;&gt; Debugging ON&quot;
</code></li>
                
                <li class="pre-context-line"><code>      trace &quot;&gt;&gt; Tracing ON&quot;
</code></li>
                
                <li class="pre-context-line"><code>      
</code></li>
                
                <li class="pre-context-line"><code>      log &quot;&gt;&gt; Maximum connections set to #{@backend.maximum_connections}&quot;
</code></li>
                
                <li class="pre-context-line"><code>      log &quot;&gt;&gt; Listening on #{@backend}, CTRL+C to stop&quot;
</code></li>
                
                <li class="pre-context-line"><code>      
</code></li>
                
              </ol>
              

              <ol start="159" class="context" id="54"
                  onclick="toggle(54);">
                <li class="context-line" id="context-54"><code>      @backend.start</code></li>
              </ol>

              
              <ol start="160" class="post-context"
                  id="post-54" onclick="toggle(54);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>    alias :start! :start
</code></li>
                
                <li class="post-context-line"><code>    
</code></li>
                
                <li class="post-context-line"><code>    # == Gracefull shutdown
</code></li>
                
                <li class="post-context-line"><code>    # Stops the server after processing all current connections.
</code></li>
                
                <li class="post-context-line"><code>    # As soon as this method is called, the server stops accepting
</code></li>
                
                <li class="post-context-line"><code>    # new requests and wait for all current connections to finish.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;controllers&#x2F;controller.rb</code> in
                <code><strong>start</strong></code>
            </li>

            <li class="code system">
              
              <ol start="79"
                  class="pre-context" id="pre-55"
                  onclick="toggle(55);">
                
                <li class="pre-context-line"><code>        # If a stats URL is specified, wrap in Stats adapter
</code></li>
                
                <li class="pre-context-line"><code>        server.app = Stats::Adapter.new(server.app, @options[:stats]) if @options[:stats]
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        # Register restart procedure which just start another process with same options,
</code></li>
                
                <li class="pre-context-line"><code>        # so that&#x27;s why this is done here.
</code></li>
                
                <li class="pre-context-line"><code>        server.on_restart { Command.run(:start, @options) }
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="86" class="context" id="55"
                  onclick="toggle(55);">
                <li class="context-line" id="context-55"><code>        server.start</code></li>
              </ol>

              
              <ol start="87" class="post-context"
                  id="post-55" onclick="toggle(55);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    
</code></li>
                
                <li class="post-context-line"><code>      def stop
</code></li>
                
                <li class="post-context-line"><code>        raise OptionRequired, :pid unless @options[:pid]
</code></li>
                
                <li class="post-context-line"><code>      
</code></li>
                
                <li class="post-context-line"><code>        tail_log(@options[:log]) do
</code></li>
                
                <li class="post-context-line"><code>          if Server.kill(@options[:pid], @options[:force] ? 0 : (@options[:timeout] || 60))
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;runner.rb</code> in
                <code><strong>run_command</strong></code>
            </li>

            <li class="code system">
              
              <ol start="178"
                  class="pre-context" id="pre-56"
                  onclick="toggle(56);">
                
                <li class="pre-context-line"><code>      when cluster? then Controllers::Cluster.new(@options)
</code></li>
                
                <li class="pre-context-line"><code>      when service? then Controllers::Service.new(@options)
</code></li>
                
                <li class="pre-context-line"><code>      else               Controllers::Controller.new(@options)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>      
</code></li>
                
                <li class="pre-context-line"><code>      if controller.respond_to?(@command)
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
              </ol>
              

              <ol start="185" class="context" id="56"
                  onclick="toggle(56);">
                <li class="context-line" id="context-56"><code>          controller.send(@command, *@arguments)</code></li>
              </ol>

              
              <ol start="186" class="post-context"
                  id="post-56" onclick="toggle(56);">
                
                <li class="post-context-line"><code>        rescue RunnerError =&gt; e
</code></li>
                
                <li class="post-context-line"><code>          abort e.message
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
                <li class="post-context-line"><code>        abort &quot;Invalid options for command: #{@command}&quot;
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;runner.rb</code> in
                <code><strong>run!</strong></code>
            </li>

            <li class="code system">
              
              <ol start="144"
                  class="pre-context" id="pre-57"
                  onclick="toggle(57);">
                
                <li class="pre-context-line"><code>      @arguments = @argv
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>        
</code></li>
                
                <li class="pre-context-line"><code>    # Parse the current shell arguments and run the command.
</code></li>
                
                <li class="pre-context-line"><code>    # Exits on error.
</code></li>
                
                <li class="pre-context-line"><code>    def run!
</code></li>
                
                <li class="pre-context-line"><code>      if self.class.commands.include?(@command)
</code></li>
                
              </ol>
              

              <ol start="151" class="context" id="57"
                  onclick="toggle(57);">
                <li class="context-line" id="context-57"><code>        run_command</code></li>
              </ol>

              
              <ol start="152" class="post-context"
                  id="post-57" onclick="toggle(57);">
                
                <li class="post-context-line"><code>      elsif @command.nil?
</code></li>
                
                <li class="post-context-line"><code>        puts &quot;Command required&quot;
</code></li>
                
                <li class="post-context-line"><code>        puts @parser
</code></li>
                
                <li class="post-context-line"><code>        exit 1  
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
                <li class="post-context-line"><code>        abort &quot;Unknown command: #{@command}. Use one of #{self.class.commands.join(&#x27;, &#x27;)}&quot;
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;bin&#x2F;thin</code> in
                <code><strong>&lt;top (required)&gt;</strong></code>
            </li>

            <li class="code system">
              
              <ol start="1"
                  class="pre-context" id="pre-58"
                  onclick="toggle(58);">
                
                <li class="pre-context-line"><code>#!&#x2F;usr&#x2F;bin&#x2F;env ruby
</code></li>
                
                <li class="pre-context-line"><code># Thin command line interface script.
</code></li>
                
                <li class="pre-context-line"><code># Run &lt;tt&gt;thin -h&lt;&#x2F;tt&gt; to get more usage.
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>require &#x27;thin&#x27;
</code></li>
                
              </ol>
              

              <ol start="6" class="context" id="58"
                  onclick="toggle(58);">
                <li class="context-line" id="context-58"><code>Thin::Runner.new(ARGV).run!</code></li>
              </ol>

              
              <ol start="7" class="post-context"
                  id="post-58" onclick="toggle(58);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;bin&#x2F;thin</code> in
                <code><strong>load</strong></code>
            </li>

            <li class="code system">
              
              <ol start="12"
                  class="pre-context" id="pre-59"
                  onclick="toggle(59);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>if ARGV.first =~ &#x2F;^_(.*)_$&#x2F; and Gem::Version.correct? $1 then
</code></li>
                
                <li class="pre-context-line"><code>  version = $1
</code></li>
                
                <li class="pre-context-line"><code>  ARGV.shift
</code></li>
                
                <li class="pre-context-line"><code>end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>gem &#x27;thin&#x27;, version
</code></li>
                
              </ol>
              

              <ol start="19" class="context" id="59"
                  onclick="toggle(59);">
                <li class="context-line" id="context-59"><code>load Gem.bin_path(&#x27;thin&#x27;, &#x27;thin&#x27;, version)</code></li>
              </ol>

              
              <ol start="20" class="post-context"
                  id="post-59" onclick="toggle(59);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;bin&#x2F;thin</code> in
                <code><strong>&lt;main&gt;</strong></code>
            </li>

            <li class="code system">
              
              <ol start="12"
                  class="pre-context" id="pre-60"
                  onclick="toggle(60);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>if ARGV.first =~ &#x2F;^_(.*)_$&#x2F; and Gem::Version.correct? $1 then
</code></li>
                
                <li class="pre-context-line"><code>  version = $1
</code></li>
                
                <li class="pre-context-line"><code>  ARGV.shift
</code></li>
                
                <li class="pre-context-line"><code>end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>gem &#x27;thin&#x27;, version
</code></li>
                
              </ol>
              

              <ol start="19" class="context" id="60"
                  onclick="toggle(60);">
                <li class="context-line" id="context-60"><code>load Gem.bin_path(&#x27;thin&#x27;, &#x27;thin&#x27;, version)</code></li>
              </ol>

              
              <ol start="20" class="post-context"
                  id="post-60" onclick="toggle(60);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      

      </ul>
    </div> <!-- /BACKTRACE -->

    <div id="get">
      <h3 id="get-info">GET</h3>
      
        <p class="no-data">No GET data.</p>
      
      <div class="clear"></div>
    </div> <!-- /GET -->

    <div id="post">
      <h3 id="post-info">POST</h3>
      
        <p class="no-data">No POST data.</p>
      
      <div class="clear"></div>
    </div> <!-- /POST -->

    <div id="cookies">
      <h3 id="cookie-info">COOKIES</h3>
      
        <p class="no-data">No cookie data.</p>
      
      <div class="clear"></div>
    </div> <!-- /COOKIES -->

    <div id="rack">
      <h3 id="env-info">Rack ENV</h3>
      <table class="req">
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
         
         <tr>
           <td>GATEWAY_INTERFACE</td>
           <td class="code"><div>CGI&#x2F;1.2</div></td>
         </tr>
         
         <tr>
           <td>HTTP_ACCEPT</td>
           <td class="code"><div>text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q=0.9,*&#x2F;*;q=0.8</div></td>
         </tr>
         
         <tr>
           <td>HTTP_ACCEPT_CHARSET</td>
           <td class="code"><div>ISO-8859-1,utf-8;q=0.7,*;q=0.3</div></td>
         </tr>
         
         <tr>
           <td>HTTP_ACCEPT_ENCODING</td>
           <td class="code"><div>gzip,deflate,sdch</div></td>
         </tr>
         
         <tr>
           <td>HTTP_ACCEPT_LANGUAGE</td>
           <td class="code"><div>en-US,en;q=0.8</div></td>
         </tr>
         
         <tr>
           <td>HTTP_CACHE_CONTROL</td>
           <td class="code"><div>max-age=0</div></td>
         </tr>
         
         <tr>
           <td>HTTP_CONNECTION</td>
           <td class="code"><div>keep-alive</div></td>
         </tr>
         
         <tr>
           <td>HTTP_HOST</td>
           <td class="code"><div>localhost:8080</div></td>
         </tr>
         
         <tr>
           <td>HTTP_USER_AGENT</td>
           <td class="code"><div>Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit&#x2F;535.2 (KHTML, like Gecko) Chrome&#x2F;15.0.874.121 Safari&#x2F;535.2</div></td>
         </tr>
         
         <tr>
           <td>HTTP_VERSION</td>
           <td class="code"><div>HTTP&#x2F;1.1</div></td>
         </tr>
         
         <tr>
           <td>PATH_INFO</td>
           <td class="code"><div>&#x2F;</div></td>
         </tr>
         
         <tr>
           <td>QUERY_STRING</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>REMOTE_ADDR</td>
           <td class="code"><div>127.0.0.1</div></td>
         </tr>
         
         <tr>
           <td>REQUEST_METHOD</td>
           <td class="code"><div>GET</div></td>
         </tr>
         
         <tr>
           <td>REQUEST_PATH</td>
           <td class="code"><div>&#x2F;</div></td>
         </tr>
         
         <tr>
           <td>REQUEST_URI</td>
           <td class="code"><div>&#x2F;</div></td>
         </tr>
         
         <tr>
           <td>SCRIPT_NAME</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>SERVER_NAME</td>
           <td class="code"><div>localhost</div></td>
         </tr>
         
         <tr>
           <td>SERVER_PORT</td>
           <td class="code"><div>8080</div></td>
         </tr>
         
         <tr>
           <td>SERVER_PROTOCOL</td>
           <td class="code"><div>HTTP&#x2F;1.1</div></td>
         </tr>
         
         <tr>
           <td>SERVER_SOFTWARE</td>
           <td class="code"><div>thin 1.3.1 codename Triple Espresso</div></td>
         </tr>
         
         <tr>
           <td>async.callback</td>
           <td class="code"><div>#&lt;Method: Thin::Connection#post_process&gt;</div></td>
         </tr>
         
         <tr>
           <td>async.close</td>
           <td class="code"><div>#&lt;EventMachine::DefaultDeferrable:0x00000100db2170&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.errors</td>
           <td class="code"><div>#&lt;Object:0x00000101bee310&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.input</td>
           <td class="code"><div>#&lt;Rack::Lint::InputWrapper:0x00000100dac248 @input=#&lt;StringIO:0x00000100deedf0&gt;&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.logger</td>
           <td class="code"><div>#&lt;Rack::NullLogger:0x00000102bbd110 @app=#&lt;Rack::Protection::FrameOptions:0x00000102bbd250 @app=#&lt;Rack::Protection::IPSpoofing:0x00000102bbd408 @app=#&lt;Rack::Protection::JsonCsrf:0x00000102bbd4f8 @app=#&lt;Rack::Protection::PathTraversal:0x00000102bbd570 @app=#&lt;Rack::Protection::XSSHeader:0x00000102bbd638 @app=#&lt;Rack::Session::Cookie:0x00000100c2d200 @secret=&quot;afiefnaioasdfjhkdku47f34jafusduf47fasdfe&quot;, @coder=#&lt;Rack::Session::Cookie::Base64::Marshal:0x00000100c2d1d8&gt;, @app=#&lt;Smoke::Web::App:0x00000100d88618 @default_layout=:layout, @app=nil, @template_cache=#&lt;Tilt::Cache:0x00000100d885f0 @cache={}&gt;&gt;, @default_options={:key=&gt;&quot;sinatra.session&quot;, :path=&gt;&quot;&#x2F;&quot;, :domain=&gt;nil, :expire_after=&gt;nil, :secure=&gt;false, :httponly=&gt;true, :defer=&gt;false, :renew=&gt;false, :sidbits=&gt;128, :secure_random=&gt;SecureRandom, :secret=&gt;&quot;afiefnaioasdfjhkdku47f34jafusduf47fasdfe&quot;, :coder=&gt;#&lt;Rack::Session::Cookie::Base64::Marshal:0x00000100c2d1d8&gt;}, @key=&quot;sinatra.session&quot;, @cookie_only=true, @sidbits=128, @sid_secure=SecureRandom, @sid_length=32&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :xss_mode=&gt;:block, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :xss_mode=&gt;:block, :frame_options=&gt;:sameorigin, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.multiprocess</td>
           <td class="code"><div>false</div></td>
         </tr>
         
         <tr>
           <td>rack.multithread</td>
           <td class="code"><div>false</div></td>
         </tr>
         
         <tr>
           <td>rack.request.cookie_hash</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.query_hash</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.query_string</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>rack.run_once</td>
           <td class="code"><div>false</div></td>
         </tr>
         
         <tr>
           <td>rack.session</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.session.options</td>
           <td class="code"><div>{:key=&gt;&quot;sinatra.session&quot;, :path=&gt;&quot;&#x2F;&quot;, :domain=&gt;nil, :expire_after=&gt;nil, :secure=&gt;false, :httponly=&gt;true, :defer=&gt;false, :renew=&gt;false, :sidbits=&gt;128, :secure_random=&gt;SecureRandom, :secret=&gt;&quot;afiefnaioasdfjhkdku47f34jafusduf47fasdfe&quot;, :coder=&gt;#&lt;Rack::Session::Cookie::Base64::Marshal:0x00000100c2d1d8&gt;, :id=&gt;nil}</div></td>
         </tr>
         
         <tr>
           <td>rack.session.unpacked_cookie_data</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.url_scheme</td>
           <td class="code"><div>http</div></td>
         </tr>
         
         <tr>
           <td>rack.version</td>
           <td class="code"><div>[1, 0]</div></td>
         </tr>
         
         <tr>
           <td>sinatra.error</td>
           <td class="code"><div>#&lt;Errno::ENOENT: No such file or directory - &#x2F;Users&#x2F;rlyon&#x2F;src&#x2F;ruby&#x2F;sinatra&#x2F;smoke_server&#x2F;lib&#x2F;smoke&#x2F;web&#x2F;..&#x2F;..&#x2F;..&#x2F;views&#x2F;index.erb&gt;</div></td>
         </tr>
         
      </table>
      <div class="clear"></div>
    </div> <!-- /RACK ENV -->

    <p id="explanation">You're seeing this error because you have
enabled the <code>show_exceptions</code> setting.</p>
  </div> <!-- /WRAP -->
  </body>
</html>
GET /__sinatra__/500.png HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: */*
Referer: http://localhost:8080/
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 43
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello __sinatra__ showing files in: 500.png
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
>> Exiting!
>> Writing PID to tmp/pids/thin.8080.pid
>> Thin web server (v1.3.1 codename Triple Espresso)
>> Debugging ON
>> Tracing ON
>> Maximum connections set to 1024
>> Listening on 127.0.0.1:8080, CTRL+C to stop
GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Cache-Control: max-age=0
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

Errno::ENOENT - No such file or directory - /Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/webviews/index.erb:
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt/template.rb:67:in `binread'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt/template.rb:67:in `block in initialize'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt/template.rb:68:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt/template.rb:68:in `initialize'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:661:in `new'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:661:in `block in compile_template'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt.rb:127:in `fetch'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:640:in `compile_template'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:624:in `render'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:512:in `erb'
	/Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/web/app.rb:20:in `block in <class:App>'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1212:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1212:in `block in compile!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:772:in `[]'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:772:in `block (3 levels) in route!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:788:in `route_eval'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:772:in `block (2 levels) in route!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:821:in `block in process_route'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:819:in `catch'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:819:in `process_route'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:771:in `block in route!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:770:in `each'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:770:in `route!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:886:in `dispatch!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:706:in `block in call!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:871:in `block in invoke'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:871:in `catch'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:871:in `invoke'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:706:in `call!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:692:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/session/abstract/id.rb:195:in `context'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/session/abstract/id.rb:190:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/xss_header.rb:22:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/path_traversal.rb:16:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/json_csrf.rb:17:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/base.rb:47:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/xss_header.rb:22:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/nulllogger.rb:9:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/head.rb:9:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/showexceptions.rb:21:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1334:in `block in call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1403:in `synchronize'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1334:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/lint.rb:48:in `_call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/lint.rb:36:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:80:in `block in pre_process'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:78:in `catch'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:78:in `pre_process'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:53:in `process'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:38:in `receive_data'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/eventmachine-0.12.10/lib/eventmachine.rb:256:in `run_machine'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/eventmachine-0.12.10/lib/eventmachine.rb:256:in `run'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/backends/base.rb:61:in `start'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/server.rb:159:in `start'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/controllers/controller.rb:86:in `start'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:185:in `run_command'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:151:in `run!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/bin/thin:6:in `<top (required)>'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `load'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `<main>'
HTTP/1.1 500 Internal Server Error
Content-Type: text/html
Content-Length: 168637
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Errno::ENOENT at &#x2F;</title>

  <script type="text/javascript">
  //<!--
  function toggle(id) {
    var pre  = document.getElementById("pre-" + id);
    var post = document.getElementById("post-" + id);
    var context = document.getElementById("context-" + id);

    if (pre.style.display == 'block') {
      pre.style.display = 'none';
      post.style.display = 'none';
      context.style.background = "none";
    } else {
      pre.style.display = 'block';
      post.style.display = 'block';
      context.style.background = "#fffed9";
    }
  }

  function toggleBacktrace(){
    var bt = document.getElementById("backtrace");
    var toggler = document.getElementById("expando");

    if (bt.className == 'condensed') {
      bt.className = 'expanded';
      toggler.innerHTML = "(condense)";
    } else {
      bt.className = 'condensed';
      toggler.innerHTML = "(expand)";
    }
  }
  //-->
  </script>

<style type="text/css" media="screen">
  *                   {margin: 0; padding: 0; border: 0; outline: 0;}
  div.clear           {clear: both;}
  body                {background: #EEEEEE; margin: 0; padding: 0;
                       font-family: 'Lucida Grande', 'Lucida Sans Unicode',
                       'Garuda';}
  code                {font-family: 'Lucida Console', monospace;
                       font-size: 12px;}
  li                  {height: 18px;}
  ul                  {list-style: none; margin: 0; padding: 0;}
  ol:hover            {cursor: pointer;}
  ol li               {white-space: pre;}
  #explanation        {font-size: 12px; color: #666666;
                       margin: 20px 0 0 100px;}
/* WRAP */
  #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;
                       padding: 30px 50px 20px 50px;
                       border-left: 1px solid #DDDDDD;
                       border-right: 1px solid #DDDDDD;}
/* HEADER */
  #header             {margin: 0 auto 25px auto;}
  #header img         {float: left;}
  #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;
                       font-family: 'Lucida Grande', 'Lucida Sans Unicode';}
  h1                  {margin: 0; font-size: 36px; color: #981919;}
  h2                  {margin: 0; font-size: 22px; color: #333333;}
  #header ul          {margin: 0; font-size: 12px; color: #666666;}
  #header ul li strong{color: #444444;}
  #header ul li       {display: inline; padding: 0 10px;}
  #header ul li.first {padding-left: 0;}
  #header ul li.last  {border: 0; padding-right: 0;}
/* BODY */
  #backtrace,
  #get,
  #post,
  #cookies,
  #rack               {width: 980px; margin: 0 auto 10px auto;}
  p#nav               {float: right; font-size: 14px;}
/* BACKTRACE */
  a#expando           {float: left; padding-left: 5px; color: #666666;
                      font-size: 14px; text-decoration: none; cursor: pointer;}
  a#expando:hover     {text-decoration: underline;}
  h3                  {float: left; width: 100px; margin-bottom: 10px;
                       color: #981919; font-size: 14px; font-weight: bold;}
  #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}
  #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;
                           font-size: 12px; color: #333333;}
  #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;
                       border-bottom: 0;}
  #backtrace ol       {width: 920px; margin-left: 50px;
                       font: 10px 'Lucida Console', monospace; color: #666666;}
  #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;
                       padding: 2px 0;}
  #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}
  #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;
                       padding: 3px 0;}
  #backtrace-ul .code {padding: 6px 0 4px 0;}
  #backtrace.condensed .system,
  #backtrace.condensed .framework {display:none;}
/* REQUEST DATA */
  p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}
  table.req           {width: 980px; text-align: left; font-size: 12px;
                       color: #666666; padding: 0; border-spacing: 0;
                       border: 1px solid #EEEEEE; border-bottom: 0;
                       border-left: 0;
                       clear:both}
  table.req tr th     {padding: 2px 10px; font-weight: bold;
                       background: #F7F7F7; border-bottom: 1px solid #EEEEEE;
                       border-left: 1px solid #EEEEEE;}
  table.req tr td     {padding: 2px 20px 2px 10px;
                       border-bottom: 1px solid #EEEEEE;
                       border-left: 1px solid #EEEEEE;}
/* HIDE PRE/POST CODE AT START */
  .pre-context,
  .post-context       {display: none;}

  table td.code       {width:750px}
  table td.code div   {width:750px;overflow:hidden}
</style>
</head>
<body>
  <div id="wrap">
    <div id="header">
      <img src="/__sinatra__/500.png" alt="application error" height="161" width="313" />
      <div id="summary">
        <h1><strong>Errno::ENOENT</strong> at <strong>&#x2F;
          </strong></h1>
        <h2>No such file or directory - &#x2F;Users&#x2F;rlyon&#x2F;src&#x2F;ruby&#x2F;sinatra&#x2F;smoke_server&#x2F;lib&#x2F;smoke&#x2F;webviews&#x2F;index.erb</h2>
        <ul>
          <li class="first"><strong>file:</strong> <code>
            template.rb</code></li>
          <li><strong>location:</strong> <code>binread
            </code></li>
          <li class="last"><strong>line:
            </strong> 67</li>
        </ul>
      </div>
      <div class="clear"></div>
    </div>

    <div id="backtrace" class='condensed'>
      <h3>BACKTRACE</h3>
      <p><a href="#" id="expando"
            onclick="toggleBacktrace(); return false">(expand)</a></p>
      <p id="nav"><strong>JUMP TO:</strong>
         <a href="#get-info">GET</a>
         <a href="#post-info">POST</a>
         <a href="#cookie-info">COOKIES</a>
         <a href="#env-info">ENV</a>
      </p>
      <div class="clear"></div>

      <ul id="backtrace-ul">

      
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>binread</strong></code>
            </li>

            <li class="code system">
              
              <ol start="60"
                  class="pre-context" id="pre-1"
                  onclick="toggle(1);">
                
                <li class="pre-context-line"><code>      @compiled_method = {}
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # used on 1.9 to set the encoding if it is not set elsewhere (like a magic comment)
</code></li>
                
                <li class="pre-context-line"><code>      # currently only used if template compiles to ruby
</code></li>
                
                <li class="pre-context-line"><code>      @default_encoding = @options.delete :default_encoding
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # load template data and prepare (uses binread to avoid encoding issues)
</code></li>
                
              </ol>
              

              <ol start="67" class="context" id="1"
                  onclick="toggle(1);">
                <li class="context-line" id="context-1"><code>      @reader = block || lambda { |t| File.respond_to?(:binread) ? File.binread(@file) : File.read(@file) }</code></li>
              </ol>

              
              <ol start="68" class="post-context"
                  id="post-1" onclick="toggle(1);">
                
                <li class="post-context-line"><code>      @data = @reader.call(self)
</code></li>
                
                <li class="post-context-line"><code>      prepare
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Render the template in the given scope with the locals specified. If a
</code></li>
                
                <li class="post-context-line"><code>    # block is given, it is typically available within the template via
</code></li>
                
                <li class="post-context-line"><code>    # +yield+.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>block in initialize</strong></code>
            </li>

            <li class="code system">
              
              <ol start="60"
                  class="pre-context" id="pre-2"
                  onclick="toggle(2);">
                
                <li class="pre-context-line"><code>      @compiled_method = {}
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # used on 1.9 to set the encoding if it is not set elsewhere (like a magic comment)
</code></li>
                
                <li class="pre-context-line"><code>      # currently only used if template compiles to ruby
</code></li>
                
                <li class="pre-context-line"><code>      @default_encoding = @options.delete :default_encoding
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # load template data and prepare (uses binread to avoid encoding issues)
</code></li>
                
              </ol>
              

              <ol start="67" class="context" id="2"
                  onclick="toggle(2);">
                <li class="context-line" id="context-2"><code>      @reader = block || lambda { |t| File.respond_to?(:binread) ? File.binread(@file) : File.read(@file) }</code></li>
              </ol>

              
              <ol start="68" class="post-context"
                  id="post-2" onclick="toggle(2);">
                
                <li class="post-context-line"><code>      @data = @reader.call(self)
</code></li>
                
                <li class="post-context-line"><code>      prepare
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Render the template in the given scope with the locals specified. If a
</code></li>
                
                <li class="post-context-line"><code>    # block is given, it is typically available within the template via
</code></li>
                
                <li class="post-context-line"><code>    # +yield+.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="61"
                  class="pre-context" id="pre-3"
                  onclick="toggle(3);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # used on 1.9 to set the encoding if it is not set elsewhere (like a magic comment)
</code></li>
                
                <li class="pre-context-line"><code>      # currently only used if template compiles to ruby
</code></li>
                
                <li class="pre-context-line"><code>      @default_encoding = @options.delete :default_encoding
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # load template data and prepare (uses binread to avoid encoding issues)
</code></li>
                
                <li class="pre-context-line"><code>      @reader = block || lambda { |t| File.respond_to?(:binread) ? File.binread(@file) : File.read(@file) }
</code></li>
                
              </ol>
              

              <ol start="68" class="context" id="3"
                  onclick="toggle(3);">
                <li class="context-line" id="context-3"><code>      @data = @reader.call(self)</code></li>
              </ol>

              
              <ol start="69" class="post-context"
                  id="post-3" onclick="toggle(3);">
                
                <li class="post-context-line"><code>      prepare
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Render the template in the given scope with the locals specified. If a
</code></li>
                
                <li class="post-context-line"><code>    # block is given, it is typically available within the template via
</code></li>
                
                <li class="post-context-line"><code>    # +yield+.
</code></li>
                
                <li class="post-context-line"><code>    def render(scope=Object.new, locals={}, &amp;block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>initialize</strong></code>
            </li>

            <li class="code system">
              
              <ol start="61"
                  class="pre-context" id="pre-4"
                  onclick="toggle(4);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # used on 1.9 to set the encoding if it is not set elsewhere (like a magic comment)
</code></li>
                
                <li class="pre-context-line"><code>      # currently only used if template compiles to ruby
</code></li>
                
                <li class="pre-context-line"><code>      @default_encoding = @options.delete :default_encoding
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # load template data and prepare (uses binread to avoid encoding issues)
</code></li>
                
                <li class="pre-context-line"><code>      @reader = block || lambda { |t| File.respond_to?(:binread) ? File.binread(@file) : File.read(@file) }
</code></li>
                
              </ol>
              

              <ol start="68" class="context" id="4"
                  onclick="toggle(4);">
                <li class="context-line" id="context-4"><code>      @data = @reader.call(self)</code></li>
              </ol>

              
              <ol start="69" class="post-context"
                  id="post-4" onclick="toggle(4);">
                
                <li class="post-context-line"><code>      prepare
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Render the template in the given scope with the locals specified. If a
</code></li>
                
                <li class="post-context-line"><code>    # block is given, it is typically available within the template via
</code></li>
                
                <li class="post-context-line"><code>    # +yield+.
</code></li>
                
                <li class="post-context-line"><code>    def render(scope=Object.new, locals={}, &amp;block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>new</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="654"
                  class="pre-context" id="pre-5"
                  onclick="toggle(5);">
                
                <li class="pre-context-line"><code>              path ||= file # keep the initial path rather than the last one
</code></li>
                
                <li class="pre-context-line"><code>              if found = File.exists?(file)
</code></li>
                
                <li class="pre-context-line"><code>                path = file
</code></li>
                
                <li class="pre-context-line"><code>                break
</code></li>
                
                <li class="pre-context-line"><code>              end
</code></li>
                
                <li class="pre-context-line"><code>            end
</code></li>
                
                <li class="pre-context-line"><code>            throw :layout_missing if eat_errors and not found
</code></li>
                
              </ol>
              

              <ol start="661" class="context" id="5"
                  onclick="toggle(5);">
                <li class="context-line" id="context-5"><code>            template.new(path, 1, options)</code></li>
              </ol>

              
              <ol start="662" class="post-context"
                  id="post-5" onclick="toggle(5);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        when Proc, String
</code></li>
                
                <li class="post-context-line"><code>          body = data.is_a?(String) ? Proc.new { data } : data
</code></li>
                
                <li class="post-context-line"><code>          path, line = settings.caller_locations.first
</code></li>
                
                <li class="post-context-line"><code>          template.new(path, line.to_i, options, &amp;body)
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          raise ArgumentError, &quot;Sorry, don&#x27;t know how to render #{data.inspect}.&quot;
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in compile_template</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="654"
                  class="pre-context" id="pre-6"
                  onclick="toggle(6);">
                
                <li class="pre-context-line"><code>              path ||= file # keep the initial path rather than the last one
</code></li>
                
                <li class="pre-context-line"><code>              if found = File.exists?(file)
</code></li>
                
                <li class="pre-context-line"><code>                path = file
</code></li>
                
                <li class="pre-context-line"><code>                break
</code></li>
                
                <li class="pre-context-line"><code>              end
</code></li>
                
                <li class="pre-context-line"><code>            end
</code></li>
                
                <li class="pre-context-line"><code>            throw :layout_missing if eat_errors and not found
</code></li>
                
              </ol>
              

              <ol start="661" class="context" id="6"
                  onclick="toggle(6);">
                <li class="context-line" id="context-6"><code>            template.new(path, 1, options)</code></li>
              </ol>

              
              <ol start="662" class="post-context"
                  id="post-6" onclick="toggle(6);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        when Proc, String
</code></li>
                
                <li class="post-context-line"><code>          body = data.is_a?(String) ? Proc.new { data } : data
</code></li>
                
                <li class="post-context-line"><code>          path, line = settings.caller_locations.first
</code></li>
                
                <li class="post-context-line"><code>          template.new(path, line.to_i, options, &amp;body)
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          raise ArgumentError, &quot;Sorry, don&#x27;t know how to render #{data.inspect}.&quot;
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt.rb</code> in
                <code><strong>fetch</strong></code>
            </li>

            <li class="code system">
              
              <ol start="120"
                  class="pre-context" id="pre-7"
                  onclick="toggle(7);">
                
                <li class="pre-context-line"><code>  # Subsequent invocations return the already loaded template object.
</code></li>
                
                <li class="pre-context-line"><code>  class Cache
</code></li>
                
                <li class="pre-context-line"><code>    def initialize
</code></li>
                
                <li class="pre-context-line"><code>      @cache = {}
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def fetch(*key)
</code></li>
                
              </ol>
              

              <ol start="127" class="context" id="7"
                  onclick="toggle(7);">
                <li class="context-line" id="context-7"><code>      @cache[key] ||= yield</code></li>
              </ol>

              
              <ol start="128" class="post-context"
                  id="post-7" onclick="toggle(7);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def clear
</code></li>
                
                <li class="post-context-line"><code>      @cache = {}
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>compile_template</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="633"
                  class="pre-context" id="pre-8"
                  onclick="toggle(8);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      output.extend(ContentTyped).content_type = content_type if content_type
</code></li>
                
                <li class="pre-context-line"><code>      output
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def compile_template(engine, data, options, views)
</code></li>
                
                <li class="pre-context-line"><code>      eat_errors = options.delete :eat_errors
</code></li>
                
              </ol>
              

              <ol start="640" class="context" id="8"
                  onclick="toggle(8);">
                <li class="context-line" id="context-8"><code>      template_cache.fetch engine, data, options do</code></li>
              </ol>

              
              <ol start="641" class="post-context"
                  id="post-8" onclick="toggle(8);">
                
                <li class="post-context-line"><code>        template = Tilt[engine]
</code></li>
                
                <li class="post-context-line"><code>        raise &quot;Template engine not found: #{engine}&quot; if template.nil?
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        case data
</code></li>
                
                <li class="post-context-line"><code>        when Symbol
</code></li>
                
                <li class="post-context-line"><code>          body, path, line = settings.templates[data]
</code></li>
                
                <li class="post-context-line"><code>          if body
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>render</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="617"
                  class="pre-context" id="pre-9"
                  onclick="toggle(9);">
                
                <li class="pre-context-line"><code>      content_type    = options.delete(:content_type)  || options.delete(:default_content_type)
</code></li>
                
                <li class="pre-context-line"><code>      layout_engine   = options.delete(:layout_engine) || engine
</code></li>
                
                <li class="pre-context-line"><code>      scope           = options.delete(:scope)         || self
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # compile and render template
</code></li>
                
                <li class="pre-context-line"><code>      layout_was      = @default_layout
</code></li>
                
                <li class="pre-context-line"><code>      @default_layout = false
</code></li>
                
              </ol>
              

              <ol start="624" class="context" id="9"
                  onclick="toggle(9);">
                <li class="context-line" id="context-9"><code>      template        = compile_template(engine, data, options, views)</code></li>
              </ol>

              
              <ol start="625" class="post-context"
                  id="post-9" onclick="toggle(9);">
                
                <li class="post-context-line"><code>      output          = template.render(scope, locals, &amp;block)
</code></li>
                
                <li class="post-context-line"><code>      @default_layout = layout_was
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # render layout
</code></li>
                
                <li class="post-context-line"><code>      if layout
</code></li>
                
                <li class="post-context-line"><code>        options = options.merge(:views =&gt; views, :layout =&gt; false, :eat_errors =&gt; eat_errors, :scope =&gt; scope)
</code></li>
                
                <li class="post-context-line"><code>        catch(:layout_missing) { return render(layout_engine, layout, options, locals) { output } }
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>erb</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="505"
                  class="pre-context" id="pre-10"
                  onclick="toggle(10);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def initialize
</code></li>
                
                <li class="pre-context-line"><code>      super
</code></li>
                
                <li class="pre-context-line"><code>      @default_layout = :layout
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def erb(template, options={}, locals={})
</code></li>
                
              </ol>
              

              <ol start="512" class="context" id="10"
                  onclick="toggle(10);">
                <li class="context-line" id="context-10"><code>      render :erb, template, options, locals</code></li>
              </ol>

              
              <ol start="513" class="post-context"
                  id="post-10" onclick="toggle(10);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def erubis(template, options={}, locals={})
</code></li>
                
                <li class="post-context-line"><code>      warn &quot;Sinatra::Templates#erubis is deprecated and will be removed, use #erb instead.\n&quot; \
</code></li>
                
                <li class="post-context-line"><code>        &quot;If you have Erubis installed, it will be used automatically.&quot;
</code></li>
                
                <li class="post-context-line"><code>      render :erubis, template, options, locals
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;src&#x2F;ruby&#x2F;sinatra&#x2F;smoke_server&#x2F;lib&#x2F;smoke&#x2F;web&#x2F;app.rb</code> in
                <code><strong>block in &lt;class:App&gt;</strong></code>
            </li>

            <li class="code app">
              
              <ol start="13"
                  class="pre-context" id="pre-11"
                  onclick="toggle(11);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>      
</code></li>
                
                <li class="pre-context-line"><code>      get &#x27;&#x2F;&#x27; do
</code></li>
                
                <li class="pre-context-line"><code>        if session?
</code></li>
                
                <li class="pre-context-line"><code>          @username = session[:username]
</code></li>
                
                <li class="pre-context-line"><code>          erb :dashboard
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="20" class="context" id="11"
                  onclick="toggle(11);">
                <li class="context-line" id="context-11"><code>      	  erb :index</code></li>
              </ol>

              
              <ol start="21" class="post-context"
                  id="post-11" onclick="toggle(11);">
                
                <li class="post-context-line"><code>    	  end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      
</code></li>
                
                <li class="post-context-line"><code>      # Login to the account
</code></li>
                
                <li class="post-context-line"><code>      get &#x27;&#x2F;login&#x27; do
</code></li>
                
                <li class="post-context-line"><code>        if session?
</code></li>
                
                <li class="post-context-line"><code>          redirect &#x27;&#x2F;&#x27;
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1205"
                  class="pre-context" id="pre-12"
                  onclick="toggle(12);">
                
                <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        pattern, keys           = compile path
</code></li>
                
                <li class="pre-context-line"><code>        conditions, @conditions = @conditions, []
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        [ pattern, keys, conditions, block.arity != 0 ?
</code></li>
                
                <li class="pre-context-line"><code>            proc { |a,p| unbound_method.bind(a).call(*p) } :
</code></li>
                
              </ol>
              

              <ol start="1212" class="context" id="12"
                  onclick="toggle(12);">
                <li class="context-line" id="context-12"><code>            proc { |a,p| unbound_method.bind(a).call } ]</code></li>
              </ol>

              
              <ol start="1213" class="post-context"
                  id="post-12" onclick="toggle(12);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def compile(path)
</code></li>
                
                <li class="post-context-line"><code>        keys = []
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to? :to_str
</code></li>
                
                <li class="post-context-line"><code>          pattern = path.to_str.gsub(&#x2F;[^\?\%\\\&#x2F;\:\*\w]&#x2F;) { |c| encoded(c) }
</code></li>
                
                <li class="post-context-line"><code>          pattern.gsub!(&#x2F;((:\w+)|\*)&#x2F;) do |match|
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in compile!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1205"
                  class="pre-context" id="pre-13"
                  onclick="toggle(13);">
                
                <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        pattern, keys           = compile path
</code></li>
                
                <li class="pre-context-line"><code>        conditions, @conditions = @conditions, []
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        [ pattern, keys, conditions, block.arity != 0 ?
</code></li>
                
                <li class="pre-context-line"><code>            proc { |a,p| unbound_method.bind(a).call(*p) } :
</code></li>
                
              </ol>
              

              <ol start="1212" class="context" id="13"
                  onclick="toggle(13);">
                <li class="context-line" id="context-13"><code>            proc { |a,p| unbound_method.bind(a).call } ]</code></li>
              </ol>

              
              <ol start="1213" class="post-context"
                  id="post-13" onclick="toggle(13);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def compile(path)
</code></li>
                
                <li class="post-context-line"><code>        keys = []
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to? :to_str
</code></li>
                
                <li class="post-context-line"><code>          pattern = path.to_str.gsub(&#x2F;[^\?\%\\\&#x2F;\:\*\w]&#x2F;) { |c| encoded(c) }
</code></li>
                
                <li class="post-context-line"><code>          pattern.gsub!(&#x2F;((:\w+)|\*)&#x2F;) do |match|
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>[]</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="765"
                  class="pre-context" id="pre-14"
                  onclick="toggle(14);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
              </ol>
              

              <ol start="772" class="context" id="14"
                  onclick="toggle(14);">
                <li class="context-line" id="context-14"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="773" class="post-context"
                  id="post-14" onclick="toggle(14);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block (3 levels) in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="765"
                  class="pre-context" id="pre-15"
                  onclick="toggle(15);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
              </ol>
              

              <ol start="772" class="context" id="15"
                  onclick="toggle(15);">
                <li class="context-line" id="context-15"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="773" class="post-context"
                  id="post-15" onclick="toggle(15);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>route_eval</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="781"
                  class="pre-context" id="pre-16"
                  onclick="toggle(16);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      route_eval(&amp;pass_block) if pass_block
</code></li>
                
                <li class="pre-context-line"><code>      route_missing
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run a route block and throw :halt with the result.
</code></li>
                
                <li class="pre-context-line"><code>    def route_eval
</code></li>
                
              </ol>
              

              <ol start="788" class="context" id="16"
                  onclick="toggle(16);">
                <li class="context-line" id="context-16"><code>      throw :halt, yield</code></li>
              </ol>

              
              <ol start="789" class="post-context"
                  id="post-16" onclick="toggle(16);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # If the current request matches pattern and conditions, fill params
</code></li>
                
                <li class="post-context-line"><code>    # with keys and call the given block.
</code></li>
                
                <li class="post-context-line"><code>    # Revert params afterwards.
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
                <li class="post-context-line"><code>    # Returns pass block.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block (2 levels) in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="765"
                  class="pre-context" id="pre-17"
                  onclick="toggle(17);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
              </ol>
              

              <ol start="772" class="context" id="17"
                  onclick="toggle(17);">
                <li class="context-line" id="context-17"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="773" class="post-context"
                  id="post-17" onclick="toggle(17);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in process_route</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="814"
                  class="pre-context" id="pre-18"
                  onclick="toggle(18);">
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            {}
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        @params = @original_params.merge(params)
</code></li>
                
                <li class="pre-context-line"><code>        @block_params = values
</code></li>
                
                <li class="pre-context-line"><code>        catch(:pass) do
</code></li>
                
                <li class="pre-context-line"><code>          conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
              </ol>
              

              <ol start="821" class="context" id="18"
                  onclick="toggle(18);">
                <li class="context-line" id="context-18"><code>          block ? block[self, @block_params] : yield(self, @block_params)</code></li>
              </ol>

              
              <ol start="822" class="post-context"
                  id="post-18" onclick="toggle(18);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = @original_params
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # No matching route was found or all routes passed. The default
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="812"
                  class="pre-context" id="pre-19"
                  onclick="toggle(19);">
                
                <li class="pre-context-line"><code>          elsif values.any?
</code></li>
                
                <li class="pre-context-line"><code>            {&#x27;captures&#x27; =&gt; values}
</code></li>
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            {}
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        @params = @original_params.merge(params)
</code></li>
                
                <li class="pre-context-line"><code>        @block_params = values
</code></li>
                
              </ol>
              

              <ol start="819" class="context" id="19"
                  onclick="toggle(19);">
                <li class="context-line" id="context-19"><code>        catch(:pass) do</code></li>
              </ol>

              
              <ol start="820" class="post-context"
                  id="post-19" onclick="toggle(19);">
                
                <li class="post-context-line"><code>          conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
                <li class="post-context-line"><code>          block ? block[self, @block_params] : yield(self, @block_params)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = @original_params
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>process_route</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="812"
                  class="pre-context" id="pre-20"
                  onclick="toggle(20);">
                
                <li class="pre-context-line"><code>          elsif values.any?
</code></li>
                
                <li class="pre-context-line"><code>            {&#x27;captures&#x27; =&gt; values}
</code></li>
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            {}
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        @params = @original_params.merge(params)
</code></li>
                
                <li class="pre-context-line"><code>        @block_params = values
</code></li>
                
              </ol>
              

              <ol start="819" class="context" id="20"
                  onclick="toggle(20);">
                <li class="context-line" id="context-20"><code>        catch(:pass) do</code></li>
              </ol>

              
              <ol start="820" class="post-context"
                  id="post-20" onclick="toggle(20);">
                
                <li class="post-context-line"><code>          conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
                <li class="post-context-line"><code>          block ? block[self, @block_params] : yield(self, @block_params)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = @original_params
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="764"
                  class="pre-context" id="pre-21"
                  onclick="toggle(21);">
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
              </ol>
              

              <ol start="771" class="context" id="21"
                  onclick="toggle(21);">
                <li class="context-line" id="context-21"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|</code></li>
              </ol>

              
              <ol start="772" class="post-context"
                  id="post-21" onclick="toggle(21);">
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>each</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="763"
                  class="pre-context" id="pre-22"
                  onclick="toggle(22);">
                
                <li class="pre-context-line"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)
</code></li>
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
              </ol>
              

              <ol start="770" class="context" id="22"
                  onclick="toggle(22);">
                <li class="context-line" id="context-22"><code>        routes.each do |pattern, keys, conditions, block|</code></li>
              </ol>

              
              <ol start="771" class="post-context"
                  id="post-22" onclick="toggle(22);">
                
                <li class="post-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="763"
                  class="pre-context" id="pre-23"
                  onclick="toggle(23);">
                
                <li class="pre-context-line"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)
</code></li>
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
              </ol>
              

              <ol start="770" class="context" id="23"
                  onclick="toggle(23);">
                <li class="context-line" id="context-23"><code>        routes.each do |pattern, keys, conditions, block|</code></li>
              </ol>

              
              <ol start="771" class="post-context"
                  id="post-23" onclick="toggle(23);">
                
                <li class="post-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>dispatch!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="879"
                  class="pre-context" id="pre-24"
                  onclick="toggle(24);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Dispatch a request with error handling.
</code></li>
                
                <li class="pre-context-line"><code>    def dispatch!
</code></li>
                
                <li class="pre-context-line"><code>      static! if settings.static? &amp;&amp; (request.get? || request.head?)
</code></li>
                
                <li class="pre-context-line"><code>      filter! :before
</code></li>
                
              </ol>
              

              <ol start="886" class="context" id="24"
                  onclick="toggle(24);">
                <li class="context-line" id="context-24"><code>      route!</code></li>
              </ol>

              
              <ol start="887" class="post-context"
                  id="post-24" onclick="toggle(24);">
                
                <li class="post-context-line"><code>    rescue ::Exception =&gt; boom
</code></li>
                
                <li class="post-context-line"><code>      handle_exception!(boom)
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      filter! :after unless env[&#x27;sinatra.static_file&#x27;]
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Error handling during requests.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in call!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="699"
                  class="pre-context" id="pre-25"
                  onclick="toggle(25);">
                
                <li class="pre-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
                <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
</code></li>
                
                <li class="pre-context-line"><code>      force_encoding(@params)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @response[&#x27;Content-Type&#x27;] = nil
</code></li>
                
              </ol>
              

              <ol start="706" class="context" id="25"
                  onclick="toggle(25);">
                <li class="context-line" id="context-25"><code>      invoke { dispatch! }</code></li>
              </ol>

              
              <ol start="707" class="post-context"
                  id="post-25" onclick="toggle(25);">
                
                <li class="post-context-line"><code>      invoke { error_block!(response.status) }
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        if Array === body and body[0].respond_to? :content_type
</code></li>
                
                <li class="post-context-line"><code>          content_type body[0].content_type
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          content_type :html
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="864"
                  class="pre-context" id="pre-26"
                  onclick="toggle(26);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="871" class="context" id="26"
                  onclick="toggle(26);">
                <li class="context-line" id="context-26"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="872" class="post-context"
                  id="post-26" onclick="toggle(26);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
                <li class="post-context-line"><code>        body res
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="864"
                  class="pre-context" id="pre-27"
                  onclick="toggle(27);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="871" class="context" id="27"
                  onclick="toggle(27);">
                <li class="context-line" id="context-27"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="872" class="post-context"
                  id="post-27" onclick="toggle(27);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
                <li class="post-context-line"><code>        body res
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="864"
                  class="pre-context" id="pre-28"
                  onclick="toggle(28);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="871" class="context" id="28"
                  onclick="toggle(28);">
                <li class="context-line" id="context-28"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="872" class="post-context"
                  id="post-28" onclick="toggle(28);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
                <li class="post-context-line"><code>        body res
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="699"
                  class="pre-context" id="pre-29"
                  onclick="toggle(29);">
                
                <li class="pre-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
                <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
</code></li>
                
                <li class="pre-context-line"><code>      force_encoding(@params)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @response[&#x27;Content-Type&#x27;] = nil
</code></li>
                
              </ol>
              

              <ol start="706" class="context" id="29"
                  onclick="toggle(29);">
                <li class="context-line" id="context-29"><code>      invoke { dispatch! }</code></li>
              </ol>

              
              <ol start="707" class="post-context"
                  id="post-29" onclick="toggle(29);">
                
                <li class="post-context-line"><code>      invoke { error_block!(response.status) }
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        if Array === body and body[0].respond_to? :content_type
</code></li>
                
                <li class="post-context-line"><code>          content_type body[0].content_type
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          content_type :html
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="685"
                  class="pre-context" id="pre-30"
                  onclick="toggle(30);">
                
                <li class="pre-context-line"><code>      @app = app
</code></li>
                
                <li class="pre-context-line"><code>      @template_cache = Tilt::Cache.new
</code></li>
                
                <li class="pre-context-line"><code>      yield self if block_given?
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Rack call interface.
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="692" class="context" id="30"
                  onclick="toggle(30);">
                <li class="context-line" id="context-30"><code>      dup.call!(env)</code></li>
              </ol>

              
              <ol start="693" class="post-context"
                  id="post-30" onclick="toggle(30);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    attr_accessor :env, :request, :response, :params
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def call!(env) # :nodoc:
</code></li>
                
                <li class="post-context-line"><code>      @env      = env
</code></li>
                
                <li class="post-context-line"><code>      @request  = Request.new(env)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;session&#x2F;abstract&#x2F;id.rb</code> in
                <code><strong>context</strong></code>
            </li>

            <li class="code system">
              
              <ol start="188"
                  class="pre-context" id="pre-31"
                  onclick="toggle(31);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def call(env)
</code></li>
                
                <li class="pre-context-line"><code>          context(env)
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def context(env, app=@app)
</code></li>
                
                <li class="pre-context-line"><code>          prepare_session(env)
</code></li>
                
              </ol>
              

              <ol start="195" class="context" id="31"
                  onclick="toggle(31);">
                <li class="context-line" id="context-31"><code>          status, headers, body = app.call(env)</code></li>
              </ol>

              
              <ol start="196" class="post-context"
                  id="post-31" onclick="toggle(31);">
                
                <li class="post-context-line"><code>          commit_session(env, status, headers, body)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        def initialize_sid
</code></li>
                
                <li class="post-context-line"><code>          @sidbits = @default_options[:sidbits]
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;session&#x2F;abstract&#x2F;id.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="183"
                  class="pre-context" id="pre-32"
                  onclick="toggle(32);">
                
                <li class="pre-context-line"><code>          @default_options = self.class::DEFAULT_OPTIONS.merge(options)
</code></li>
                
                <li class="pre-context-line"><code>          @key = options[:key] || &quot;rack.session&quot;
</code></li>
                
                <li class="pre-context-line"><code>          @cookie_only = @default_options.delete(:cookie_only)
</code></li>
                
                <li class="pre-context-line"><code>          initialize_sid
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def call(env)
</code></li>
                
              </ol>
              

              <ol start="190" class="context" id="32"
                  onclick="toggle(32);">
                <li class="context-line" id="context-32"><code>          context(env)</code></li>
              </ol>

              
              <ol start="191" class="post-context"
                  id="post-32" onclick="toggle(32);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        def context(env, app=@app)
</code></li>
                
                <li class="post-context-line"><code>          prepare_session(env)
</code></li>
                
                <li class="post-context-line"><code>          status, headers, body = app.call(env)
</code></li>
                
                <li class="post-context-line"><code>          commit_session(env, status, headers, body)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="15"
                  class="pre-context" id="pre-33"
                  onclick="toggle(33);">
                
                <li class="pre-context-line"><code>      default_options :xss_mode =&gt; :block
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def header
</code></li>
                
                <li class="pre-context-line"><code>        { &#x27;X-XSS-Protection&#x27; =&gt; &quot;1; mode=#{options[:xss_mode]}&quot; }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="22" class="context" id="33"
                  onclick="toggle(33);">
                <li class="context-line" id="context-33"><code>        status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="23" class="post-context"
                  id="post-33" onclick="toggle(33);">
                
                <li class="post-context-line"><code>        [status, header.merge(headers), body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="9"
                  class="pre-context" id="pre-34"
                  onclick="toggle(34);">
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.
</code></li>
                
                <li class="pre-context-line"><code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.
</code></li>
                
                <li class="pre-context-line"><code>    class PathTraversal &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        path_was         = env[&quot;PATH_INFO&quot;]
</code></li>
                
                <li class="pre-context-line"><code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was
</code></li>
                
              </ol>
              

              <ol start="16" class="context" id="34"
                  onclick="toggle(34);">
                <li class="context-line" id="context-34"><code>        app.call env</code></li>
              </ol>

              
              <ol start="17" class="post-context"
                  id="post-34" onclick="toggle(34);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        env[&quot;PATH_INFO&quot;] = path_was
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def cleanup(path)
</code></li>
                
                <li class="post-context-line"><code>        parts     = []
</code></li>
                
                <li class="post-context-line"><code>        unescaped = path.gsub(&#x27;%2e&#x27;, &#x27;.&#x27;).gsub(&#x27;%2f&#x27;, &#x27;&#x2F;&#x27;)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="10"
                  class="pre-context" id="pre-35"
                  onclick="toggle(35);">
                
                <li class="pre-context-line"><code>    # JSON GET APIs are vulnerable to being embedded as JavaScript while the
</code></li>
                
                <li class="pre-context-line"><code>    # Array prototype has been patched to track data. Checks the referrer
</code></li>
                
                <li class="pre-context-line"><code>    # even on GET requests if the content type is JSON.
</code></li>
                
                <li class="pre-context-line"><code>    class JsonCsrf &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      default_reaction :deny
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="17" class="context" id="35"
                  onclick="toggle(35);">
                <li class="context-line" id="context-35"><code>        status, headers, body = app.call(env)</code></li>
              </ol>

              
              <ol start="18" class="post-context"
                  id="post-35" onclick="toggle(35);">
                
                <li class="post-context-line"><code>        if headers[&#x27;Content-Type&#x27;].to_s.split(&#x27;;&#x27;, 2).first =~ &#x2F;^\s*application\&#x2F;json\s*$&#x2F;
</code></li>
                
                <li class="post-context-line"><code>          result = react(env) if referrer(env) != Request.new(env).host
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>        result or [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="40"
                  class="pre-context" id="pre-36"
                  onclick="toggle(36);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        unless accepts? env
</code></li>
                
                <li class="pre-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
</code></li>
                
                <li class="pre-context-line"><code>          result = react env
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
              </ol>
              

              <ol start="47" class="context" id="36"
                  onclick="toggle(36);">
                <li class="context-line" id="context-36"><code>        result or app.call(env)</code></li>
              </ol>

              
              <ol start="48" class="post-context"
                  id="post-36" onclick="toggle(36);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def react(env)
</code></li>
                
                <li class="post-context-line"><code>        result = send(options[:reaction], env)
</code></li>
                
                <li class="post-context-line"><code>        result if Array === result and result.size == 3
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="15"
                  class="pre-context" id="pre-37"
                  onclick="toggle(37);">
                
                <li class="pre-context-line"><code>      default_options :xss_mode =&gt; :block
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def header
</code></li>
                
                <li class="pre-context-line"><code>        { &#x27;X-XSS-Protection&#x27; =&gt; &quot;1; mode=#{options[:xss_mode]}&quot; }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="22" class="context" id="37"
                  onclick="toggle(37);">
                <li class="context-line" id="context-37"><code>        status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="23" class="post-context"
                  id="post-37" onclick="toggle(37);">
                
                <li class="post-context-line"><code>        [status, header.merge(headers), body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;nulllogger.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="2"
                  class="pre-context" id="pre-38"
                  onclick="toggle(38);">
                
                <li class="pre-context-line"><code>  class NullLogger
</code></li>
                
                <li class="pre-context-line"><code>    def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>      @app = app
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
                <li class="pre-context-line"><code>      env[&#x27;rack.logger&#x27;] = self
</code></li>
                
              </ol>
              

              <ol start="9" class="context" id="38"
                  onclick="toggle(38);">
                <li class="context-line" id="context-38"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="10" class="post-context"
                  id="post-38" onclick="toggle(38);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def info(progname = nil, &amp;block);  end
</code></li>
                
                <li class="post-context-line"><code>    def debug(progname = nil, &amp;block); end
</code></li>
                
                <li class="post-context-line"><code>    def warn(progname = nil, &amp;block);  end
</code></li>
                
                <li class="post-context-line"><code>    def error(progname = nil, &amp;block); end
</code></li>
                
                <li class="post-context-line"><code>    def fatal(progname = nil, &amp;block); end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="2"
                  class="pre-context" id="pre-39"
                  onclick="toggle(39);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>class Head
</code></li>
                
                <li class="pre-context-line"><code>  def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>    @app = app
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  def call(env)
</code></li>
                
              </ol>
              

              <ol start="9" class="context" id="39"
                  onclick="toggle(39);">
                <li class="context-line" id="context-39"><code>    status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="10" class="post-context"
                  id="post-39" onclick="toggle(39);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    if env[&quot;REQUEST_METHOD&quot;] == &quot;HEAD&quot;
</code></li>
                
                <li class="post-context-line"><code>      [status, headers, []]
</code></li>
                
                <li class="post-context-line"><code>    else
</code></li>
                
                <li class="post-context-line"><code>      [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;showexceptions.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="14"
                  class="pre-context" id="pre-40"
                  onclick="toggle(40);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>      @app      = app
</code></li>
                
                <li class="pre-context-line"><code>      @template = ERB.new(TEMPLATE)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="21" class="context" id="40"
                  onclick="toggle(40);">
                <li class="context-line" id="context-40"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="22" class="post-context"
                  id="post-40" onclick="toggle(40);">
                
                <li class="post-context-line"><code>    rescue Exception =&gt; e
</code></li>
                
                <li class="post-context-line"><code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      if respond_to?(:prefers_plain_text?) and prefers_plain_text?(env)
</code></li>
                
                <li class="post-context-line"><code>        content_type = &quot;text&#x2F;plain&quot;
</code></li>
                
                <li class="post-context-line"><code>        body = [dump_exception(e)]
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1327"
                  class="pre-context" id="pre-41"
                  onclick="toggle(41);">
                
                <li class="pre-context-line"><code>        setup_default_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        setup_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        builder.run new!(*args, &amp;bk)
</code></li>
                
                <li class="pre-context-line"><code>        builder
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="1334" class="context" id="41"
                  onclick="toggle(41);">
                <li class="context-line" id="context-41"><code>        synchronize { prototype.call(env) }</code></li>
              </ol>

              
              <ol start="1335" class="post-context"
                  id="post-41" onclick="toggle(41);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>      def setup_default_middleware(builder)
</code></li>
                
                <li class="post-context-line"><code>        builder.use ShowExceptions       if show_exceptions?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::MethodOverride if method_override?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::Head
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>synchronize</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1396"
                  class="pre-context" id="pre-42"
                  onclick="toggle(42);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @@mutex = Mutex.new
</code></li>
                
                <li class="pre-context-line"><code>      def synchronize(&amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        if lock?
</code></li>
                
                <li class="pre-context-line"><code>          @@mutex.synchronize(&amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="1403" class="context" id="42"
                  onclick="toggle(42);">
                <li class="context-line" id="context-42"><code>          yield</code></li>
              </ol>

              
              <ol start="1404" class="post-context"
                  id="post-42" onclick="toggle(42);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    public
</code></li>
                
                <li class="post-context-line"><code>      CALLERS_TO_IGNORE = [ # :nodoc:
</code></li>
                
                <li class="post-context-line"><code>        &#x2F;\&#x2F;sinatra(\&#x2F;(base|main|showexceptions))?\.rb$&#x2F;, # all sinatra code
</code></li>
                
                <li class="post-context-line"><code>        &#x2F;lib\&#x2F;tilt.*\.rb$&#x2F;,                              # all tilt code
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1327"
                  class="pre-context" id="pre-43"
                  onclick="toggle(43);">
                
                <li class="pre-context-line"><code>        setup_default_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        setup_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        builder.run new!(*args, &amp;bk)
</code></li>
                
                <li class="pre-context-line"><code>        builder
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="1334" class="context" id="43"
                  onclick="toggle(43);">
                <li class="context-line" id="context-43"><code>        synchronize { prototype.call(env) }</code></li>
              </ol>

              
              <ol start="1335" class="post-context"
                  id="post-43" onclick="toggle(43);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>      def setup_default_middleware(builder)
</code></li>
                
                <li class="post-context-line"><code>        builder.use ShowExceptions       if show_exceptions?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::MethodOverride if method_override?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::Head
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;lint.rb</code> in
                <code><strong>_call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="41"
                  class="pre-context" id="pre-44"
                  onclick="toggle(44);">
                
                <li class="pre-context-line"><code>      assert(&quot;No env given&quot;) { env }
</code></li>
                
                <li class="pre-context-line"><code>      check_env env
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      env[&#x27;rack.input&#x27;] = InputWrapper.new(env[&#x27;rack.input&#x27;])
</code></li>
                
                <li class="pre-context-line"><code>      env[&#x27;rack.errors&#x27;] = ErrorWrapper.new(env[&#x27;rack.errors&#x27;])
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      ## and returns an Array of exactly three values:
</code></li>
                
              </ol>
              

              <ol start="48" class="context" id="44"
                  onclick="toggle(44);">
                <li class="context-line" id="context-44"><code>      status, headers, @body = @app.call(env)</code></li>
              </ol>

              
              <ol start="49" class="post-context"
                  id="post-44" onclick="toggle(44);">
                
                <li class="post-context-line"><code>      ## The *status*,
</code></li>
                
                <li class="post-context-line"><code>      check_status status
</code></li>
                
                <li class="post-context-line"><code>      ## the *headers*,
</code></li>
                
                <li class="post-context-line"><code>      check_headers headers
</code></li>
                
                <li class="post-context-line"><code>      ## and the *body*.
</code></li>
                
                <li class="post-context-line"><code>      check_content_type status, headers
</code></li>
                
                <li class="post-context-line"><code>      check_content_length status, headers
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;lint.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="29"
                  class="pre-context" id="pre-45"
                  onclick="toggle(45);">
                
                <li class="pre-context-line"><code>    ## after to catch all mistakes.
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    ## = Rack applications
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    ## A Rack application is a Ruby object (not a class) that
</code></li>
                
                <li class="pre-context-line"><code>    ## responds to +call+.
</code></li>
                
                <li class="pre-context-line"><code>    def call(env=nil)
</code></li>
                
              </ol>
              

              <ol start="36" class="context" id="45"
                  onclick="toggle(45);">
                <li class="context-line" id="context-45"><code>      dup._call(env)</code></li>
              </ol>

              
              <ol start="37" class="post-context"
                  id="post-45" onclick="toggle(45);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def _call(env)
</code></li>
                
                <li class="post-context-line"><code>      ## It takes exactly one argument, the *environment*
</code></li>
                
                <li class="post-context-line"><code>      assert(&quot;No env given&quot;) { env }
</code></li>
                
                <li class="post-context-line"><code>      check_env env
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>block in pre_process</strong></code>
            </li>

            <li class="code system">
              
              <ol start="73"
                  class="pre-context" id="pre-46"
                  onclick="toggle(46);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # When we&#x27;re under a non-async framework like rails, we can still spawn
</code></li>
                
                <li class="pre-context-line"><code>      # off async responses using the callback info, so there&#x27;s little point
</code></li>
                
                <li class="pre-context-line"><code>      # in removing this.
</code></li>
                
                <li class="pre-context-line"><code>      response = AsyncResponse
</code></li>
                
                <li class="pre-context-line"><code>      catch(:async) do
</code></li>
                
                <li class="pre-context-line"><code>        # Process the request calling the Rack adapter
</code></li>
                
              </ol>
              

              <ol start="80" class="context" id="46"
                  onclick="toggle(46);">
                <li class="context-line" id="context-46"><code>        response = @app.call(@request.env)</code></li>
              </ol>

              
              <ol start="81" class="post-context"
                  id="post-46" onclick="toggle(46);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      response
</code></li>
                
                <li class="post-context-line"><code>    rescue Exception
</code></li>
                
                <li class="post-context-line"><code>      handle_error
</code></li>
                
                <li class="post-context-line"><code>      terminate_request
</code></li>
                
                <li class="post-context-line"><code>      nil # Signal to post_process that the request could not be processed
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code system">
              
              <ol start="71"
                  class="pre-context" id="pre-47"
                  onclick="toggle(47);">
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # When we&#x27;re under a non-async framework like rails, we can still spawn
</code></li>
                
                <li class="pre-context-line"><code>      # off async responses using the callback info, so there&#x27;s little point
</code></li>
                
                <li class="pre-context-line"><code>      # in removing this.
</code></li>
                
                <li class="pre-context-line"><code>      response = AsyncResponse
</code></li>
                
              </ol>
              

              <ol start="78" class="context" id="47"
                  onclick="toggle(47);">
                <li class="context-line" id="context-47"><code>      catch(:async) do</code></li>
              </ol>

              
              <ol start="79" class="post-context"
                  id="post-47" onclick="toggle(47);">
                
                <li class="post-context-line"><code>        # Process the request calling the Rack adapter
</code></li>
                
                <li class="post-context-line"><code>        response = @app.call(@request.env)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      response
</code></li>
                
                <li class="post-context-line"><code>    rescue Exception
</code></li>
                
                <li class="post-context-line"><code>      handle_error
</code></li>
                
                <li class="post-context-line"><code>      terminate_request
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>pre_process</strong></code>
            </li>

            <li class="code system">
              
              <ol start="71"
                  class="pre-context" id="pre-48"
                  onclick="toggle(48);">
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # When we&#x27;re under a non-async framework like rails, we can still spawn
</code></li>
                
                <li class="pre-context-line"><code>      # off async responses using the callback info, so there&#x27;s little point
</code></li>
                
                <li class="pre-context-line"><code>      # in removing this.
</code></li>
                
                <li class="pre-context-line"><code>      response = AsyncResponse
</code></li>
                
              </ol>
              

              <ol start="78" class="context" id="48"
                  onclick="toggle(48);">
                <li class="context-line" id="context-48"><code>      catch(:async) do</code></li>
              </ol>

              
              <ol start="79" class="post-context"
                  id="post-48" onclick="toggle(48);">
                
                <li class="post-context-line"><code>        # Process the request calling the Rack adapter
</code></li>
                
                <li class="post-context-line"><code>        response = @app.call(@request.env)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      response
</code></li>
                
                <li class="post-context-line"><code>    rescue Exception
</code></li>
                
                <li class="post-context-line"><code>      handle_error
</code></li>
                
                <li class="post-context-line"><code>      terminate_request
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>process</strong></code>
            </li>

            <li class="code system">
              
              <ol start="46"
                  class="pre-context" id="pre-49"
                  onclick="toggle(49);">
                
                <li class="pre-context-line"><code>    # is ready to be processed.
</code></li>
                
                <li class="pre-context-line"><code>    def process
</code></li>
                
                <li class="pre-context-line"><code>      if threaded?
</code></li>
                
                <li class="pre-context-line"><code>        @request.threaded = true
</code></li>
                
                <li class="pre-context-line"><code>        EventMachine.defer(method(:pre_process), method(:post_process))
</code></li>
                
                <li class="pre-context-line"><code>      else
</code></li>
                
                <li class="pre-context-line"><code>        @request.threaded = false
</code></li>
                
              </ol>
              

              <ol start="53" class="context" id="49"
                  onclick="toggle(49);">
                <li class="context-line" id="context-49"><code>        post_process(pre_process)</code></li>
              </ol>

              
              <ol start="54" class="post-context"
                  id="post-49" onclick="toggle(49);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def pre_process
</code></li>
                
                <li class="post-context-line"><code>      # Add client info to the request env
</code></li>
                
                <li class="post-context-line"><code>      @request.remote_address = remote_address
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>receive_data</strong></code>
            </li>

            <li class="code system">
              
              <ol start="31"
                  class="pre-context" id="pre-50"
                  onclick="toggle(50);">
                
                <li class="pre-context-line"><code>      @request  = Request.new
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Called when data is received from the client.
</code></li>
                
                <li class="pre-context-line"><code>    def receive_data(data)
</code></li>
                
                <li class="pre-context-line"><code>      trace { data }
</code></li>
                
              </ol>
              

              <ol start="38" class="context" id="50"
                  onclick="toggle(50);">
                <li class="context-line" id="context-50"><code>      process if @request.parse(data)</code></li>
              </ol>

              
              <ol start="39" class="post-context"
                  id="post-50" onclick="toggle(50);">
                
                <li class="post-context-line"><code>    rescue InvalidRequest =&gt; e
</code></li>
                
                <li class="post-context-line"><code>      log &quot;!! Invalid request&quot;
</code></li>
                
                <li class="post-context-line"><code>      log_error e
</code></li>
                
                <li class="post-context-line"><code>      close_connection
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Called when all data was received and the request
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;eventmachine-0.12.10&#x2F;lib&#x2F;eventmachine.rb</code> in
                <code><strong>run_machine</strong></code>
            </li>

            <li class="code system">
              
              <ol start="249"
                  class="pre-context" id="pre-51"
                  onclick="toggle(51);">
                
                <li class="pre-context-line"><code>        @reactor_running = true
</code></li>
                
                <li class="pre-context-line"><code>        initialize_event_machine
</code></li>
                
                <li class="pre-context-line"><code>        (b = blk || block) and add_timer(0, b)
</code></li>
                
                <li class="pre-context-line"><code>        if @next_tick_queue &amp;&amp; !@next_tick_queue.empty?
</code></li>
                
                <li class="pre-context-line"><code>          add_timer(0) { signal_loopbreak }
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>        @reactor_thread = Thread.current
</code></li>
                
              </ol>
              

              <ol start="256" class="context" id="51"
                  onclick="toggle(51);">
                <li class="context-line" id="context-51"><code>        run_machine</code></li>
              </ol>

              
              <ol start="257" class="post-context"
                  id="post-51" onclick="toggle(51);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        until @tails.empty?
</code></li>
                
                <li class="post-context-line"><code>          @tails.pop.call
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        begin
</code></li>
                
                <li class="post-context-line"><code>          release_machine
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;eventmachine-0.12.10&#x2F;lib&#x2F;eventmachine.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="249"
                  class="pre-context" id="pre-52"
                  onclick="toggle(52);">
                
                <li class="pre-context-line"><code>        @reactor_running = true
</code></li>
                
                <li class="pre-context-line"><code>        initialize_event_machine
</code></li>
                
                <li class="pre-context-line"><code>        (b = blk || block) and add_timer(0, b)
</code></li>
                
                <li class="pre-context-line"><code>        if @next_tick_queue &amp;&amp; !@next_tick_queue.empty?
</code></li>
                
                <li class="pre-context-line"><code>          add_timer(0) { signal_loopbreak }
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>        @reactor_thread = Thread.current
</code></li>
                
              </ol>
              

              <ol start="256" class="context" id="52"
                  onclick="toggle(52);">
                <li class="context-line" id="context-52"><code>        run_machine</code></li>
              </ol>

              
              <ol start="257" class="post-context"
                  id="post-52" onclick="toggle(52);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        until @tails.empty?
</code></li>
                
                <li class="post-context-line"><code>          @tails.pop.call
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        begin
</code></li>
                
                <li class="post-context-line"><code>          release_machine
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;backends&#x2F;base.rb</code> in
                <code><strong>start</strong></code>
            </li>

            <li class="code system">
              
              <ol start="54"
                  class="pre-context" id="pre-53"
                  onclick="toggle(53);">
                
                <li class="pre-context-line"><code>          @running = true
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>        
</code></li>
                
                <li class="pre-context-line"><code>        # Allow for early run up of eventmachine.
</code></li>
                
                <li class="pre-context-line"><code>        if EventMachine.reactor_running?
</code></li>
                
                <li class="pre-context-line"><code>          starter.call
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="61" class="context" id="53"
                  onclick="toggle(53);">
                <li class="context-line" id="context-53"><code>          EventMachine.run(&amp;starter)</code></li>
              </ol>

              
              <ol start="62" class="post-context"
                  id="post-53" onclick="toggle(53);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      
</code></li>
                
                <li class="post-context-line"><code>      # Stop of the backend from accepting new connections.
</code></li>
                
                <li class="post-context-line"><code>      def stop
</code></li>
                
                <li class="post-context-line"><code>        @running  = false
</code></li>
                
                <li class="post-context-line"><code>        @stopping = true
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;server.rb</code> in
                <code><strong>start</strong></code>
            </li>

            <li class="code system">
              
              <ol start="152"
                  class="pre-context" id="pre-54"
                  onclick="toggle(54);">
                
                <li class="pre-context-line"><code>      log   &quot;&gt;&gt; Thin web server (v#{VERSION::STRING} codename #{VERSION::CODENAME})&quot;
</code></li>
                
                <li class="pre-context-line"><code>      debug &quot;&gt;&gt; Debugging ON&quot;
</code></li>
                
                <li class="pre-context-line"><code>      trace &quot;&gt;&gt; Tracing ON&quot;
</code></li>
                
                <li class="pre-context-line"><code>      
</code></li>
                
                <li class="pre-context-line"><code>      log &quot;&gt;&gt; Maximum connections set to #{@backend.maximum_connections}&quot;
</code></li>
                
                <li class="pre-context-line"><code>      log &quot;&gt;&gt; Listening on #{@backend}, CTRL+C to stop&quot;
</code></li>
                
                <li class="pre-context-line"><code>      
</code></li>
                
              </ol>
              

              <ol start="159" class="context" id="54"
                  onclick="toggle(54);">
                <li class="context-line" id="context-54"><code>      @backend.start</code></li>
              </ol>

              
              <ol start="160" class="post-context"
                  id="post-54" onclick="toggle(54);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>    alias :start! :start
</code></li>
                
                <li class="post-context-line"><code>    
</code></li>
                
                <li class="post-context-line"><code>    # == Gracefull shutdown
</code></li>
                
                <li class="post-context-line"><code>    # Stops the server after processing all current connections.
</code></li>
                
                <li class="post-context-line"><code>    # As soon as this method is called, the server stops accepting
</code></li>
                
                <li class="post-context-line"><code>    # new requests and wait for all current connections to finish.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;controllers&#x2F;controller.rb</code> in
                <code><strong>start</strong></code>
            </li>

            <li class="code system">
              
              <ol start="79"
                  class="pre-context" id="pre-55"
                  onclick="toggle(55);">
                
                <li class="pre-context-line"><code>        # If a stats URL is specified, wrap in Stats adapter
</code></li>
                
                <li class="pre-context-line"><code>        server.app = Stats::Adapter.new(server.app, @options[:stats]) if @options[:stats]
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        # Register restart procedure which just start another process with same options,
</code></li>
                
                <li class="pre-context-line"><code>        # so that&#x27;s why this is done here.
</code></li>
                
                <li class="pre-context-line"><code>        server.on_restart { Command.run(:start, @options) }
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="86" class="context" id="55"
                  onclick="toggle(55);">
                <li class="context-line" id="context-55"><code>        server.start</code></li>
              </ol>

              
              <ol start="87" class="post-context"
                  id="post-55" onclick="toggle(55);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    
</code></li>
                
                <li class="post-context-line"><code>      def stop
</code></li>
                
                <li class="post-context-line"><code>        raise OptionRequired, :pid unless @options[:pid]
</code></li>
                
                <li class="post-context-line"><code>      
</code></li>
                
                <li class="post-context-line"><code>        tail_log(@options[:log]) do
</code></li>
                
                <li class="post-context-line"><code>          if Server.kill(@options[:pid], @options[:force] ? 0 : (@options[:timeout] || 60))
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;runner.rb</code> in
                <code><strong>run_command</strong></code>
            </li>

            <li class="code system">
              
              <ol start="178"
                  class="pre-context" id="pre-56"
                  onclick="toggle(56);">
                
                <li class="pre-context-line"><code>      when cluster? then Controllers::Cluster.new(@options)
</code></li>
                
                <li class="pre-context-line"><code>      when service? then Controllers::Service.new(@options)
</code></li>
                
                <li class="pre-context-line"><code>      else               Controllers::Controller.new(@options)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>      
</code></li>
                
                <li class="pre-context-line"><code>      if controller.respond_to?(@command)
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
              </ol>
              

              <ol start="185" class="context" id="56"
                  onclick="toggle(56);">
                <li class="context-line" id="context-56"><code>          controller.send(@command, *@arguments)</code></li>
              </ol>

              
              <ol start="186" class="post-context"
                  id="post-56" onclick="toggle(56);">
                
                <li class="post-context-line"><code>        rescue RunnerError =&gt; e
</code></li>
                
                <li class="post-context-line"><code>          abort e.message
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
                <li class="post-context-line"><code>        abort &quot;Invalid options for command: #{@command}&quot;
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;runner.rb</code> in
                <code><strong>run!</strong></code>
            </li>

            <li class="code system">
              
              <ol start="144"
                  class="pre-context" id="pre-57"
                  onclick="toggle(57);">
                
                <li class="pre-context-line"><code>      @arguments = @argv
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>        
</code></li>
                
                <li class="pre-context-line"><code>    # Parse the current shell arguments and run the command.
</code></li>
                
                <li class="pre-context-line"><code>    # Exits on error.
</code></li>
                
                <li class="pre-context-line"><code>    def run!
</code></li>
                
                <li class="pre-context-line"><code>      if self.class.commands.include?(@command)
</code></li>
                
              </ol>
              

              <ol start="151" class="context" id="57"
                  onclick="toggle(57);">
                <li class="context-line" id="context-57"><code>        run_command</code></li>
              </ol>

              
              <ol start="152" class="post-context"
                  id="post-57" onclick="toggle(57);">
                
                <li class="post-context-line"><code>      elsif @command.nil?
</code></li>
                
                <li class="post-context-line"><code>        puts &quot;Command required&quot;
</code></li>
                
                <li class="post-context-line"><code>        puts @parser
</code></li>
                
                <li class="post-context-line"><code>        exit 1  
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
                <li class="post-context-line"><code>        abort &quot;Unknown command: #{@command}. Use one of #{self.class.commands.join(&#x27;, &#x27;)}&quot;
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;bin&#x2F;thin</code> in
                <code><strong>&lt;top (required)&gt;</strong></code>
            </li>

            <li class="code system">
              
              <ol start="1"
                  class="pre-context" id="pre-58"
                  onclick="toggle(58);">
                
                <li class="pre-context-line"><code>#!&#x2F;usr&#x2F;bin&#x2F;env ruby
</code></li>
                
                <li class="pre-context-line"><code># Thin command line interface script.
</code></li>
                
                <li class="pre-context-line"><code># Run &lt;tt&gt;thin -h&lt;&#x2F;tt&gt; to get more usage.
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>require &#x27;thin&#x27;
</code></li>
                
              </ol>
              

              <ol start="6" class="context" id="58"
                  onclick="toggle(58);">
                <li class="context-line" id="context-58"><code>Thin::Runner.new(ARGV).run!</code></li>
              </ol>

              
              <ol start="7" class="post-context"
                  id="post-58" onclick="toggle(58);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;bin&#x2F;thin</code> in
                <code><strong>load</strong></code>
            </li>

            <li class="code system">
              
              <ol start="12"
                  class="pre-context" id="pre-59"
                  onclick="toggle(59);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>if ARGV.first =~ &#x2F;^_(.*)_$&#x2F; and Gem::Version.correct? $1 then
</code></li>
                
                <li class="pre-context-line"><code>  version = $1
</code></li>
                
                <li class="pre-context-line"><code>  ARGV.shift
</code></li>
                
                <li class="pre-context-line"><code>end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>gem &#x27;thin&#x27;, version
</code></li>
                
              </ol>
              

              <ol start="19" class="context" id="59"
                  onclick="toggle(59);">
                <li class="context-line" id="context-59"><code>load Gem.bin_path(&#x27;thin&#x27;, &#x27;thin&#x27;, version)</code></li>
              </ol>

              
              <ol start="20" class="post-context"
                  id="post-59" onclick="toggle(59);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;bin&#x2F;thin</code> in
                <code><strong>&lt;main&gt;</strong></code>
            </li>

            <li class="code system">
              
              <ol start="12"
                  class="pre-context" id="pre-60"
                  onclick="toggle(60);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>if ARGV.first =~ &#x2F;^_(.*)_$&#x2F; and Gem::Version.correct? $1 then
</code></li>
                
                <li class="pre-context-line"><code>  version = $1
</code></li>
                
                <li class="pre-context-line"><code>  ARGV.shift
</code></li>
                
                <li class="pre-context-line"><code>end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>gem &#x27;thin&#x27;, version
</code></li>
                
              </ol>
              

              <ol start="19" class="context" id="60"
                  onclick="toggle(60);">
                <li class="context-line" id="context-60"><code>load Gem.bin_path(&#x27;thin&#x27;, &#x27;thin&#x27;, version)</code></li>
              </ol>

              
              <ol start="20" class="post-context"
                  id="post-60" onclick="toggle(60);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      

      </ul>
    </div> <!-- /BACKTRACE -->

    <div id="get">
      <h3 id="get-info">GET</h3>
      
        <p class="no-data">No GET data.</p>
      
      <div class="clear"></div>
    </div> <!-- /GET -->

    <div id="post">
      <h3 id="post-info">POST</h3>
      
        <p class="no-data">No POST data.</p>
      
      <div class="clear"></div>
    </div> <!-- /POST -->

    <div id="cookies">
      <h3 id="cookie-info">COOKIES</h3>
      
        <p class="no-data">No cookie data.</p>
      
      <div class="clear"></div>
    </div> <!-- /COOKIES -->

    <div id="rack">
      <h3 id="env-info">Rack ENV</h3>
      <table class="req">
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
         
         <tr>
           <td>GATEWAY_INTERFACE</td>
           <td class="code"><div>CGI&#x2F;1.2</div></td>
         </tr>
         
         <tr>
           <td>HTTP_ACCEPT</td>
           <td class="code"><div>text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q=0.9,*&#x2F;*;q=0.8</div></td>
         </tr>
         
         <tr>
           <td>HTTP_ACCEPT_CHARSET</td>
           <td class="code"><div>ISO-8859-1,utf-8;q=0.7,*;q=0.3</div></td>
         </tr>
         
         <tr>
           <td>HTTP_ACCEPT_ENCODING</td>
           <td class="code"><div>gzip,deflate,sdch</div></td>
         </tr>
         
         <tr>
           <td>HTTP_ACCEPT_LANGUAGE</td>
           <td class="code"><div>en-US,en;q=0.8</div></td>
         </tr>
         
         <tr>
           <td>HTTP_CACHE_CONTROL</td>
           <td class="code"><div>max-age=0</div></td>
         </tr>
         
         <tr>
           <td>HTTP_CONNECTION</td>
           <td class="code"><div>keep-alive</div></td>
         </tr>
         
         <tr>
           <td>HTTP_HOST</td>
           <td class="code"><div>localhost:8080</div></td>
         </tr>
         
         <tr>
           <td>HTTP_USER_AGENT</td>
           <td class="code"><div>Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit&#x2F;535.2 (KHTML, like Gecko) Chrome&#x2F;15.0.874.121 Safari&#x2F;535.2</div></td>
         </tr>
         
         <tr>
           <td>HTTP_VERSION</td>
           <td class="code"><div>HTTP&#x2F;1.1</div></td>
         </tr>
         
         <tr>
           <td>PATH_INFO</td>
           <td class="code"><div>&#x2F;</div></td>
         </tr>
         
         <tr>
           <td>QUERY_STRING</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>REMOTE_ADDR</td>
           <td class="code"><div>127.0.0.1</div></td>
         </tr>
         
         <tr>
           <td>REQUEST_METHOD</td>
           <td class="code"><div>GET</div></td>
         </tr>
         
         <tr>
           <td>REQUEST_PATH</td>
           <td class="code"><div>&#x2F;</div></td>
         </tr>
         
         <tr>
           <td>REQUEST_URI</td>
           <td class="code"><div>&#x2F;</div></td>
         </tr>
         
         <tr>
           <td>SCRIPT_NAME</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>SERVER_NAME</td>
           <td class="code"><div>localhost</div></td>
         </tr>
         
         <tr>
           <td>SERVER_PORT</td>
           <td class="code"><div>8080</div></td>
         </tr>
         
         <tr>
           <td>SERVER_PROTOCOL</td>
           <td class="code"><div>HTTP&#x2F;1.1</div></td>
         </tr>
         
         <tr>
           <td>SERVER_SOFTWARE</td>
           <td class="code"><div>thin 1.3.1 codename Triple Espresso</div></td>
         </tr>
         
         <tr>
           <td>async.callback</td>
           <td class="code"><div>#&lt;Method: Thin::Connection#post_process&gt;</div></td>
         </tr>
         
         <tr>
           <td>async.close</td>
           <td class="code"><div>#&lt;EventMachine::DefaultDeferrable:0x000001012b8ed0&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.errors</td>
           <td class="code"><div>#&lt;Object:0x000001012fbe60&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.input</td>
           <td class="code"><div>#&lt;Rack::Lint::InputWrapper:0x000001012904f8 @input=#&lt;StringIO:0x0000010132d7d0&gt;&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.logger</td>
           <td class="code"><div>#&lt;Rack::NullLogger:0x00000103921b30 @app=#&lt;Rack::Protection::FrameOptions:0x00000103921bf8 @app=#&lt;Rack::Protection::IPSpoofing:0x00000103921c70 @app=#&lt;Rack::Protection::JsonCsrf:0x00000103921d38 @app=#&lt;Rack::Protection::PathTraversal:0x00000103921db0 @app=#&lt;Rack::Protection::XSSHeader:0x00000103921e50 @app=#&lt;Rack::Session::Cookie:0x00000100ea0dc0 @secret=&quot;afiefnaioasdfjhkdku47f34jafusduf47fasdfe&quot;, @coder=#&lt;Rack::Session::Cookie::Base64::Marshal:0x00000100ea0d20&gt;, @app=#&lt;Smoke::Web::App:0x0000010125c928 @default_layout=:layout, @app=nil, @template_cache=#&lt;Tilt::Cache:0x0000010125c900 @cache={}&gt;&gt;, @default_options={:key=&gt;&quot;sinatra.session&quot;, :path=&gt;&quot;&#x2F;&quot;, :domain=&gt;nil, :expire_after=&gt;nil, :secure=&gt;false, :httponly=&gt;true, :defer=&gt;false, :renew=&gt;false, :sidbits=&gt;128, :secure_random=&gt;SecureRandom, :secret=&gt;&quot;afiefnaioasdfjhkdku47f34jafusduf47fasdfe&quot;, :coder=&gt;#&lt;Rack::Session::Cookie::Base64::Marshal:0x00000100ea0d20&gt;}, @key=&quot;sinatra.session&quot;, @cookie_only=true, @sidbits=128, @sid_secure=SecureRandom, @sid_length=32&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :xss_mode=&gt;:block, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :xss_mode=&gt;:block, :frame_options=&gt;:sameorigin, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.multiprocess</td>
           <td class="code"><div>false</div></td>
         </tr>
         
         <tr>
           <td>rack.multithread</td>
           <td class="code"><div>false</div></td>
         </tr>
         
         <tr>
           <td>rack.request.cookie_hash</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.query_hash</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.query_string</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>rack.run_once</td>
           <td class="code"><div>false</div></td>
         </tr>
         
         <tr>
           <td>rack.session</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.session.options</td>
           <td class="code"><div>{:key=&gt;&quot;sinatra.session&quot;, :path=&gt;&quot;&#x2F;&quot;, :domain=&gt;nil, :expire_after=&gt;nil, :secure=&gt;false, :httponly=&gt;true, :defer=&gt;false, :renew=&gt;false, :sidbits=&gt;128, :secure_random=&gt;SecureRandom, :secret=&gt;&quot;afiefnaioasdfjhkdku47f34jafusduf47fasdfe&quot;, :coder=&gt;#&lt;Rack::Session::Cookie::Base64::Marshal:0x00000100ea0d20&gt;, :id=&gt;nil}</div></td>
         </tr>
         
         <tr>
           <td>rack.session.unpacked_cookie_data</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.url_scheme</td>
           <td class="code"><div>http</div></td>
         </tr>
         
         <tr>
           <td>rack.version</td>
           <td class="code"><div>[1, 0]</div></td>
         </tr>
         
         <tr>
           <td>sinatra.error</td>
           <td class="code"><div>#&lt;Errno::ENOENT: No such file or directory - &#x2F;Users&#x2F;rlyon&#x2F;src&#x2F;ruby&#x2F;sinatra&#x2F;smoke_server&#x2F;lib&#x2F;smoke&#x2F;webviews&#x2F;index.erb&gt;</div></td>
         </tr>
         
      </table>
      <div class="clear"></div>
    </div> <!-- /RACK ENV -->

    <p id="explanation">You're seeing this error because you have
enabled the <code>show_exceptions</code> setting.</p>
  </div> <!-- /WRAP -->
  </body>
</html>
GET /__sinatra__/500.png HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Cache-Control: max-age=0
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: */*
Referer: http://localhost:8080/
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 43
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello __sinatra__ showing files in: 500.png
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
>> Waiting for 1 connection(s) to finish, can take up to 30 sec, CTRL+C to stop now
>> Exiting!
>> Writing PID to tmp/pids/thin.8080.pid
>> Thin web server (v1.3.1 codename Triple Espresso)
>> Debugging ON
>> Tracing ON
>> Maximum connections set to 1024
>> Listening on 127.0.0.1:8080, CTRL+C to stop
GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Cache-Control: max-age=0
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

Errno::ENOENT - No such file or directory - /Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/web/views/index.erb:
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt/template.rb:67:in `binread'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt/template.rb:67:in `block in initialize'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt/template.rb:68:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt/template.rb:68:in `initialize'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:661:in `new'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:661:in `block in compile_template'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/tilt-1.3.3/lib/tilt.rb:127:in `fetch'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:640:in `compile_template'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:624:in `render'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:512:in `erb'
	/Users/rlyon/src/ruby/sinatra/smoke_server/lib/smoke/web/app.rb:20:in `block in <class:App>'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1212:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1212:in `block in compile!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:772:in `[]'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:772:in `block (3 levels) in route!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:788:in `route_eval'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:772:in `block (2 levels) in route!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:821:in `block in process_route'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:819:in `catch'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:819:in `process_route'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:771:in `block in route!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:770:in `each'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:770:in `route!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:886:in `dispatch!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:706:in `block in call!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:871:in `block in invoke'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:871:in `catch'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:871:in `invoke'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:706:in `call!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:692:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/session/abstract/id.rb:195:in `context'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/session/abstract/id.rb:190:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/xss_header.rb:22:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/path_traversal.rb:16:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/json_csrf.rb:17:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/base.rb:47:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-protection-1.1.4/lib/rack/protection/xss_header.rb:22:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/nulllogger.rb:9:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/head.rb:9:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/showexceptions.rb:21:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1334:in `block in call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1403:in `synchronize'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/sinatra-1.3.1/lib/sinatra/base.rb:1334:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/lint.rb:48:in `_call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/rack-1.3.5/lib/rack/lint.rb:36:in `call'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:80:in `block in pre_process'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:78:in `catch'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:78:in `pre_process'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:53:in `process'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/connection.rb:38:in `receive_data'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/eventmachine-0.12.10/lib/eventmachine.rb:256:in `run_machine'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/eventmachine-0.12.10/lib/eventmachine.rb:256:in `run'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/backends/base.rb:61:in `start'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/server.rb:159:in `start'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/controllers/controller.rb:86:in `start'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:185:in `run_command'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/lib/thin/runner.rb:151:in `run!'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/gems/thin-1.3.1/bin/thin:6:in `<top (required)>'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `load'
	/Users/rlyon/.rvm/gems/ruby-1.9.2-p290@smoke_server/bin/thin:19:in `<main>'
HTTP/1.1 500 Internal Server Error
Content-Type: text/html
Content-Length: 168649
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>Errno::ENOENT at &#x2F;</title>

  <script type="text/javascript">
  //<!--
  function toggle(id) {
    var pre  = document.getElementById("pre-" + id);
    var post = document.getElementById("post-" + id);
    var context = document.getElementById("context-" + id);

    if (pre.style.display == 'block') {
      pre.style.display = 'none';
      post.style.display = 'none';
      context.style.background = "none";
    } else {
      pre.style.display = 'block';
      post.style.display = 'block';
      context.style.background = "#fffed9";
    }
  }

  function toggleBacktrace(){
    var bt = document.getElementById("backtrace");
    var toggler = document.getElementById("expando");

    if (bt.className == 'condensed') {
      bt.className = 'expanded';
      toggler.innerHTML = "(condense)";
    } else {
      bt.className = 'condensed';
      toggler.innerHTML = "(expand)";
    }
  }
  //-->
  </script>

<style type="text/css" media="screen">
  *                   {margin: 0; padding: 0; border: 0; outline: 0;}
  div.clear           {clear: both;}
  body                {background: #EEEEEE; margin: 0; padding: 0;
                       font-family: 'Lucida Grande', 'Lucida Sans Unicode',
                       'Garuda';}
  code                {font-family: 'Lucida Console', monospace;
                       font-size: 12px;}
  li                  {height: 18px;}
  ul                  {list-style: none; margin: 0; padding: 0;}
  ol:hover            {cursor: pointer;}
  ol li               {white-space: pre;}
  #explanation        {font-size: 12px; color: #666666;
                       margin: 20px 0 0 100px;}
/* WRAP */
  #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;
                       padding: 30px 50px 20px 50px;
                       border-left: 1px solid #DDDDDD;
                       border-right: 1px solid #DDDDDD;}
/* HEADER */
  #header             {margin: 0 auto 25px auto;}
  #header img         {float: left;}
  #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;
                       font-family: 'Lucida Grande', 'Lucida Sans Unicode';}
  h1                  {margin: 0; font-size: 36px; color: #981919;}
  h2                  {margin: 0; font-size: 22px; color: #333333;}
  #header ul          {margin: 0; font-size: 12px; color: #666666;}
  #header ul li strong{color: #444444;}
  #header ul li       {display: inline; padding: 0 10px;}
  #header ul li.first {padding-left: 0;}
  #header ul li.last  {border: 0; padding-right: 0;}
/* BODY */
  #backtrace,
  #get,
  #post,
  #cookies,
  #rack               {width: 980px; margin: 0 auto 10px auto;}
  p#nav               {float: right; font-size: 14px;}
/* BACKTRACE */
  a#expando           {float: left; padding-left: 5px; color: #666666;
                      font-size: 14px; text-decoration: none; cursor: pointer;}
  a#expando:hover     {text-decoration: underline;}
  h3                  {float: left; width: 100px; margin-bottom: 10px;
                       color: #981919; font-size: 14px; font-weight: bold;}
  #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}
  #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;
                           font-size: 12px; color: #333333;}
  #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;
                       border-bottom: 0;}
  #backtrace ol       {width: 920px; margin-left: 50px;
                       font: 10px 'Lucida Console', monospace; color: #666666;}
  #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;
                       padding: 2px 0;}
  #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}
  #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;
                       padding: 3px 0;}
  #backtrace-ul .code {padding: 6px 0 4px 0;}
  #backtrace.condensed .system,
  #backtrace.condensed .framework {display:none;}
/* REQUEST DATA */
  p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}
  table.req           {width: 980px; text-align: left; font-size: 12px;
                       color: #666666; padding: 0; border-spacing: 0;
                       border: 1px solid #EEEEEE; border-bottom: 0;
                       border-left: 0;
                       clear:both}
  table.req tr th     {padding: 2px 10px; font-weight: bold;
                       background: #F7F7F7; border-bottom: 1px solid #EEEEEE;
                       border-left: 1px solid #EEEEEE;}
  table.req tr td     {padding: 2px 20px 2px 10px;
                       border-bottom: 1px solid #EEEEEE;
                       border-left: 1px solid #EEEEEE;}
/* HIDE PRE/POST CODE AT START */
  .pre-context,
  .post-context       {display: none;}

  table td.code       {width:750px}
  table td.code div   {width:750px;overflow:hidden}
</style>
</head>
<body>
  <div id="wrap">
    <div id="header">
      <img src="/__sinatra__/500.png" alt="application error" height="161" width="313" />
      <div id="summary">
        <h1><strong>Errno::ENOENT</strong> at <strong>&#x2F;
          </strong></h1>
        <h2>No such file or directory - &#x2F;Users&#x2F;rlyon&#x2F;src&#x2F;ruby&#x2F;sinatra&#x2F;smoke_server&#x2F;lib&#x2F;smoke&#x2F;web&#x2F;views&#x2F;index.erb</h2>
        <ul>
          <li class="first"><strong>file:</strong> <code>
            template.rb</code></li>
          <li><strong>location:</strong> <code>binread
            </code></li>
          <li class="last"><strong>line:
            </strong> 67</li>
        </ul>
      </div>
      <div class="clear"></div>
    </div>

    <div id="backtrace" class='condensed'>
      <h3>BACKTRACE</h3>
      <p><a href="#" id="expando"
            onclick="toggleBacktrace(); return false">(expand)</a></p>
      <p id="nav"><strong>JUMP TO:</strong>
         <a href="#get-info">GET</a>
         <a href="#post-info">POST</a>
         <a href="#cookie-info">COOKIES</a>
         <a href="#env-info">ENV</a>
      </p>
      <div class="clear"></div>

      <ul id="backtrace-ul">

      
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>binread</strong></code>
            </li>

            <li class="code system">
              
              <ol start="60"
                  class="pre-context" id="pre-1"
                  onclick="toggle(1);">
                
                <li class="pre-context-line"><code>      @compiled_method = {}
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # used on 1.9 to set the encoding if it is not set elsewhere (like a magic comment)
</code></li>
                
                <li class="pre-context-line"><code>      # currently only used if template compiles to ruby
</code></li>
                
                <li class="pre-context-line"><code>      @default_encoding = @options.delete :default_encoding
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # load template data and prepare (uses binread to avoid encoding issues)
</code></li>
                
              </ol>
              

              <ol start="67" class="context" id="1"
                  onclick="toggle(1);">
                <li class="context-line" id="context-1"><code>      @reader = block || lambda { |t| File.respond_to?(:binread) ? File.binread(@file) : File.read(@file) }</code></li>
              </ol>

              
              <ol start="68" class="post-context"
                  id="post-1" onclick="toggle(1);">
                
                <li class="post-context-line"><code>      @data = @reader.call(self)
</code></li>
                
                <li class="post-context-line"><code>      prepare
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Render the template in the given scope with the locals specified. If a
</code></li>
                
                <li class="post-context-line"><code>    # block is given, it is typically available within the template via
</code></li>
                
                <li class="post-context-line"><code>    # +yield+.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>block in initialize</strong></code>
            </li>

            <li class="code system">
              
              <ol start="60"
                  class="pre-context" id="pre-2"
                  onclick="toggle(2);">
                
                <li class="pre-context-line"><code>      @compiled_method = {}
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # used on 1.9 to set the encoding if it is not set elsewhere (like a magic comment)
</code></li>
                
                <li class="pre-context-line"><code>      # currently only used if template compiles to ruby
</code></li>
                
                <li class="pre-context-line"><code>      @default_encoding = @options.delete :default_encoding
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # load template data and prepare (uses binread to avoid encoding issues)
</code></li>
                
              </ol>
              

              <ol start="67" class="context" id="2"
                  onclick="toggle(2);">
                <li class="context-line" id="context-2"><code>      @reader = block || lambda { |t| File.respond_to?(:binread) ? File.binread(@file) : File.read(@file) }</code></li>
              </ol>

              
              <ol start="68" class="post-context"
                  id="post-2" onclick="toggle(2);">
                
                <li class="post-context-line"><code>      @data = @reader.call(self)
</code></li>
                
                <li class="post-context-line"><code>      prepare
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Render the template in the given scope with the locals specified. If a
</code></li>
                
                <li class="post-context-line"><code>    # block is given, it is typically available within the template via
</code></li>
                
                <li class="post-context-line"><code>    # +yield+.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="61"
                  class="pre-context" id="pre-3"
                  onclick="toggle(3);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # used on 1.9 to set the encoding if it is not set elsewhere (like a magic comment)
</code></li>
                
                <li class="pre-context-line"><code>      # currently only used if template compiles to ruby
</code></li>
                
                <li class="pre-context-line"><code>      @default_encoding = @options.delete :default_encoding
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # load template data and prepare (uses binread to avoid encoding issues)
</code></li>
                
                <li class="pre-context-line"><code>      @reader = block || lambda { |t| File.respond_to?(:binread) ? File.binread(@file) : File.read(@file) }
</code></li>
                
              </ol>
              

              <ol start="68" class="context" id="3"
                  onclick="toggle(3);">
                <li class="context-line" id="context-3"><code>      @data = @reader.call(self)</code></li>
              </ol>

              
              <ol start="69" class="post-context"
                  id="post-3" onclick="toggle(3);">
                
                <li class="post-context-line"><code>      prepare
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Render the template in the given scope with the locals specified. If a
</code></li>
                
                <li class="post-context-line"><code>    # block is given, it is typically available within the template via
</code></li>
                
                <li class="post-context-line"><code>    # +yield+.
</code></li>
                
                <li class="post-context-line"><code>    def render(scope=Object.new, locals={}, &amp;block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt&#x2F;template.rb</code> in
                <code><strong>initialize</strong></code>
            </li>

            <li class="code system">
              
              <ol start="61"
                  class="pre-context" id="pre-4"
                  onclick="toggle(4);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # used on 1.9 to set the encoding if it is not set elsewhere (like a magic comment)
</code></li>
                
                <li class="pre-context-line"><code>      # currently only used if template compiles to ruby
</code></li>
                
                <li class="pre-context-line"><code>      @default_encoding = @options.delete :default_encoding
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # load template data and prepare (uses binread to avoid encoding issues)
</code></li>
                
                <li class="pre-context-line"><code>      @reader = block || lambda { |t| File.respond_to?(:binread) ? File.binread(@file) : File.read(@file) }
</code></li>
                
              </ol>
              

              <ol start="68" class="context" id="4"
                  onclick="toggle(4);">
                <li class="context-line" id="context-4"><code>      @data = @reader.call(self)</code></li>
              </ol>

              
              <ol start="69" class="post-context"
                  id="post-4" onclick="toggle(4);">
                
                <li class="post-context-line"><code>      prepare
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Render the template in the given scope with the locals specified. If a
</code></li>
                
                <li class="post-context-line"><code>    # block is given, it is typically available within the template via
</code></li>
                
                <li class="post-context-line"><code>    # +yield+.
</code></li>
                
                <li class="post-context-line"><code>    def render(scope=Object.new, locals={}, &amp;block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>new</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="654"
                  class="pre-context" id="pre-5"
                  onclick="toggle(5);">
                
                <li class="pre-context-line"><code>              path ||= file # keep the initial path rather than the last one
</code></li>
                
                <li class="pre-context-line"><code>              if found = File.exists?(file)
</code></li>
                
                <li class="pre-context-line"><code>                path = file
</code></li>
                
                <li class="pre-context-line"><code>                break
</code></li>
                
                <li class="pre-context-line"><code>              end
</code></li>
                
                <li class="pre-context-line"><code>            end
</code></li>
                
                <li class="pre-context-line"><code>            throw :layout_missing if eat_errors and not found
</code></li>
                
              </ol>
              

              <ol start="661" class="context" id="5"
                  onclick="toggle(5);">
                <li class="context-line" id="context-5"><code>            template.new(path, 1, options)</code></li>
              </ol>

              
              <ol start="662" class="post-context"
                  id="post-5" onclick="toggle(5);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        when Proc, String
</code></li>
                
                <li class="post-context-line"><code>          body = data.is_a?(String) ? Proc.new { data } : data
</code></li>
                
                <li class="post-context-line"><code>          path, line = settings.caller_locations.first
</code></li>
                
                <li class="post-context-line"><code>          template.new(path, line.to_i, options, &amp;body)
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          raise ArgumentError, &quot;Sorry, don&#x27;t know how to render #{data.inspect}.&quot;
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in compile_template</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="654"
                  class="pre-context" id="pre-6"
                  onclick="toggle(6);">
                
                <li class="pre-context-line"><code>              path ||= file # keep the initial path rather than the last one
</code></li>
                
                <li class="pre-context-line"><code>              if found = File.exists?(file)
</code></li>
                
                <li class="pre-context-line"><code>                path = file
</code></li>
                
                <li class="pre-context-line"><code>                break
</code></li>
                
                <li class="pre-context-line"><code>              end
</code></li>
                
                <li class="pre-context-line"><code>            end
</code></li>
                
                <li class="pre-context-line"><code>            throw :layout_missing if eat_errors and not found
</code></li>
                
              </ol>
              

              <ol start="661" class="context" id="6"
                  onclick="toggle(6);">
                <li class="context-line" id="context-6"><code>            template.new(path, 1, options)</code></li>
              </ol>

              
              <ol start="662" class="post-context"
                  id="post-6" onclick="toggle(6);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        when Proc, String
</code></li>
                
                <li class="post-context-line"><code>          body = data.is_a?(String) ? Proc.new { data } : data
</code></li>
                
                <li class="post-context-line"><code>          path, line = settings.caller_locations.first
</code></li>
                
                <li class="post-context-line"><code>          template.new(path, line.to_i, options, &amp;body)
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          raise ArgumentError, &quot;Sorry, don&#x27;t know how to render #{data.inspect}.&quot;
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;tilt-1.3.3&#x2F;lib&#x2F;tilt.rb</code> in
                <code><strong>fetch</strong></code>
            </li>

            <li class="code system">
              
              <ol start="120"
                  class="pre-context" id="pre-7"
                  onclick="toggle(7);">
                
                <li class="pre-context-line"><code>  # Subsequent invocations return the already loaded template object.
</code></li>
                
                <li class="pre-context-line"><code>  class Cache
</code></li>
                
                <li class="pre-context-line"><code>    def initialize
</code></li>
                
                <li class="pre-context-line"><code>      @cache = {}
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def fetch(*key)
</code></li>
                
              </ol>
              

              <ol start="127" class="context" id="7"
                  onclick="toggle(7);">
                <li class="context-line" id="context-7"><code>      @cache[key] ||= yield</code></li>
              </ol>

              
              <ol start="128" class="post-context"
                  id="post-7" onclick="toggle(7);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def clear
</code></li>
                
                <li class="post-context-line"><code>      @cache = {}
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>compile_template</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="633"
                  class="pre-context" id="pre-8"
                  onclick="toggle(8);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      output.extend(ContentTyped).content_type = content_type if content_type
</code></li>
                
                <li class="pre-context-line"><code>      output
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def compile_template(engine, data, options, views)
</code></li>
                
                <li class="pre-context-line"><code>      eat_errors = options.delete :eat_errors
</code></li>
                
              </ol>
              

              <ol start="640" class="context" id="8"
                  onclick="toggle(8);">
                <li class="context-line" id="context-8"><code>      template_cache.fetch engine, data, options do</code></li>
              </ol>

              
              <ol start="641" class="post-context"
                  id="post-8" onclick="toggle(8);">
                
                <li class="post-context-line"><code>        template = Tilt[engine]
</code></li>
                
                <li class="post-context-line"><code>        raise &quot;Template engine not found: #{engine}&quot; if template.nil?
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        case data
</code></li>
                
                <li class="post-context-line"><code>        when Symbol
</code></li>
                
                <li class="post-context-line"><code>          body, path, line = settings.templates[data]
</code></li>
                
                <li class="post-context-line"><code>          if body
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>render</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="617"
                  class="pre-context" id="pre-9"
                  onclick="toggle(9);">
                
                <li class="pre-context-line"><code>      content_type    = options.delete(:content_type)  || options.delete(:default_content_type)
</code></li>
                
                <li class="pre-context-line"><code>      layout_engine   = options.delete(:layout_engine) || engine
</code></li>
                
                <li class="pre-context-line"><code>      scope           = options.delete(:scope)         || self
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # compile and render template
</code></li>
                
                <li class="pre-context-line"><code>      layout_was      = @default_layout
</code></li>
                
                <li class="pre-context-line"><code>      @default_layout = false
</code></li>
                
              </ol>
              

              <ol start="624" class="context" id="9"
                  onclick="toggle(9);">
                <li class="context-line" id="context-9"><code>      template        = compile_template(engine, data, options, views)</code></li>
              </ol>

              
              <ol start="625" class="post-context"
                  id="post-9" onclick="toggle(9);">
                
                <li class="post-context-line"><code>      output          = template.render(scope, locals, &amp;block)
</code></li>
                
                <li class="post-context-line"><code>      @default_layout = layout_was
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # render layout
</code></li>
                
                <li class="post-context-line"><code>      if layout
</code></li>
                
                <li class="post-context-line"><code>        options = options.merge(:views =&gt; views, :layout =&gt; false, :eat_errors =&gt; eat_errors, :scope =&gt; scope)
</code></li>
                
                <li class="post-context-line"><code>        catch(:layout_missing) { return render(layout_engine, layout, options, locals) { output } }
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>erb</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="505"
                  class="pre-context" id="pre-10"
                  onclick="toggle(10);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def initialize
</code></li>
                
                <li class="pre-context-line"><code>      super
</code></li>
                
                <li class="pre-context-line"><code>      @default_layout = :layout
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def erb(template, options={}, locals={})
</code></li>
                
              </ol>
              

              <ol start="512" class="context" id="10"
                  onclick="toggle(10);">
                <li class="context-line" id="context-10"><code>      render :erb, template, options, locals</code></li>
              </ol>

              
              <ol start="513" class="post-context"
                  id="post-10" onclick="toggle(10);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def erubis(template, options={}, locals={})
</code></li>
                
                <li class="post-context-line"><code>      warn &quot;Sinatra::Templates#erubis is deprecated and will be removed, use #erb instead.\n&quot; \
</code></li>
                
                <li class="post-context-line"><code>        &quot;If you have Erubis installed, it will be used automatically.&quot;
</code></li>
                
                <li class="post-context-line"><code>      render :erubis, template, options, locals
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info app">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;src&#x2F;ruby&#x2F;sinatra&#x2F;smoke_server&#x2F;lib&#x2F;smoke&#x2F;web&#x2F;app.rb</code> in
                <code><strong>block in &lt;class:App&gt;</strong></code>
            </li>

            <li class="code app">
              
              <ol start="13"
                  class="pre-context" id="pre-11"
                  onclick="toggle(11);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>      
</code></li>
                
                <li class="pre-context-line"><code>      get &#x27;&#x2F;&#x27; do
</code></li>
                
                <li class="pre-context-line"><code>        if session?
</code></li>
                
                <li class="pre-context-line"><code>          @username = session[:username]
</code></li>
                
                <li class="pre-context-line"><code>          erb :dashboard
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="20" class="context" id="11"
                  onclick="toggle(11);">
                <li class="context-line" id="context-11"><code>      	  erb :index</code></li>
              </ol>

              
              <ol start="21" class="post-context"
                  id="post-11" onclick="toggle(11);">
                
                <li class="post-context-line"><code>    	  end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      
</code></li>
                
                <li class="post-context-line"><code>      # Login to the account
</code></li>
                
                <li class="post-context-line"><code>      get &#x27;&#x2F;login&#x27; do
</code></li>
                
                <li class="post-context-line"><code>        if session?
</code></li>
                
                <li class="post-context-line"><code>          redirect &#x27;&#x2F;&#x27;
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1205"
                  class="pre-context" id="pre-12"
                  onclick="toggle(12);">
                
                <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        pattern, keys           = compile path
</code></li>
                
                <li class="pre-context-line"><code>        conditions, @conditions = @conditions, []
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        [ pattern, keys, conditions, block.arity != 0 ?
</code></li>
                
                <li class="pre-context-line"><code>            proc { |a,p| unbound_method.bind(a).call(*p) } :
</code></li>
                
              </ol>
              

              <ol start="1212" class="context" id="12"
                  onclick="toggle(12);">
                <li class="context-line" id="context-12"><code>            proc { |a,p| unbound_method.bind(a).call } ]</code></li>
              </ol>

              
              <ol start="1213" class="post-context"
                  id="post-12" onclick="toggle(12);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def compile(path)
</code></li>
                
                <li class="post-context-line"><code>        keys = []
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to? :to_str
</code></li>
                
                <li class="post-context-line"><code>          pattern = path.to_str.gsub(&#x2F;[^\?\%\\\&#x2F;\:\*\w]&#x2F;) { |c| encoded(c) }
</code></li>
                
                <li class="post-context-line"><code>          pattern.gsub!(&#x2F;((:\w+)|\*)&#x2F;) do |match|
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in compile!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1205"
                  class="pre-context" id="pre-13"
                  onclick="toggle(13);">
                
                <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
</code></li>
                
                <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        pattern, keys           = compile path
</code></li>
                
                <li class="pre-context-line"><code>        conditions, @conditions = @conditions, []
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        [ pattern, keys, conditions, block.arity != 0 ?
</code></li>
                
                <li class="pre-context-line"><code>            proc { |a,p| unbound_method.bind(a).call(*p) } :
</code></li>
                
              </ol>
              

              <ol start="1212" class="context" id="13"
                  onclick="toggle(13);">
                <li class="context-line" id="context-13"><code>            proc { |a,p| unbound_method.bind(a).call } ]</code></li>
              </ol>

              
              <ol start="1213" class="post-context"
                  id="post-13" onclick="toggle(13);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def compile(path)
</code></li>
                
                <li class="post-context-line"><code>        keys = []
</code></li>
                
                <li class="post-context-line"><code>        if path.respond_to? :to_str
</code></li>
                
                <li class="post-context-line"><code>          pattern = path.to_str.gsub(&#x2F;[^\?\%\\\&#x2F;\:\*\w]&#x2F;) { |c| encoded(c) }
</code></li>
                
                <li class="post-context-line"><code>          pattern.gsub!(&#x2F;((:\w+)|\*)&#x2F;) do |match|
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>[]</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="765"
                  class="pre-context" id="pre-14"
                  onclick="toggle(14);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
              </ol>
              

              <ol start="772" class="context" id="14"
                  onclick="toggle(14);">
                <li class="context-line" id="context-14"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="773" class="post-context"
                  id="post-14" onclick="toggle(14);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block (3 levels) in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="765"
                  class="pre-context" id="pre-15"
                  onclick="toggle(15);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
              </ol>
              

              <ol start="772" class="context" id="15"
                  onclick="toggle(15);">
                <li class="context-line" id="context-15"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="773" class="post-context"
                  id="post-15" onclick="toggle(15);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>route_eval</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="781"
                  class="pre-context" id="pre-16"
                  onclick="toggle(16);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      route_eval(&amp;pass_block) if pass_block
</code></li>
                
                <li class="pre-context-line"><code>      route_missing
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run a route block and throw :halt with the result.
</code></li>
                
                <li class="pre-context-line"><code>    def route_eval
</code></li>
                
              </ol>
              

              <ol start="788" class="context" id="16"
                  onclick="toggle(16);">
                <li class="context-line" id="context-16"><code>      throw :halt, yield</code></li>
              </ol>

              
              <ol start="789" class="post-context"
                  id="post-16" onclick="toggle(16);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # If the current request matches pattern and conditions, fill params
</code></li>
                
                <li class="post-context-line"><code>    # with keys and call the given block.
</code></li>
                
                <li class="post-context-line"><code>    # Revert params afterwards.
</code></li>
                
                <li class="post-context-line"><code>    #
</code></li>
                
                <li class="post-context-line"><code>    # Returns pass block.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block (2 levels) in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="765"
                  class="pre-context" id="pre-17"
                  onclick="toggle(17);">
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
                <li class="pre-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
              </ol>
              

              <ol start="772" class="context" id="17"
                  onclick="toggle(17);">
                <li class="context-line" id="context-17"><code>            route_eval { block[*args] }</code></li>
              </ol>

              
              <ol start="773" class="post-context"
                  id="post-17" onclick="toggle(17);">
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
                <li class="post-context-line"><code>        return route!(base.superclass, pass_block)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in process_route</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="814"
                  class="pre-context" id="pre-18"
                  onclick="toggle(18);">
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            {}
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        @params = @original_params.merge(params)
</code></li>
                
                <li class="pre-context-line"><code>        @block_params = values
</code></li>
                
                <li class="pre-context-line"><code>        catch(:pass) do
</code></li>
                
                <li class="pre-context-line"><code>          conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
              </ol>
              

              <ol start="821" class="context" id="18"
                  onclick="toggle(18);">
                <li class="context-line" id="context-18"><code>          block ? block[self, @block_params] : yield(self, @block_params)</code></li>
              </ol>

              
              <ol start="822" class="post-context"
                  id="post-18" onclick="toggle(18);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = @original_params
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # No matching route was found or all routes passed. The default
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="812"
                  class="pre-context" id="pre-19"
                  onclick="toggle(19);">
                
                <li class="pre-context-line"><code>          elsif values.any?
</code></li>
                
                <li class="pre-context-line"><code>            {&#x27;captures&#x27; =&gt; values}
</code></li>
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            {}
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        @params = @original_params.merge(params)
</code></li>
                
                <li class="pre-context-line"><code>        @block_params = values
</code></li>
                
              </ol>
              

              <ol start="819" class="context" id="19"
                  onclick="toggle(19);">
                <li class="context-line" id="context-19"><code>        catch(:pass) do</code></li>
              </ol>

              
              <ol start="820" class="post-context"
                  id="post-19" onclick="toggle(19);">
                
                <li class="post-context-line"><code>          conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
                <li class="post-context-line"><code>          block ? block[self, @block_params] : yield(self, @block_params)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = @original_params
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>process_route</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="812"
                  class="pre-context" id="pre-20"
                  onclick="toggle(20);">
                
                <li class="pre-context-line"><code>          elsif values.any?
</code></li>
                
                <li class="pre-context-line"><code>            {&#x27;captures&#x27; =&gt; values}
</code></li>
                
                <li class="pre-context-line"><code>          else
</code></li>
                
                <li class="pre-context-line"><code>            {}
</code></li>
                
                <li class="pre-context-line"><code>          end
</code></li>
                
                <li class="pre-context-line"><code>        @params = @original_params.merge(params)
</code></li>
                
                <li class="pre-context-line"><code>        @block_params = values
</code></li>
                
              </ol>
              

              <ol start="819" class="context" id="20"
                  onclick="toggle(20);">
                <li class="context-line" id="context-20"><code>        catch(:pass) do</code></li>
              </ol>

              
              <ol start="820" class="post-context"
                  id="post-20" onclick="toggle(20);">
                
                <li class="post-context-line"><code>          conditions.each { |c| throw :pass if c.bind(self).call == false }
</code></li>
                
                <li class="post-context-line"><code>          block ? block[self, @block_params] : yield(self, @block_params)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      @params = @original_params
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="764"
                  class="pre-context" id="pre-21"
                  onclick="toggle(21);">
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
                <li class="pre-context-line"><code>        routes.each do |pattern, keys, conditions, block|
</code></li>
                
              </ol>
              

              <ol start="771" class="context" id="21"
                  onclick="toggle(21);">
                <li class="context-line" id="context-21"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|</code></li>
              </ol>

              
              <ol start="772" class="post-context"
                  id="post-21" onclick="toggle(21);">
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
                <li class="post-context-line"><code>      if base.superclass.respond_to?(:routes)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>each</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="763"
                  class="pre-context" id="pre-22"
                  onclick="toggle(22);">
                
                <li class="pre-context-line"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)
</code></li>
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
              </ol>
              

              <ol start="770" class="context" id="22"
                  onclick="toggle(22);">
                <li class="context-line" id="context-22"><code>        routes.each do |pattern, keys, conditions, block|</code></li>
              </ol>

              
              <ol start="771" class="post-context"
                  id="post-22" onclick="toggle(22);">
                
                <li class="post-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>route!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="763"
                  class="pre-context" id="pre-23"
                  onclick="toggle(23);">
                
                <li class="pre-context-line"><code>      filter! type, base.superclass if base.superclass.respond_to?(:filters)
</code></li>
                
                <li class="pre-context-line"><code>      base.filters[type].each { |args| process_route(*args) }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
</code></li>
                
                <li class="pre-context-line"><code>    def route!(base = settings, pass_block=nil)
</code></li>
                
                <li class="pre-context-line"><code>      if routes = base.routes[@request.request_method]
</code></li>
                
              </ol>
              

              <ol start="770" class="context" id="23"
                  onclick="toggle(23);">
                <li class="context-line" id="context-23"><code>        routes.each do |pattern, keys, conditions, block|</code></li>
              </ol>

              
              <ol start="771" class="post-context"
                  id="post-23" onclick="toggle(23);">
                
                <li class="post-context-line"><code>          pass_block = process_route(pattern, keys, conditions) do |*args|
</code></li>
                
                <li class="post-context-line"><code>            route_eval { block[*args] }
</code></li>
                
                <li class="post-context-line"><code>          end
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      # Run routes defined in superclass.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>dispatch!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="879"
                  class="pre-context" id="pre-24"
                  onclick="toggle(24);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Dispatch a request with error handling.
</code></li>
                
                <li class="pre-context-line"><code>    def dispatch!
</code></li>
                
                <li class="pre-context-line"><code>      static! if settings.static? &amp;&amp; (request.get? || request.head?)
</code></li>
                
                <li class="pre-context-line"><code>      filter! :before
</code></li>
                
              </ol>
              

              <ol start="886" class="context" id="24"
                  onclick="toggle(24);">
                <li class="context-line" id="context-24"><code>      route!</code></li>
              </ol>

              
              <ol start="887" class="post-context"
                  id="post-24" onclick="toggle(24);">
                
                <li class="post-context-line"><code>    rescue ::Exception =&gt; boom
</code></li>
                
                <li class="post-context-line"><code>      handle_exception!(boom)
</code></li>
                
                <li class="post-context-line"><code>    ensure
</code></li>
                
                <li class="post-context-line"><code>      filter! :after unless env[&#x27;sinatra.static_file&#x27;]
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Error handling during requests.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in call!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="699"
                  class="pre-context" id="pre-25"
                  onclick="toggle(25);">
                
                <li class="pre-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
                <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
</code></li>
                
                <li class="pre-context-line"><code>      force_encoding(@params)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @response[&#x27;Content-Type&#x27;] = nil
</code></li>
                
              </ol>
              

              <ol start="706" class="context" id="25"
                  onclick="toggle(25);">
                <li class="context-line" id="context-25"><code>      invoke { dispatch! }</code></li>
              </ol>

              
              <ol start="707" class="post-context"
                  id="post-25" onclick="toggle(25);">
                
                <li class="post-context-line"><code>      invoke { error_block!(response.status) }
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        if Array === body and body[0].respond_to? :content_type
</code></li>
                
                <li class="post-context-line"><code>          content_type body[0].content_type
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          content_type :html
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="864"
                  class="pre-context" id="pre-26"
                  onclick="toggle(26);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="871" class="context" id="26"
                  onclick="toggle(26);">
                <li class="context-line" id="context-26"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="872" class="post-context"
                  id="post-26" onclick="toggle(26);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
                <li class="post-context-line"><code>        body res
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="864"
                  class="pre-context" id="pre-27"
                  onclick="toggle(27);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="871" class="context" id="27"
                  onclick="toggle(27);">
                <li class="context-line" id="context-27"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="872" class="post-context"
                  id="post-27" onclick="toggle(27);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
                <li class="post-context-line"><code>        body res
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>invoke</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="864"
                  class="pre-context" id="pre-28"
                  onclick="toggle(28);">
                
                <li class="pre-context-line"><code>    # Creates a Hash with indifferent access.
</code></li>
                
                <li class="pre-context-line"><code>    def indifferent_hash
</code></li>
                
                <li class="pre-context-line"><code>      Hash.new {|hash,key| hash[key.to_s] if Symbol === key }
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
</code></li>
                
                <li class="pre-context-line"><code>    def invoke
</code></li>
                
              </ol>
              

              <ol start="871" class="context" id="28"
                  onclick="toggle(28);">
                <li class="context-line" id="context-28"><code>      res = catch(:halt) { yield }</code></li>
              </ol>

              
              <ol start="872" class="post-context"
                  id="post-28" onclick="toggle(28);">
                
                <li class="post-context-line"><code>      res = [res] if Fixnum === res or String === res
</code></li>
                
                <li class="post-context-line"><code>      if Array === res and Fixnum === res.first
</code></li>
                
                <li class="post-context-line"><code>        status(res.shift)
</code></li>
                
                <li class="post-context-line"><code>        body(res.pop)
</code></li>
                
                <li class="post-context-line"><code>        headers(*res)
</code></li>
                
                <li class="post-context-line"><code>      elsif res.respond_to? :each
</code></li>
                
                <li class="post-context-line"><code>        body res
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call!</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="699"
                  class="pre-context" id="pre-29"
                  onclick="toggle(29);">
                
                <li class="pre-context-line"><code>      @request  = Request.new(env)
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>      @params   = indifferent_params(@request.params)
</code></li>
                
                <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
</code></li>
                
                <li class="pre-context-line"><code>      force_encoding(@params)
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @response[&#x27;Content-Type&#x27;] = nil
</code></li>
                
              </ol>
              

              <ol start="706" class="context" id="29"
                  onclick="toggle(29);">
                <li class="context-line" id="context-29"><code>      invoke { dispatch! }</code></li>
              </ol>

              
              <ol start="707" class="post-context"
                  id="post-29" onclick="toggle(29);">
                
                <li class="post-context-line"><code>      invoke { error_block!(response.status) }
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
</code></li>
                
                <li class="post-context-line"><code>        if Array === body and body[0].respond_to? :content_type
</code></li>
                
                <li class="post-context-line"><code>          content_type body[0].content_type
</code></li>
                
                <li class="post-context-line"><code>        else
</code></li>
                
                <li class="post-context-line"><code>          content_type :html
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="685"
                  class="pre-context" id="pre-30"
                  onclick="toggle(30);">
                
                <li class="pre-context-line"><code>      @app = app
</code></li>
                
                <li class="pre-context-line"><code>      @template_cache = Tilt::Cache.new
</code></li>
                
                <li class="pre-context-line"><code>      yield self if block_given?
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Rack call interface.
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="692" class="context" id="30"
                  onclick="toggle(30);">
                <li class="context-line" id="context-30"><code>      dup.call!(env)</code></li>
              </ol>

              
              <ol start="693" class="post-context"
                  id="post-30" onclick="toggle(30);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    attr_accessor :env, :request, :response, :params
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def call!(env) # :nodoc:
</code></li>
                
                <li class="post-context-line"><code>      @env      = env
</code></li>
                
                <li class="post-context-line"><code>      @request  = Request.new(env)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;session&#x2F;abstract&#x2F;id.rb</code> in
                <code><strong>context</strong></code>
            </li>

            <li class="code system">
              
              <ol start="188"
                  class="pre-context" id="pre-31"
                  onclick="toggle(31);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def call(env)
</code></li>
                
                <li class="pre-context-line"><code>          context(env)
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def context(env, app=@app)
</code></li>
                
                <li class="pre-context-line"><code>          prepare_session(env)
</code></li>
                
              </ol>
              

              <ol start="195" class="context" id="31"
                  onclick="toggle(31);">
                <li class="context-line" id="context-31"><code>          status, headers, body = app.call(env)</code></li>
              </ol>

              
              <ol start="196" class="post-context"
                  id="post-31" onclick="toggle(31);">
                
                <li class="post-context-line"><code>          commit_session(env, status, headers, body)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        private
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        def initialize_sid
</code></li>
                
                <li class="post-context-line"><code>          @sidbits = @default_options[:sidbits]
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;session&#x2F;abstract&#x2F;id.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="183"
                  class="pre-context" id="pre-32"
                  onclick="toggle(32);">
                
                <li class="pre-context-line"><code>          @default_options = self.class::DEFAULT_OPTIONS.merge(options)
</code></li>
                
                <li class="pre-context-line"><code>          @key = options[:key] || &quot;rack.session&quot;
</code></li>
                
                <li class="pre-context-line"><code>          @cookie_only = @default_options.delete(:cookie_only)
</code></li>
                
                <li class="pre-context-line"><code>          initialize_sid
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        def call(env)
</code></li>
                
              </ol>
              

              <ol start="190" class="context" id="32"
                  onclick="toggle(32);">
                <li class="context-line" id="context-32"><code>          context(env)</code></li>
              </ol>

              
              <ol start="191" class="post-context"
                  id="post-32" onclick="toggle(32);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        def context(env, app=@app)
</code></li>
                
                <li class="post-context-line"><code>          prepare_session(env)
</code></li>
                
                <li class="post-context-line"><code>          status, headers, body = app.call(env)
</code></li>
                
                <li class="post-context-line"><code>          commit_session(env, status, headers, body)
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="15"
                  class="pre-context" id="pre-33"
                  onclick="toggle(33);">
                
                <li class="pre-context-line"><code>      default_options :xss_mode =&gt; :block
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def header
</code></li>
                
                <li class="pre-context-line"><code>        { &#x27;X-XSS-Protection&#x27; =&gt; &quot;1; mode=#{options[:xss_mode]}&quot; }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="22" class="context" id="33"
                  onclick="toggle(33);">
                <li class="context-line" id="context-33"><code>        status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="23" class="post-context"
                  id="post-33" onclick="toggle(33);">
                
                <li class="post-context-line"><code>        [status, header.merge(headers), body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="9"
                  class="pre-context" id="pre-34"
                  onclick="toggle(34);">
                
                <li class="pre-context-line"><code>    #
</code></li>
                
                <li class="pre-context-line"><code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.
</code></li>
                
                <li class="pre-context-line"><code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.
</code></li>
                
                <li class="pre-context-line"><code>    class PathTraversal &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        path_was         = env[&quot;PATH_INFO&quot;]
</code></li>
                
                <li class="pre-context-line"><code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was
</code></li>
                
              </ol>
              

              <ol start="16" class="context" id="34"
                  onclick="toggle(34);">
                <li class="context-line" id="context-34"><code>        app.call env</code></li>
              </ol>

              
              <ol start="17" class="post-context"
                  id="post-34" onclick="toggle(34);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        env[&quot;PATH_INFO&quot;] = path_was
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def cleanup(path)
</code></li>
                
                <li class="post-context-line"><code>        parts     = []
</code></li>
                
                <li class="post-context-line"><code>        unescaped = path.gsub(&#x27;%2e&#x27;, &#x27;.&#x27;).gsub(&#x27;%2f&#x27;, &#x27;&#x2F;&#x27;)
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="10"
                  class="pre-context" id="pre-35"
                  onclick="toggle(35);">
                
                <li class="pre-context-line"><code>    # JSON GET APIs are vulnerable to being embedded as JavaScript while the
</code></li>
                
                <li class="pre-context-line"><code>    # Array prototype has been patched to track data. Checks the referrer
</code></li>
                
                <li class="pre-context-line"><code>    # even on GET requests if the content type is JSON.
</code></li>
                
                <li class="pre-context-line"><code>    class JsonCsrf &lt; Base
</code></li>
                
                <li class="pre-context-line"><code>      default_reaction :deny
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="17" class="context" id="35"
                  onclick="toggle(35);">
                <li class="context-line" id="context-35"><code>        status, headers, body = app.call(env)</code></li>
              </ol>

              
              <ol start="18" class="post-context"
                  id="post-35" onclick="toggle(35);">
                
                <li class="post-context-line"><code>        if headers[&#x27;Content-Type&#x27;].to_s.split(&#x27;;&#x27;, 2).first =~ &#x2F;^\s*application\&#x2F;json\s*$&#x2F;
</code></li>
                
                <li class="post-context-line"><code>          result = react(env) if referrer(env) != Request.new(env).host
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>        result or [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="40"
                  class="pre-context" id="pre-36"
                  onclick="toggle(36);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
                <li class="pre-context-line"><code>        unless accepts? env
</code></li>
                
                <li class="pre-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
</code></li>
                
                <li class="pre-context-line"><code>          result = react env
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
              </ol>
              

              <ol start="47" class="context" id="36"
                  onclick="toggle(36);">
                <li class="context-line" id="context-36"><code>        result or app.call(env)</code></li>
              </ol>

              
              <ol start="48" class="post-context"
                  id="post-36" onclick="toggle(36);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      def react(env)
</code></li>
                
                <li class="post-context-line"><code>        result = send(options[:reaction], env)
</code></li>
                
                <li class="post-context-line"><code>        result if Array === result and result.size == 3
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-protection-1.1.4&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="15"
                  class="pre-context" id="pre-37"
                  onclick="toggle(37);">
                
                <li class="pre-context-line"><code>      default_options :xss_mode =&gt; :block
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def header
</code></li>
                
                <li class="pre-context-line"><code>        { &#x27;X-XSS-Protection&#x27; =&gt; &quot;1; mode=#{options[:xss_mode]}&quot; }
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="22" class="context" id="37"
                  onclick="toggle(37);">
                <li class="context-line" id="context-37"><code>        status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="23" class="post-context"
                  id="post-37" onclick="toggle(37);">
                
                <li class="post-context-line"><code>        [status, header.merge(headers), body]
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
                <li class="post-context-line"><code>end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;nulllogger.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="2"
                  class="pre-context" id="pre-38"
                  onclick="toggle(38);">
                
                <li class="pre-context-line"><code>  class NullLogger
</code></li>
                
                <li class="pre-context-line"><code>    def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>      @app = app
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
                <li class="pre-context-line"><code>      env[&#x27;rack.logger&#x27;] = self
</code></li>
                
              </ol>
              

              <ol start="9" class="context" id="38"
                  onclick="toggle(38);">
                <li class="context-line" id="context-38"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="10" class="post-context"
                  id="post-38" onclick="toggle(38);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def info(progname = nil, &amp;block);  end
</code></li>
                
                <li class="post-context-line"><code>    def debug(progname = nil, &amp;block); end
</code></li>
                
                <li class="post-context-line"><code>    def warn(progname = nil, &amp;block);  end
</code></li>
                
                <li class="post-context-line"><code>    def error(progname = nil, &amp;block); end
</code></li>
                
                <li class="post-context-line"><code>    def fatal(progname = nil, &amp;block); end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="2"
                  class="pre-context" id="pre-39"
                  onclick="toggle(39);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>class Head
</code></li>
                
                <li class="pre-context-line"><code>  def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>    @app = app
</code></li>
                
                <li class="pre-context-line"><code>  end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>  def call(env)
</code></li>
                
              </ol>
              

              <ol start="9" class="context" id="39"
                  onclick="toggle(39);">
                <li class="context-line" id="context-39"><code>    status, headers, body = @app.call(env)</code></li>
              </ol>

              
              <ol start="10" class="post-context"
                  id="post-39" onclick="toggle(39);">
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    if env[&quot;REQUEST_METHOD&quot;] == &quot;HEAD&quot;
</code></li>
                
                <li class="post-context-line"><code>      [status, headers, []]
</code></li>
                
                <li class="post-context-line"><code>    else
</code></li>
                
                <li class="post-context-line"><code>      [status, headers, body]
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>  end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;showexceptions.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="14"
                  class="pre-context" id="pre-40"
                  onclick="toggle(40);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def initialize(app)
</code></li>
                
                <li class="pre-context-line"><code>      @app      = app
</code></li>
                
                <li class="pre-context-line"><code>      @template = ERB.new(TEMPLATE)
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    def call(env)
</code></li>
                
              </ol>
              

              <ol start="21" class="context" id="40"
                  onclick="toggle(40);">
                <li class="context-line" id="context-40"><code>      @app.call(env)</code></li>
              </ol>

              
              <ol start="22" class="post-context"
                  id="post-40" onclick="toggle(40);">
                
                <li class="post-context-line"><code>    rescue Exception =&gt; e
</code></li>
                
                <li class="post-context-line"><code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>      if respond_to?(:prefers_plain_text?) and prefers_plain_text?(env)
</code></li>
                
                <li class="post-context-line"><code>        content_type = &quot;text&#x2F;plain&quot;
</code></li>
                
                <li class="post-context-line"><code>        body = [dump_exception(e)]
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>block in call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1327"
                  class="pre-context" id="pre-41"
                  onclick="toggle(41);">
                
                <li class="pre-context-line"><code>        setup_default_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        setup_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        builder.run new!(*args, &amp;bk)
</code></li>
                
                <li class="pre-context-line"><code>        builder
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="1334" class="context" id="41"
                  onclick="toggle(41);">
                <li class="context-line" id="context-41"><code>        synchronize { prototype.call(env) }</code></li>
              </ol>

              
              <ol start="1335" class="post-context"
                  id="post-41" onclick="toggle(41);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>      def setup_default_middleware(builder)
</code></li>
                
                <li class="post-context-line"><code>        builder.use ShowExceptions       if show_exceptions?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::MethodOverride if method_override?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::Head
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>synchronize</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1396"
                  class="pre-context" id="pre-42"
                  onclick="toggle(42);">
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      @@mutex = Mutex.new
</code></li>
                
                <li class="pre-context-line"><code>      def synchronize(&amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        if lock?
</code></li>
                
                <li class="pre-context-line"><code>          @@mutex.synchronize(&amp;block)
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="1403" class="context" id="42"
                  onclick="toggle(42);">
                <li class="context-line" id="context-42"><code>          yield</code></li>
              </ol>

              
              <ol start="1404" class="post-context"
                  id="post-42" onclick="toggle(42);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    public
</code></li>
                
                <li class="post-context-line"><code>      CALLERS_TO_IGNORE = [ # :nodoc:
</code></li>
                
                <li class="post-context-line"><code>        &#x2F;\&#x2F;sinatra(\&#x2F;(base|main|showexceptions))?\.rb$&#x2F;, # all sinatra code
</code></li>
                
                <li class="post-context-line"><code>        &#x2F;lib\&#x2F;tilt.*\.rb$&#x2F;,                              # all tilt code
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info framework">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;sinatra-1.3.1&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code framework">
              
              <ol start="1327"
                  class="pre-context" id="pre-43"
                  onclick="toggle(43);">
                
                <li class="pre-context-line"><code>        setup_default_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        setup_middleware builder
</code></li>
                
                <li class="pre-context-line"><code>        builder.run new!(*args, &amp;bk)
</code></li>
                
                <li class="pre-context-line"><code>        builder
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      def call(env)
</code></li>
                
              </ol>
              

              <ol start="1334" class="context" id="43"
                  onclick="toggle(43);">
                <li class="context-line" id="context-43"><code>        synchronize { prototype.call(env) }</code></li>
              </ol>

              
              <ol start="1335" class="post-context"
                  id="post-43" onclick="toggle(43);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    private
</code></li>
                
                <li class="post-context-line"><code>      def setup_default_middleware(builder)
</code></li>
                
                <li class="post-context-line"><code>        builder.use ShowExceptions       if show_exceptions?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::MethodOverride if method_override?
</code></li>
                
                <li class="post-context-line"><code>        builder.use Rack::Head
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;lint.rb</code> in
                <code><strong>_call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="41"
                  class="pre-context" id="pre-44"
                  onclick="toggle(44);">
                
                <li class="pre-context-line"><code>      assert(&quot;No env given&quot;) { env }
</code></li>
                
                <li class="pre-context-line"><code>      check_env env
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      env[&#x27;rack.input&#x27;] = InputWrapper.new(env[&#x27;rack.input&#x27;])
</code></li>
                
                <li class="pre-context-line"><code>      env[&#x27;rack.errors&#x27;] = ErrorWrapper.new(env[&#x27;rack.errors&#x27;])
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      ## and returns an Array of exactly three values:
</code></li>
                
              </ol>
              

              <ol start="48" class="context" id="44"
                  onclick="toggle(44);">
                <li class="context-line" id="context-44"><code>      status, headers, @body = @app.call(env)</code></li>
              </ol>

              
              <ol start="49" class="post-context"
                  id="post-44" onclick="toggle(44);">
                
                <li class="post-context-line"><code>      ## The *status*,
</code></li>
                
                <li class="post-context-line"><code>      check_status status
</code></li>
                
                <li class="post-context-line"><code>      ## the *headers*,
</code></li>
                
                <li class="post-context-line"><code>      check_headers headers
</code></li>
                
                <li class="post-context-line"><code>      ## and the *body*.
</code></li>
                
                <li class="post-context-line"><code>      check_content_type status, headers
</code></li>
                
                <li class="post-context-line"><code>      check_content_length status, headers
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;rack-1.3.5&#x2F;lib&#x2F;rack&#x2F;lint.rb</code> in
                <code><strong>call</strong></code>
            </li>

            <li class="code system">
              
              <ol start="29"
                  class="pre-context" id="pre-45"
                  onclick="toggle(45);">
                
                <li class="pre-context-line"><code>    ## after to catch all mistakes.
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    ## = Rack applications
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    ## A Rack application is a Ruby object (not a class) that
</code></li>
                
                <li class="pre-context-line"><code>    ## responds to +call+.
</code></li>
                
                <li class="pre-context-line"><code>    def call(env=nil)
</code></li>
                
              </ol>
              

              <ol start="36" class="context" id="45"
                  onclick="toggle(45);">
                <li class="context-line" id="context-45"><code>      dup._call(env)</code></li>
              </ol>

              
              <ol start="37" class="post-context"
                  id="post-45" onclick="toggle(45);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def _call(env)
</code></li>
                
                <li class="post-context-line"><code>      ## It takes exactly one argument, the *environment*
</code></li>
                
                <li class="post-context-line"><code>      assert(&quot;No env given&quot;) { env }
</code></li>
                
                <li class="post-context-line"><code>      check_env env
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>block in pre_process</strong></code>
            </li>

            <li class="code system">
              
              <ol start="73"
                  class="pre-context" id="pre-46"
                  onclick="toggle(46);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # When we&#x27;re under a non-async framework like rails, we can still spawn
</code></li>
                
                <li class="pre-context-line"><code>      # off async responses using the callback info, so there&#x27;s little point
</code></li>
                
                <li class="pre-context-line"><code>      # in removing this.
</code></li>
                
                <li class="pre-context-line"><code>      response = AsyncResponse
</code></li>
                
                <li class="pre-context-line"><code>      catch(:async) do
</code></li>
                
                <li class="pre-context-line"><code>        # Process the request calling the Rack adapter
</code></li>
                
              </ol>
              

              <ol start="80" class="context" id="46"
                  onclick="toggle(46);">
                <li class="context-line" id="context-46"><code>        response = @app.call(@request.env)</code></li>
              </ol>

              
              <ol start="81" class="post-context"
                  id="post-46" onclick="toggle(46);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      response
</code></li>
                
                <li class="post-context-line"><code>    rescue Exception
</code></li>
                
                <li class="post-context-line"><code>      handle_error
</code></li>
                
                <li class="post-context-line"><code>      terminate_request
</code></li>
                
                <li class="post-context-line"><code>      nil # Signal to post_process that the request could not be processed
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>catch</strong></code>
            </li>

            <li class="code system">
              
              <ol start="71"
                  class="pre-context" id="pre-47"
                  onclick="toggle(47);">
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # When we&#x27;re under a non-async framework like rails, we can still spawn
</code></li>
                
                <li class="pre-context-line"><code>      # off async responses using the callback info, so there&#x27;s little point
</code></li>
                
                <li class="pre-context-line"><code>      # in removing this.
</code></li>
                
                <li class="pre-context-line"><code>      response = AsyncResponse
</code></li>
                
              </ol>
              

              <ol start="78" class="context" id="47"
                  onclick="toggle(47);">
                <li class="context-line" id="context-47"><code>      catch(:async) do</code></li>
              </ol>

              
              <ol start="79" class="post-context"
                  id="post-47" onclick="toggle(47);">
                
                <li class="post-context-line"><code>        # Process the request calling the Rack adapter
</code></li>
                
                <li class="post-context-line"><code>        response = @app.call(@request.env)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      response
</code></li>
                
                <li class="post-context-line"><code>    rescue Exception
</code></li>
                
                <li class="post-context-line"><code>      handle_error
</code></li>
                
                <li class="post-context-line"><code>      terminate_request
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>pre_process</strong></code>
            </li>

            <li class="code system">
              
              <ol start="71"
                  class="pre-context" id="pre-48"
                  onclick="toggle(48);">
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>      # When we&#x27;re under a non-async framework like rails, we can still spawn
</code></li>
                
                <li class="pre-context-line"><code>      # off async responses using the callback info, so there&#x27;s little point
</code></li>
                
                <li class="pre-context-line"><code>      # in removing this.
</code></li>
                
                <li class="pre-context-line"><code>      response = AsyncResponse
</code></li>
                
              </ol>
              

              <ol start="78" class="context" id="48"
                  onclick="toggle(48);">
                <li class="context-line" id="context-48"><code>      catch(:async) do</code></li>
              </ol>

              
              <ol start="79" class="post-context"
                  id="post-48" onclick="toggle(48);">
                
                <li class="post-context-line"><code>        # Process the request calling the Rack adapter
</code></li>
                
                <li class="post-context-line"><code>        response = @app.call(@request.env)
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      response
</code></li>
                
                <li class="post-context-line"><code>    rescue Exception
</code></li>
                
                <li class="post-context-line"><code>      handle_error
</code></li>
                
                <li class="post-context-line"><code>      terminate_request
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>process</strong></code>
            </li>

            <li class="code system">
              
              <ol start="46"
                  class="pre-context" id="pre-49"
                  onclick="toggle(49);">
                
                <li class="pre-context-line"><code>    # is ready to be processed.
</code></li>
                
                <li class="pre-context-line"><code>    def process
</code></li>
                
                <li class="pre-context-line"><code>      if threaded?
</code></li>
                
                <li class="pre-context-line"><code>        @request.threaded = true
</code></li>
                
                <li class="pre-context-line"><code>        EventMachine.defer(method(:pre_process), method(:post_process))
</code></li>
                
                <li class="pre-context-line"><code>      else
</code></li>
                
                <li class="pre-context-line"><code>        @request.threaded = false
</code></li>
                
              </ol>
              

              <ol start="53" class="context" id="49"
                  onclick="toggle(49);">
                <li class="context-line" id="context-49"><code>        post_process(pre_process)</code></li>
              </ol>

              
              <ol start="54" class="post-context"
                  id="post-49" onclick="toggle(49);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    def pre_process
</code></li>
                
                <li class="post-context-line"><code>      # Add client info to the request env
</code></li>
                
                <li class="post-context-line"><code>      @request.remote_address = remote_address
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in
                <code><strong>receive_data</strong></code>
            </li>

            <li class="code system">
              
              <ol start="31"
                  class="pre-context" id="pre-50"
                  onclick="toggle(50);">
                
                <li class="pre-context-line"><code>      @request  = Request.new
</code></li>
                
                <li class="pre-context-line"><code>      @response = Response.new
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>    # Called when data is received from the client.
</code></li>
                
                <li class="pre-context-line"><code>    def receive_data(data)
</code></li>
                
                <li class="pre-context-line"><code>      trace { data }
</code></li>
                
              </ol>
              

              <ol start="38" class="context" id="50"
                  onclick="toggle(50);">
                <li class="context-line" id="context-50"><code>      process if @request.parse(data)</code></li>
              </ol>

              
              <ol start="39" class="post-context"
                  id="post-50" onclick="toggle(50);">
                
                <li class="post-context-line"><code>    rescue InvalidRequest =&gt; e
</code></li>
                
                <li class="post-context-line"><code>      log &quot;!! Invalid request&quot;
</code></li>
                
                <li class="post-context-line"><code>      log_error e
</code></li>
                
                <li class="post-context-line"><code>      close_connection
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>    # Called when all data was received and the request
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;eventmachine-0.12.10&#x2F;lib&#x2F;eventmachine.rb</code> in
                <code><strong>run_machine</strong></code>
            </li>

            <li class="code system">
              
              <ol start="249"
                  class="pre-context" id="pre-51"
                  onclick="toggle(51);">
                
                <li class="pre-context-line"><code>        @reactor_running = true
</code></li>
                
                <li class="pre-context-line"><code>        initialize_event_machine
</code></li>
                
                <li class="pre-context-line"><code>        (b = blk || block) and add_timer(0, b)
</code></li>
                
                <li class="pre-context-line"><code>        if @next_tick_queue &amp;&amp; !@next_tick_queue.empty?
</code></li>
                
                <li class="pre-context-line"><code>          add_timer(0) { signal_loopbreak }
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>        @reactor_thread = Thread.current
</code></li>
                
              </ol>
              

              <ol start="256" class="context" id="51"
                  onclick="toggle(51);">
                <li class="context-line" id="context-51"><code>        run_machine</code></li>
              </ol>

              
              <ol start="257" class="post-context"
                  id="post-51" onclick="toggle(51);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        until @tails.empty?
</code></li>
                
                <li class="post-context-line"><code>          @tails.pop.call
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        begin
</code></li>
                
                <li class="post-context-line"><code>          release_machine
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;eventmachine-0.12.10&#x2F;lib&#x2F;eventmachine.rb</code> in
                <code><strong>run</strong></code>
            </li>

            <li class="code system">
              
              <ol start="249"
                  class="pre-context" id="pre-52"
                  onclick="toggle(52);">
                
                <li class="pre-context-line"><code>        @reactor_running = true
</code></li>
                
                <li class="pre-context-line"><code>        initialize_event_machine
</code></li>
                
                <li class="pre-context-line"><code>        (b = blk || block) and add_timer(0, b)
</code></li>
                
                <li class="pre-context-line"><code>        if @next_tick_queue &amp;&amp; !@next_tick_queue.empty?
</code></li>
                
                <li class="pre-context-line"><code>          add_timer(0) { signal_loopbreak }
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>        @reactor_thread = Thread.current
</code></li>
                
              </ol>
              

              <ol start="256" class="context" id="52"
                  onclick="toggle(52);">
                <li class="context-line" id="context-52"><code>        run_machine</code></li>
              </ol>

              
              <ol start="257" class="post-context"
                  id="post-52" onclick="toggle(52);">
                
                <li class="post-context-line"><code>      ensure
</code></li>
                
                <li class="post-context-line"><code>        until @tails.empty?
</code></li>
                
                <li class="post-context-line"><code>          @tails.pop.call
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>
</code></li>
                
                <li class="post-context-line"><code>        begin
</code></li>
                
                <li class="post-context-line"><code>          release_machine
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;backends&#x2F;base.rb</code> in
                <code><strong>start</strong></code>
            </li>

            <li class="code system">
              
              <ol start="54"
                  class="pre-context" id="pre-53"
                  onclick="toggle(53);">
                
                <li class="pre-context-line"><code>          @running = true
</code></li>
                
                <li class="pre-context-line"><code>        end
</code></li>
                
                <li class="pre-context-line"><code>        
</code></li>
                
                <li class="pre-context-line"><code>        # Allow for early run up of eventmachine.
</code></li>
                
                <li class="pre-context-line"><code>        if EventMachine.reactor_running?
</code></li>
                
                <li class="pre-context-line"><code>          starter.call
</code></li>
                
                <li class="pre-context-line"><code>        else
</code></li>
                
              </ol>
              

              <ol start="61" class="context" id="53"
                  onclick="toggle(53);">
                <li class="context-line" id="context-53"><code>          EventMachine.run(&amp;starter)</code></li>
              </ol>

              
              <ol start="62" class="post-context"
                  id="post-53" onclick="toggle(53);">
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>      
</code></li>
                
                <li class="post-context-line"><code>      # Stop of the backend from accepting new connections.
</code></li>
                
                <li class="post-context-line"><code>      def stop
</code></li>
                
                <li class="post-context-line"><code>        @running  = false
</code></li>
                
                <li class="post-context-line"><code>        @stopping = true
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;server.rb</code> in
                <code><strong>start</strong></code>
            </li>

            <li class="code system">
              
              <ol start="152"
                  class="pre-context" id="pre-54"
                  onclick="toggle(54);">
                
                <li class="pre-context-line"><code>      log   &quot;&gt;&gt; Thin web server (v#{VERSION::STRING} codename #{VERSION::CODENAME})&quot;
</code></li>
                
                <li class="pre-context-line"><code>      debug &quot;&gt;&gt; Debugging ON&quot;
</code></li>
                
                <li class="pre-context-line"><code>      trace &quot;&gt;&gt; Tracing ON&quot;
</code></li>
                
                <li class="pre-context-line"><code>      
</code></li>
                
                <li class="pre-context-line"><code>      log &quot;&gt;&gt; Maximum connections set to #{@backend.maximum_connections}&quot;
</code></li>
                
                <li class="pre-context-line"><code>      log &quot;&gt;&gt; Listening on #{@backend}, CTRL+C to stop&quot;
</code></li>
                
                <li class="pre-context-line"><code>      
</code></li>
                
              </ol>
              

              <ol start="159" class="context" id="54"
                  onclick="toggle(54);">
                <li class="context-line" id="context-54"><code>      @backend.start</code></li>
              </ol>

              
              <ol start="160" class="post-context"
                  id="post-54" onclick="toggle(54);">
                
                <li class="post-context-line"><code>    end
</code></li>
                
                <li class="post-context-line"><code>    alias :start! :start
</code></li>
                
                <li class="post-context-line"><code>    
</code></li>
                
                <li class="post-context-line"><code>    # == Gracefull shutdown
</code></li>
                
                <li class="post-context-line"><code>    # Stops the server after processing all current connections.
</code></li>
                
                <li class="post-context-line"><code>    # As soon as this method is called, the server stops accepting
</code></li>
                
                <li class="post-context-line"><code>    # new requests and wait for all current connections to finish.
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;controllers&#x2F;controller.rb</code> in
                <code><strong>start</strong></code>
            </li>

            <li class="code system">
              
              <ol start="79"
                  class="pre-context" id="pre-55"
                  onclick="toggle(55);">
                
                <li class="pre-context-line"><code>        # If a stats URL is specified, wrap in Stats adapter
</code></li>
                
                <li class="pre-context-line"><code>        server.app = Stats::Adapter.new(server.app, @options[:stats]) if @options[:stats]
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>        # Register restart procedure which just start another process with same options,
</code></li>
                
                <li class="pre-context-line"><code>        # so that&#x27;s why this is done here.
</code></li>
                
                <li class="pre-context-line"><code>        server.on_restart { Command.run(:start, @options) }
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
              </ol>
              

              <ol start="86" class="context" id="55"
                  onclick="toggle(55);">
                <li class="context-line" id="context-55"><code>        server.start</code></li>
              </ol>

              
              <ol start="87" class="post-context"
                  id="post-55" onclick="toggle(55);">
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    
</code></li>
                
                <li class="post-context-line"><code>      def stop
</code></li>
                
                <li class="post-context-line"><code>        raise OptionRequired, :pid unless @options[:pid]
</code></li>
                
                <li class="post-context-line"><code>      
</code></li>
                
                <li class="post-context-line"><code>        tail_log(@options[:log]) do
</code></li>
                
                <li class="post-context-line"><code>          if Server.kill(@options[:pid], @options[:force] ? 0 : (@options[:timeout] || 60))
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;runner.rb</code> in
                <code><strong>run_command</strong></code>
            </li>

            <li class="code system">
              
              <ol start="178"
                  class="pre-context" id="pre-56"
                  onclick="toggle(56);">
                
                <li class="pre-context-line"><code>      when cluster? then Controllers::Cluster.new(@options)
</code></li>
                
                <li class="pre-context-line"><code>      when service? then Controllers::Service.new(@options)
</code></li>
                
                <li class="pre-context-line"><code>      else               Controllers::Controller.new(@options)
</code></li>
                
                <li class="pre-context-line"><code>      end
</code></li>
                
                <li class="pre-context-line"><code>      
</code></li>
                
                <li class="pre-context-line"><code>      if controller.respond_to?(@command)
</code></li>
                
                <li class="pre-context-line"><code>        begin
</code></li>
                
              </ol>
              

              <ol start="185" class="context" id="56"
                  onclick="toggle(56);">
                <li class="context-line" id="context-56"><code>          controller.send(@command, *@arguments)</code></li>
              </ol>

              
              <ol start="186" class="post-context"
                  id="post-56" onclick="toggle(56);">
                
                <li class="post-context-line"><code>        rescue RunnerError =&gt; e
</code></li>
                
                <li class="post-context-line"><code>          abort e.message
</code></li>
                
                <li class="post-context-line"><code>        end
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
                <li class="post-context-line"><code>        abort &quot;Invalid options for command: #{@command}&quot;
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
                <li class="post-context-line"><code>    end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;lib&#x2F;thin&#x2F;runner.rb</code> in
                <code><strong>run!</strong></code>
            </li>

            <li class="code system">
              
              <ol start="144"
                  class="pre-context" id="pre-57"
                  onclick="toggle(57);">
                
                <li class="pre-context-line"><code>      @arguments = @argv
</code></li>
                
                <li class="pre-context-line"><code>    end
</code></li>
                
                <li class="pre-context-line"><code>        
</code></li>
                
                <li class="pre-context-line"><code>    # Parse the current shell arguments and run the command.
</code></li>
                
                <li class="pre-context-line"><code>    # Exits on error.
</code></li>
                
                <li class="pre-context-line"><code>    def run!
</code></li>
                
                <li class="pre-context-line"><code>      if self.class.commands.include?(@command)
</code></li>
                
              </ol>
              

              <ol start="151" class="context" id="57"
                  onclick="toggle(57);">
                <li class="context-line" id="context-57"><code>        run_command</code></li>
              </ol>

              
              <ol start="152" class="post-context"
                  id="post-57" onclick="toggle(57);">
                
                <li class="post-context-line"><code>      elsif @command.nil?
</code></li>
                
                <li class="post-context-line"><code>        puts &quot;Command required&quot;
</code></li>
                
                <li class="post-context-line"><code>        puts @parser
</code></li>
                
                <li class="post-context-line"><code>        exit 1  
</code></li>
                
                <li class="post-context-line"><code>      else
</code></li>
                
                <li class="post-context-line"><code>        abort &quot;Unknown command: #{@command}. Use one of #{self.class.commands.join(&#x27;, &#x27;)}&quot;
</code></li>
                
                <li class="post-context-line"><code>      end
</code></li>
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;gems&#x2F;thin-1.3.1&#x2F;bin&#x2F;thin</code> in
                <code><strong>&lt;top (required)&gt;</strong></code>
            </li>

            <li class="code system">
              
              <ol start="1"
                  class="pre-context" id="pre-58"
                  onclick="toggle(58);">
                
                <li class="pre-context-line"><code>#!&#x2F;usr&#x2F;bin&#x2F;env ruby
</code></li>
                
                <li class="pre-context-line"><code># Thin command line interface script.
</code></li>
                
                <li class="pre-context-line"><code># Run &lt;tt&gt;thin -h&lt;&#x2F;tt&gt; to get more usage.
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>require &#x27;thin&#x27;
</code></li>
                
              </ol>
              

              <ol start="6" class="context" id="58"
                  onclick="toggle(58);">
                <li class="context-line" id="context-58"><code>Thin::Runner.new(ARGV).run!</code></li>
              </ol>

              
              <ol start="7" class="post-context"
                  id="post-58" onclick="toggle(58);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;bin&#x2F;thin</code> in
                <code><strong>load</strong></code>
            </li>

            <li class="code system">
              
              <ol start="12"
                  class="pre-context" id="pre-59"
                  onclick="toggle(59);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>if ARGV.first =~ &#x2F;^_(.*)_$&#x2F; and Gem::Version.correct? $1 then
</code></li>
                
                <li class="pre-context-line"><code>  version = $1
</code></li>
                
                <li class="pre-context-line"><code>  ARGV.shift
</code></li>
                
                <li class="pre-context-line"><code>end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>gem &#x27;thin&#x27;, version
</code></li>
                
              </ol>
              

              <ol start="19" class="context" id="59"
                  onclick="toggle(59);">
                <li class="context-line" id="context-59"><code>load Gem.bin_path(&#x27;thin&#x27;, &#x27;thin&#x27;, version)</code></li>
              </ol>

              
              <ol start="20" class="post-context"
                  id="post-59" onclick="toggle(59);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      
          

            <li class="frame-info system">
              <code>&#x2F;Users&#x2F;rlyon&#x2F;.rvm&#x2F;gems&#x2F;ruby-1.9.2-p290@smoke_server&#x2F;bin&#x2F;thin</code> in
                <code><strong>&lt;main&gt;</strong></code>
            </li>

            <li class="code system">
              
              <ol start="12"
                  class="pre-context" id="pre-60"
                  onclick="toggle(60);">
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>if ARGV.first =~ &#x2F;^_(.*)_$&#x2F; and Gem::Version.correct? $1 then
</code></li>
                
                <li class="pre-context-line"><code>  version = $1
</code></li>
                
                <li class="pre-context-line"><code>  ARGV.shift
</code></li>
                
                <li class="pre-context-line"><code>end
</code></li>
                
                <li class="pre-context-line"><code>
</code></li>
                
                <li class="pre-context-line"><code>gem &#x27;thin&#x27;, version
</code></li>
                
              </ol>
              

              <ol start="19" class="context" id="60"
                  onclick="toggle(60);">
                <li class="context-line" id="context-60"><code>load Gem.bin_path(&#x27;thin&#x27;, &#x27;thin&#x27;, version)</code></li>
              </ol>

              
              <ol start="20" class="post-context"
                  id="post-60" onclick="toggle(60);">
                
              </ol>
              
              <div class="clear"></div>
            </li>

          

        
      

      </ul>
    </div> <!-- /BACKTRACE -->

    <div id="get">
      <h3 id="get-info">GET</h3>
      
        <p class="no-data">No GET data.</p>
      
      <div class="clear"></div>
    </div> <!-- /GET -->

    <div id="post">
      <h3 id="post-info">POST</h3>
      
        <p class="no-data">No POST data.</p>
      
      <div class="clear"></div>
    </div> <!-- /POST -->

    <div id="cookies">
      <h3 id="cookie-info">COOKIES</h3>
      
        <p class="no-data">No cookie data.</p>
      
      <div class="clear"></div>
    </div> <!-- /COOKIES -->

    <div id="rack">
      <h3 id="env-info">Rack ENV</h3>
      <table class="req">
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
         
         <tr>
           <td>GATEWAY_INTERFACE</td>
           <td class="code"><div>CGI&#x2F;1.2</div></td>
         </tr>
         
         <tr>
           <td>HTTP_ACCEPT</td>
           <td class="code"><div>text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q=0.9,*&#x2F;*;q=0.8</div></td>
         </tr>
         
         <tr>
           <td>HTTP_ACCEPT_CHARSET</td>
           <td class="code"><div>ISO-8859-1,utf-8;q=0.7,*;q=0.3</div></td>
         </tr>
         
         <tr>
           <td>HTTP_ACCEPT_ENCODING</td>
           <td class="code"><div>gzip,deflate,sdch</div></td>
         </tr>
         
         <tr>
           <td>HTTP_ACCEPT_LANGUAGE</td>
           <td class="code"><div>en-US,en;q=0.8</div></td>
         </tr>
         
         <tr>
           <td>HTTP_CACHE_CONTROL</td>
           <td class="code"><div>max-age=0</div></td>
         </tr>
         
         <tr>
           <td>HTTP_CONNECTION</td>
           <td class="code"><div>keep-alive</div></td>
         </tr>
         
         <tr>
           <td>HTTP_HOST</td>
           <td class="code"><div>localhost:8080</div></td>
         </tr>
         
         <tr>
           <td>HTTP_USER_AGENT</td>
           <td class="code"><div>Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit&#x2F;535.2 (KHTML, like Gecko) Chrome&#x2F;15.0.874.121 Safari&#x2F;535.2</div></td>
         </tr>
         
         <tr>
           <td>HTTP_VERSION</td>
           <td class="code"><div>HTTP&#x2F;1.1</div></td>
         </tr>
         
         <tr>
           <td>PATH_INFO</td>
           <td class="code"><div>&#x2F;</div></td>
         </tr>
         
         <tr>
           <td>QUERY_STRING</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>REMOTE_ADDR</td>
           <td class="code"><div>127.0.0.1</div></td>
         </tr>
         
         <tr>
           <td>REQUEST_METHOD</td>
           <td class="code"><div>GET</div></td>
         </tr>
         
         <tr>
           <td>REQUEST_PATH</td>
           <td class="code"><div>&#x2F;</div></td>
         </tr>
         
         <tr>
           <td>REQUEST_URI</td>
           <td class="code"><div>&#x2F;</div></td>
         </tr>
         
         <tr>
           <td>SCRIPT_NAME</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>SERVER_NAME</td>
           <td class="code"><div>localhost</div></td>
         </tr>
         
         <tr>
           <td>SERVER_PORT</td>
           <td class="code"><div>8080</div></td>
         </tr>
         
         <tr>
           <td>SERVER_PROTOCOL</td>
           <td class="code"><div>HTTP&#x2F;1.1</div></td>
         </tr>
         
         <tr>
           <td>SERVER_SOFTWARE</td>
           <td class="code"><div>thin 1.3.1 codename Triple Espresso</div></td>
         </tr>
         
         <tr>
           <td>async.callback</td>
           <td class="code"><div>#&lt;Method: Thin::Connection#post_process&gt;</div></td>
         </tr>
         
         <tr>
           <td>async.close</td>
           <td class="code"><div>#&lt;EventMachine::DefaultDeferrable:0x00000100f9a0a0&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.errors</td>
           <td class="code"><div>#&lt;Object:0x00000101b668c0&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.input</td>
           <td class="code"><div>#&lt;Rack::Lint::InputWrapper:0x00000100f94ab0 @input=#&lt;StringIO:0x00000100fe8318&gt;&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.logger</td>
           <td class="code"><div>#&lt;Rack::NullLogger:0x0000010316c818 @app=#&lt;Rack::Protection::FrameOptions:0x0000010316c8e0 @app=#&lt;Rack::Protection::IPSpoofing:0x0000010316c9f8 @app=#&lt;Rack::Protection::JsonCsrf:0x0000010316ca70 @app=#&lt;Rack::Protection::PathTraversal:0x0000010316cae8 @app=#&lt;Rack::Protection::XSSHeader:0x0000010316cb88 @app=#&lt;Rack::Session::Cookie:0x00000100d66a90 @secret=&quot;afiefnaioasdfjhkdku47f34jafusduf47fasdfe&quot;, @coder=#&lt;Rack::Session::Cookie::Base64::Marshal:0x00000100d66a68&gt;, @app=#&lt;Smoke::Web::App:0x00000100f66db8 @default_layout=:layout, @app=nil, @template_cache=#&lt;Tilt::Cache:0x00000100f66d90 @cache={}&gt;&gt;, @default_options={:key=&gt;&quot;sinatra.session&quot;, :path=&gt;&quot;&#x2F;&quot;, :domain=&gt;nil, :expire_after=&gt;nil, :secure=&gt;false, :httponly=&gt;true, :defer=&gt;false, :renew=&gt;false, :sidbits=&gt;128, :secure_random=&gt;SecureRandom, :secret=&gt;&quot;afiefnaioasdfjhkdku47f34jafusduf47fasdfe&quot;, :coder=&gt;#&lt;Rack::Session::Cookie::Base64::Marshal:0x00000100d66a68&gt;}, @key=&quot;sinatra.session&quot;, @cookie_only=true, @sidbits=128, @sid_secure=SecureRandom, @sid_length=32&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :xss_mode=&gt;:block, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;, @options={:reaction=&gt;:default_reaction, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :xss_mode=&gt;:block, :frame_options=&gt;:sameorigin, :except=&gt;[:escaped_params, :session_hijacking, :remote_token]}&gt;&gt;</div></td>
         </tr>
         
         <tr>
           <td>rack.multiprocess</td>
           <td class="code"><div>false</div></td>
         </tr>
         
         <tr>
           <td>rack.multithread</td>
           <td class="code"><div>false</div></td>
         </tr>
         
         <tr>
           <td>rack.request.cookie_hash</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.query_hash</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.request.query_string</td>
           <td class="code"><div></div></td>
         </tr>
         
         <tr>
           <td>rack.run_once</td>
           <td class="code"><div>false</div></td>
         </tr>
         
         <tr>
           <td>rack.session</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.session.options</td>
           <td class="code"><div>{:key=&gt;&quot;sinatra.session&quot;, :path=&gt;&quot;&#x2F;&quot;, :domain=&gt;nil, :expire_after=&gt;nil, :secure=&gt;false, :httponly=&gt;true, :defer=&gt;false, :renew=&gt;false, :sidbits=&gt;128, :secure_random=&gt;SecureRandom, :secret=&gt;&quot;afiefnaioasdfjhkdku47f34jafusduf47fasdfe&quot;, :coder=&gt;#&lt;Rack::Session::Cookie::Base64::Marshal:0x00000100d66a68&gt;, :id=&gt;nil}</div></td>
         </tr>
         
         <tr>
           <td>rack.session.unpacked_cookie_data</td>
           <td class="code"><div>{}</div></td>
         </tr>
         
         <tr>
           <td>rack.url_scheme</td>
           <td class="code"><div>http</div></td>
         </tr>
         
         <tr>
           <td>rack.version</td>
           <td class="code"><div>[1, 0]</div></td>
         </tr>
         
         <tr>
           <td>sinatra.error</td>
           <td class="code"><div>#&lt;Errno::ENOENT: No such file or directory - &#x2F;Users&#x2F;rlyon&#x2F;src&#x2F;ruby&#x2F;sinatra&#x2F;smoke_server&#x2F;lib&#x2F;smoke&#x2F;web&#x2F;views&#x2F;index.erb&gt;</div></td>
         </tr>
         
      </table>
      <div class="clear"></div>
    </div> <!-- /RACK ENV -->

    <p id="explanation">You're seeing this error because you have
enabled the <code>show_exceptions</code> setting.</p>
  </div> <!-- /WRAP -->
  </body>
</html>
GET /__sinatra__/500.png HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Cache-Control: max-age=0
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: */*
Referer: http://localhost:8080/
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 43
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello __sinatra__ showing files in: 500.png
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Cache-Control: max-age=0
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 2523
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

<html>
	<head>
		<title>Smoke Web</title>
	</head>

	<body>
		<h1>Home</h1>

<p>
	<a href="/login">Login</a>
</p>
		
<p>Bacon ipsum dolor sit amet culpa salami meatball shank, consequat cillum aute andouille. Ball tip consectetur tongue bacon, leberkäse pork belly corned beef. Occaecat chuck veniam, in dolor eu ut. Eu sirloin mollit reprehenderit shoulder consectetur, sunt tongue strip steak short loin. Salami cillum dolore ad, consequat aliqua magna aliquip minim elit jowl pork belly ea boudin. Sausage enim aliqua pork chop officia, exercitation ut et anim laborum jowl aute nisi ut. Magna venison dolor tempor.</p>

<p>Ham minim chicken swine, rump occaecat nisi commodo officia. Pancetta fatback swine nisi, reprehenderit bresaola ground round minim bacon excepteur eiusmod. Irure fugiat qui, swine laboris biltong ut aliqua aliquip occaecat et. Culpa turducken ullamco filet mignon, duis dolore aute fugiat. Exercitation est velit, anim cow pancetta pastrami laboris consequat. Jerky shoulder beef, nisi t-bone chuck cillum. Tenderloin aliquip eiusmod eu, elit drumstick capicola do meatloaf.</p>

<p>Exercitation pork tenderloin rump prosciutto. Pork non deserunt nisi quis. Labore in leberkäse minim tenderloin. T-bone voluptate mollit, exercitation venison boudin swine ut tail turducken eu. Biltong id deserunt, kielbasa ut et pork loin sed cow ea. Laborum irure nostrud dolor cillum drumstick. Officia pork loin pancetta fatback, strip steak turkey eu.</p>

<p>Bacon aute labore, fugiat frankfurter ullamco in ham meatloaf in occaecat duis cillum. Sed incididunt meatball consequat in tongue. Ut filet mignon dolore salami pariatur, beef ribs tail tempor ullamco boudin et capicola ham hock. Consequat in boudin aliquip, sunt meatloaf nulla ground round culpa. Minim consectetur beef ribs, t-bone in ham short loin venison short ribs shank qui leberkäse cupidatat aute irure. Commodo minim ad, irure t-bone beef turkey shoulder occaecat elit in. Tenderloin veniam chuck, non aute nulla est andouille corned beef shoulder capicola ut pig esse.</p>

<p>Exercitation shoulder jerky aliqua pork loin excepteur. Short ribs capicola minim voluptate tri-tip, proident incididunt cupidatat pastrami. Bacon aliquip nisi, nostrud incididunt laboris mollit sausage quis. Ribeye veniam est, sed tail officia prosciutto cillum spare ribs. Deserunt nisi nulla turkey enim. Pork belly pork loin incididunt bresaola, ham mollit labore qui beef ribs consequat. Venison brisket rump aute reprehenderit.</p>
	</body>
</html>
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
GET /login HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Referer: http://localhost:8080/
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 362
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

<html>
	<head>
		<title>Smoke Web</title>
	</head>

	<body>
		<h1>Login</h1>

<form method="POST" action="/login">
	<p>
		Please enter you username: <br />
		<input type="text" name="username" />
	</p>
	<p>
		Enter your password: <br />
		<input type="password" name="password" />
	</p>
	<p>
		<input type="submit" value="Login" />
	</p>
</form>
	</body>
</html>
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
GET /login HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Referer: http://localhost:8080/
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 362
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

<html>
	<head>
		<title>Smoke Web</title>
	</head>

	<body>
		<h1>Login</h1>

<form method="POST" action="/login">
	<p>
		Please enter you username: <br />
		<input type="text" name="username" />
	</p>
	<p>
		Enter your password: <br />
		<input type="password" name="password" />
	</p>
	<p>
		<input type="submit" value="Login" />
	</p>
</form>
	</body>
</html>
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
POST /login HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Content-Length: 25
Cache-Control: max-age=0
Origin: http://localhost:8080
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Content-Type: application/x-www-form-urlencoded
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Referer: http://localhost:8080/login
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3

username=rob&password=rob
HTTP/1.1 303 See Other
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Location: http://localhost:8080/
Content-Length: 0
Set-Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf; path=/; HttpOnly
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Cache-Control: max-age=0
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Referer: http://localhost:8080/login
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 188
Set-Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf; path=/; HttpOnly
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

<html>
	<head>
		<title>Smoke Web</title>
	</head>

	<body>
		<h1>Dashboard</h1>

<p>Hello rob, you have reached the dashboard.</p>

<p>
	<a href="/logout">Logout</a>
</p>
	</body>
</html>
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
GET /bucket HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 33
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello bucket listing your buckets
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
GET /bucket/ HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 404 Not Found
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
X-Cascade: pass
Content-Length: 443
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

<!DOCTYPE html>
<html>
<head>
  <style type="text/css">
  body { text-align:center;font-family:helvetica,arial;font-size:22px;
    color:#888;margin:20px}
  #c {margin:0 auto;width:500px;text-align:left}
  </style>
</head>
<body>
  <h2>Sinatra doesn&rsquo;t know this ditty.</h2>
  <img src='http://localhost:8080/__sinatra__/404.png'>
  <div id="c">
    Try this:
    <pre>get '/bucket/' do
  "Hello World"
end</pre>
  </div>
</body>
</html>
GET /__sinatra__/404.png HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: */*
Referer: http://localhost:8080/bucket/
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 43
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello __sinatra__ showing files in: 404.png
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
GET /rlyon/ HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 404 Not Found
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
X-Cascade: pass
Content-Length: 442
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

<!DOCTYPE html>
<html>
<head>
  <style type="text/css">
  body { text-align:center;font-family:helvetica,arial;font-size:22px;
    color:#888;margin:20px}
  #c {margin:0 auto;width:500px;text-align:left}
  </style>
</head>
<body>
  <h2>Sinatra doesn&rsquo;t know this ditty.</h2>
  <img src='http://localhost:8080/__sinatra__/404.png'>
  <div id="c">
    Try this:
    <pre>get '/rlyon/' do
  "Hello World"
end</pre>
  </div>
</body>
</html>
GET /__sinatra__/404.png HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: */*
Referer: http://localhost:8080/rlyon/
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 43
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello __sinatra__ showing files in: 404.png
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
GET /rlyon HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 32
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello rlyon listing your buckets
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
>> Exiting!
>> Writing PID to tmp/pids/thin.8080.pid
>> Thin web server (v1.3.1 codename Triple Espresso)
>> Debugging ON
>> Tracing ON
>> Maximum connections set to 1024
>> Listening on 127.0.0.1:8080, CTRL+C to stop
GET /rlyon HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Cache-Control: max-age=0
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 32
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello rlyon listing your buckets
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
GET /rlyon/ HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 32
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello rlyon listing your buckets
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
GET /rlyon/how HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 33
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello rlyon showing files in: how
GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3
Cookie: sinatra.session=BAh7CkkiD3Nlc3Npb25faWQGOgZFRiJFMDFkODRkYTMxMDBhY2IyNzA3Zjk5%0AYjcwZDg3YmYyNTZkZmFhM2U3MGI0ZDY4ZDdjMTU3ZWI3ZjYyMDYzNTk5NEki%0AFHNpbmF0cmEuc2Vzc2lvbgY7AEZUSSINdXNlcm5hbWUGOwBGSSIIcm9iBjsA%0AVEkiD2FjY2Vzc19rZXkGOwBGSSIJeHh4eAY7AEZJIg9zZWNyZXRfa2V5BjsA%0ARkkiCXh4eHgGOwBG%0A--73e40523ed73eb474bb7040894e0dd8e163ec6cf

HTTP/1.1 200 OK
X-Frame-Options: sameorigin
X-XSS-Protection: 1; mode=block
Content-Type: text/html;charset=utf-8
Content-Length: 38
Connection: keep-alive
Server: thin 1.3.1 codename Triple Espresso

Hello favicon.ico listing your buckets
>> Exiting!
